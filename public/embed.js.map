{
  "version": 3,
  "sources": ["../node_modules/@curia_/iframe-api-proxy/src/types/ApiTypes.ts", "../node_modules/@curia_/iframe-api-proxy/src/types/MessageTypes.ts", "../node_modules/@curia_/iframe-api-proxy/src/types/ProxyTypes.ts", "../node_modules/@curia_/iframe-api-proxy/src/client/ApiProxyClient.ts", "../node_modules/@curia_/iframe-api-proxy/src/server/ApiProxyServer.ts", "../node_modules/@curia_/iframe-api-proxy/src/index.ts", "../src/lib/embed/core/EmbedConfig.ts", "../src/lib/embed/plugin-host/InternalPluginHost.ts", "../src/lib/SessionManager.ts", "../src/lib/embed/services/SessionServiceProxy.ts", "../src/lib/embed/styling/utils/gradients.ts", "../src/lib/embed/styling/utils/icons.ts", "../src/lib/embed/styling/reset.css", "../src/lib/embed/styling/styles.css", "../src/lib/embed/styling/sidebar.css", "../src/lib/embed/styling/preview.css", "../src/lib/embed/styling/profile-menu.css", "../src/lib/embed/styling/mobile.css", "../src/lib/embed/styling/themes/light.css", "../src/lib/embed/styling/themes/dark.css", "../src/lib/embed/styling/index.ts", "../src/lib/embed/components/sidebar/CommunityItem.ts", "../src/lib/embed/components/sidebar/CommunityPreview.ts", "../src/lib/embed/components/profile/UserProfile.ts", "../src/lib/embed/components/mobile/MobileBottomNav.ts", "../src/lib/embed/components/mobile/MobileCommunityPicker.ts", "../src/lib/embed/components/mobile/MobileProfileDrawer.ts", "../src/lib/embed/utils/responsive.ts", "../src/lib/embed/components/sidebar/CommunitySidebar.ts", "../src/lib/embed/services/auth/AuthenticationService.ts", "../src/lib/embed/services/signature/FrontendSignatureValidator.ts", "../src/lib/embed/services/messaging/MessageRouter.ts", "../src/lib/embed/services/iframe/IframeManager.ts", "../src/lib/embed/embed-entry.ts"],
  "sourcesContent": ["/**\n * API Types - Shared interfaces for all API operations\n * \n * These types match the existing host service API structure\n * and ensure type safety across the proxy system.\n */\n\n/**\n * Base API request interface (legacy - kept for backward compatibility)\n */\nexport interface ApiRequest {\n  method: string;\n  params?: Record<string, any>;\n  userId: string;\n  communityId: string;\n  signature?: string;\n}\n\n/**\n * Base API response interface\n */\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\n// =============================================================================\n// \uD83D\uDE80 NEW: Flexible Request System\n// =============================================================================\n\n/**\n * Plugin-style request (similar to legacy ApiRequest but more explicit)\n */\nexport interface PluginRequest {\n  type: 'plugin';\n  method: string;\n  params?: Record<string, any>;\n  userId: string;\n  communityId: string;\n  signature?: string;\n}\n\n/**\n * Direct HTTP API request for any endpoint\n */\nexport interface DirectApiRequest {\n  type: 'direct';\n  url: string;\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n  headers?: Record<string, string>;\n  body?: any;\n  timeout?: number;\n}\n\n/**\n * Union type for all proxy request types\n */\nexport type ProxyRequest = PluginRequest | DirectApiRequest;\n\n/**\n * Options for convenience request methods\n */\nexport interface RequestOptions {\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n  headers?: Record<string, string>;\n  body?: any;\n  timeout?: number;\n}\n\n// =============================================================================\n// \uD83D\uDD04 EXISTING: Legacy Plugin API Types (unchanged for compatibility)\n// =============================================================================\n\n/**\n * API method types that can be proxied\n */\nexport type ApiMethod = \n  | 'getUserInfo'\n  | 'getUserFriends'\n  | 'getContextData'\n  | 'getCommunityInfo'\n  | 'giveRole'\n  | 'getUserCommunities'  // \uD83C\uDD95 NEW - For sidebar community list\n  | 'getUserProfile'      // \uD83C\uDD95 NEW - For sidebar user profile\n  | 'getIrcCredentials';  // \uD83C\uDD95 NEW - For IRC chat functionality\n\n/**\n * API endpoint mapping\n */\nexport const API_ENDPOINTS: Record<string, string> = {\n  getUserInfo: '/api/user',\n  getUserFriends: '/api/user',\n  getContextData: '/api/user',\n  getCommunityInfo: '/api/community',\n  giveRole: '/api/community',\n  getUserCommunities: '/api/communities',        // \uD83C\uDD95 Maps to GET /api/communities\n  getUserProfile: '/api/auth/validate-session',  // \uD83C\uDD95 Maps to POST /api/auth/validate-session\n  getIrcCredentials: '/api/irc-user-provision'   // \uD83C\uDD95 Maps to POST /api/irc-user-provision\n};\n\n/**\n * User API method types\n */\nexport interface GetUserInfoRequest extends ApiRequest {\n  method: 'getUserInfo';\n}\n\nexport interface GetUserFriendsRequest extends ApiRequest {\n  method: 'getUserFriends';\n  params: {\n    limit?: number;\n    offset?: number;\n  };\n}\n\nexport interface GetContextDataRequest extends ApiRequest {\n  method: 'getContextData';\n}\n\n/**\n * Community API method types\n */\nexport interface GetCommunityInfoRequest extends ApiRequest {\n  method: 'getCommunityInfo';\n}\n\nexport interface GiveRoleRequest extends ApiRequest {\n  method: 'giveRole';\n  params: {\n    roleId: string;\n    userId: string;\n  };\n}\n\n/**\n * Authentication API method types\n */\nexport interface GetUserCommunitiesRequest extends ApiRequest {\n  method: 'getUserCommunities';\n  params?: { \n    sessionToken: string;  // Required for authentication\n  };\n}\n\nexport interface GetUserProfileRequest extends ApiRequest {\n  method: 'getUserProfile';\n  params?: { \n    sessionToken: string;  // Required for authentication\n  };\n}\n\n/**\n * IRC API method types\n */\nexport interface GetIrcCredentialsRequest extends ApiRequest {\n  method: 'getIrcCredentials';\n  // No additional params needed - uses userId and communityId from base ApiRequest\n}\n\n/**\n * Union type for all API requests\n */\nexport type ApiRequestUnion = \n  | GetUserInfoRequest\n  | GetUserFriendsRequest\n  | GetContextDataRequest\n  | GetCommunityInfoRequest\n  | GiveRoleRequest\n  | GetUserCommunitiesRequest  // \uD83C\uDD95 NEW\n  | GetUserProfileRequest      // \uD83C\uDD95 NEW\n  | GetIrcCredentialsRequest;  // \uD83C\uDD95 NEW\n\n/**\n * Helper function to get API endpoint for a method\n */\nexport function getEndpointForMethod(method: ApiMethod): string {\n  const endpoint = API_ENDPOINTS[method];\n  if (!endpoint) {\n    throw new Error(`Unknown API method: ${method}`);\n  }\n  return endpoint;\n}\n\n/**\n * Helper function to validate API request\n */\nexport function validateApiRequest(request: ApiRequest): request is ApiRequestUnion {\n  return !!(\n    request.method &&\n    request.userId &&\n    request.communityId &&\n    API_ENDPOINTS[request.method]\n  );\n} \n\n// =============================================================================\n// \uD83D\uDE80 NEW: Validation Functions for Flexible Request System\n// =============================================================================\n\n/**\n * Validate plugin-style request\n */\nexport function validatePluginRequest(request: any): request is PluginRequest {\n  return !!(\n    request &&\n    request.type === 'plugin' &&\n    request.method &&\n    request.userId &&\n    request.communityId &&\n    API_ENDPOINTS[request.method]\n  );\n}\n\n/**\n * Validate direct API request\n */\nexport function validateDirectApiRequest(request: any): request is DirectApiRequest {\n  return !!(\n    request &&\n    request.type === 'direct' &&\n    request.url &&\n    typeof request.url === 'string'\n  );\n}\n\n/**\n * Validate any proxy request type\n */\nexport function validateProxyRequest(request: any): request is ProxyRequest {\n  if (!request || typeof request !== 'object') {\n    return false;\n  }\n  \n  if (request.type === 'plugin') {\n    return validatePluginRequest(request);\n  } else if (request.type === 'direct') {\n    return validateDirectApiRequest(request);\n  }\n  \n  return false;\n}\n\n/**\n * Convert legacy ApiRequest to PluginRequest\n */\nexport function convertLegacyRequest(legacyRequest: ApiRequest): PluginRequest {\n  const converted: PluginRequest = {\n    type: 'plugin',\n    method: legacyRequest.method,\n    userId: legacyRequest.userId,\n    communityId: legacyRequest.communityId\n  };\n  \n  // Only include optional properties if they're defined\n  if (legacyRequest.params !== undefined) {\n    converted.params = legacyRequest.params;\n  }\n  if (legacyRequest.signature !== undefined) {\n    converted.signature = legacyRequest.signature;\n  }\n  \n  return converted;\n} ", "/**\n * Message Types - PostMessage protocol for iframe communication\n * \n * Defines the message structure for communication between:\n * - Customer page (InternalPluginHost)\n * - Auth iframe (/embed route)\n * - Forum iframe (forum application)\n */\n\nimport { \n  ApiRequest, \n  ApiResponse,\n  ProxyRequest,\n  PluginRequest,\n  DirectApiRequest\n} from './ApiTypes';\n\n/**\n * Message types used in the proxy system\n */\nexport enum MessageType {\n  // Original forum \u2192 host communication\n  API_REQUEST = 'api_request',\n  API_RESPONSE = 'api_response',\n  \n  // New proxy communication\n  PROXY_API_REQUEST = 'proxy-api-request',\n  PROXY_API_RESPONSE = 'proxy-api-response',\n  \n  // Error handling\n  PROXY_ERROR = 'proxy-error',\n  \n  // Initialization\n  PROXY_INIT = 'proxy-init',\n  PROXY_READY = 'proxy-ready'\n}\n\n/**\n * Base message interface\n */\nexport interface BaseMessage {\n  type: MessageType;\n  requestId: string;\n  timestamp?: number;\n}\n\n/**\n * Message from forum iframe to InternalPluginHost\n * (Original API request from forum)\n */\nexport interface ForumApiRequestMessage extends BaseMessage {\n  type: MessageType.API_REQUEST;\n  iframeUid: string;\n  method: string;\n  params?: any;\n}\n\n/**\n * Message from InternalPluginHost to active iframe\n * (Proxy request to iframe for API call)\n */\nexport interface ProxyApiRequestMessage extends BaseMessage {\n  type: MessageType.PROXY_API_REQUEST;\n  endpoint: string;\n  payload: ApiRequest;\n}\n\n// =============================================================================\n// \uD83D\uDE80 NEW: Enhanced Proxy Request Messages for Flexible Request System\n// =============================================================================\n\n/**\n * Enhanced proxy request message that supports both plugin and direct API requests\n */\nexport interface EnhancedProxyRequestMessage extends BaseMessage {\n  type: MessageType.PROXY_API_REQUEST;\n  request: ProxyRequest;  // Can be either PluginRequest or DirectApiRequest\n}\n\n/**\n * Legacy proxy request message (for backward compatibility)\n * This is the same as ProxyApiRequestMessage but with explicit naming\n */\nexport interface LegacyProxyRequestMessage extends BaseMessage {\n  type: MessageType.PROXY_API_REQUEST;\n  endpoint: string;\n  payload: ApiRequest;\n}\n\n/**\n * Union type for all proxy request message formats\n */\nexport type AnyProxyRequestMessage = EnhancedProxyRequestMessage | LegacyProxyRequestMessage;\n\n/**\n * Message from active iframe to InternalPluginHost\n * (Proxy response with API result)\n */\nexport interface ProxyApiResponseMessage extends BaseMessage {\n  type: MessageType.PROXY_API_RESPONSE;\n  response: ApiResponse;\n}\n\n/**\n * Message from InternalPluginHost to forum iframe\n * (Final API response back to forum)\n */\nexport interface ForumApiResponseMessage extends BaseMessage {\n  type: MessageType.API_RESPONSE;\n  iframeUid: string;\n  data?: any;\n  error?: string;\n}\n\n/**\n * Error message for proxy failures\n */\nexport interface ProxyErrorMessage extends BaseMessage {\n  type: MessageType.PROXY_ERROR;\n  error: string;\n  originalRequestId?: string;\n}\n\n/**\n * Initialization messages\n */\nexport interface ProxyInitMessage extends BaseMessage {\n  type: MessageType.PROXY_INIT;\n  config: {\n    baseUrl: string;\n    timeout?: number;\n  };\n}\n\nexport interface ProxyReadyMessage extends BaseMessage {\n  type: MessageType.PROXY_READY;\n  serverId: string;\n}\n\n/**\n * Union type for all proxy messages\n */\nexport type ProxyMessage = \n  | ForumApiRequestMessage\n  | ProxyApiRequestMessage\n  | EnhancedProxyRequestMessage\n  | ProxyApiResponseMessage\n  | ForumApiResponseMessage\n  | ProxyErrorMessage\n  | ProxyInitMessage\n  | ProxyReadyMessage;\n\n/**\n * Type guards for message validation\n */\nexport function isProxyApiRequest(message: any): message is ProxyApiRequestMessage {\n  return message?.type === MessageType.PROXY_API_REQUEST && \n         message?.requestId && \n         message?.endpoint && \n         message?.payload;\n}\n\nexport function isProxyApiResponse(message: any): message is ProxyApiResponseMessage {\n  return message?.type === MessageType.PROXY_API_RESPONSE && \n         message?.requestId && \n         message?.response;\n}\n\nexport function isForumApiRequest(message: any): message is ForumApiRequestMessage {\n  return message?.type === MessageType.API_REQUEST && \n         message?.requestId && \n         message?.iframeUid && \n         message?.method;\n}\n\nexport function isProxyError(message: any): message is ProxyErrorMessage {\n  return message?.type === MessageType.PROXY_ERROR && \n         message?.requestId && \n         message?.error;\n}\n\n// =============================================================================\n// \uD83D\uDE80 NEW: Enhanced Type Guards for Flexible Request System\n// =============================================================================\n\n/**\n * Type guard for enhanced proxy request messages\n */\nexport function isEnhancedProxyRequest(message: any): message is EnhancedProxyRequestMessage {\n  return message?.type === MessageType.PROXY_API_REQUEST && \n         message?.requestId && \n         message?.request &&\n         (message.request.type === 'plugin' || message.request.type === 'direct');\n}\n\n/**\n * Type guard for legacy proxy request messages\n */\nexport function isLegacyProxyRequest(message: any): message is LegacyProxyRequestMessage {\n  return message?.type === MessageType.PROXY_API_REQUEST && \n         message?.requestId && \n         message?.endpoint && \n         message?.payload &&\n         !message?.request; // Distinguish from enhanced format\n}\n\n/**\n * Type guard that handles both legacy and enhanced proxy requests\n */\nexport function isAnyProxyRequest(message: any): message is AnyProxyRequestMessage {\n  return isEnhancedProxyRequest(message) || isLegacyProxyRequest(message);\n}\n\n/**\n * Helper to determine if a proxy request message is using the enhanced format\n */\nexport function isUsingEnhancedFormat(message: AnyProxyRequestMessage): message is EnhancedProxyRequestMessage {\n  return 'request' in message && !!message.request;\n}\n\n/**\n * Helper function to generate unique request IDs\n */\nexport function generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\n/**\n * Helper function to create error message\n */\nexport function createErrorMessage(requestId: string, error: string, originalRequestId?: string): ProxyErrorMessage {\n  const message: ProxyErrorMessage = {\n    type: MessageType.PROXY_ERROR,\n    requestId,\n    error,\n    timestamp: Date.now()\n  };\n  \n  if (originalRequestId) {\n    message.originalRequestId = originalRequestId;\n  }\n  \n  return message;\n}\n\n/**\n * Helper function to create proxy request message\n */\nexport function createProxyRequest(requestId: string, endpoint: string, payload: ApiRequest): ProxyApiRequestMessage {\n  return {\n    type: MessageType.PROXY_API_REQUEST,\n    requestId,\n    endpoint,\n    payload,\n    timestamp: Date.now()\n  };\n}\n\n/**\n * Helper function to create proxy response message\n */\nexport function createProxyResponse(requestId: string, response: ApiResponse): ProxyApiResponseMessage {\n  return {\n    type: MessageType.PROXY_API_RESPONSE,\n    requestId,\n    response,\n    timestamp: Date.now()\n  };\n} \n\n// =============================================================================\n// \uD83D\uDE80 NEW: Enhanced Helper Functions for Flexible Request System\n// =============================================================================\n\n/**\n * Helper function to create enhanced proxy request message\n */\nexport function createEnhancedProxyRequest(requestId: string, request: ProxyRequest): EnhancedProxyRequestMessage {\n  return {\n    type: MessageType.PROXY_API_REQUEST,\n    requestId,\n    request,\n    timestamp: Date.now()\n  };\n}\n\n/**\n * Helper function to create direct API request message\n */\nexport function createDirectApiRequest(\n  requestId: string, \n  url: string, \n  options?: {\n    method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n    headers?: Record<string, string>;\n    body?: any;\n    timeout?: number;\n  }\n): EnhancedProxyRequestMessage {\n  const directRequest: DirectApiRequest = {\n    type: 'direct',\n    url,\n    method: options?.method || 'GET',\n    ...options\n  };\n  \n  return createEnhancedProxyRequest(requestId, directRequest);\n}\n\n/**\n * Helper function to create plugin-style request message  \n */\nexport function createPluginRequest(\n  requestId: string,\n  method: string,\n  userId: string,\n  communityId: string,\n  params?: Record<string, any>,\n  signature?: string\n): EnhancedProxyRequestMessage {\n  const pluginRequest: PluginRequest = {\n    type: 'plugin',\n    method,\n    userId,\n    communityId\n  };\n  \n  // Only include optional properties if they're defined\n  if (params !== undefined) {\n    pluginRequest.params = params;\n  }\n  if (signature !== undefined) {\n    pluginRequest.signature = signature;\n  }\n  \n  return createEnhancedProxyRequest(requestId, pluginRequest);\n} ", "/**\n * Proxy Types - Configuration and setup types for the proxy system\n * \n * Defines configuration interfaces for both client and server\n * components of the API proxy system.\n */\n\n/**\n * Configuration for the API proxy client (customer page)\n */\nexport interface ProxyClientConfig {\n  /** Default timeout for API requests in milliseconds */\n  defaultTimeout?: number;\n  \n  /** Maximum number of retry attempts for failed requests */\n  maxRetries?: number;\n  \n  /** Retry delay in milliseconds */\n  retryDelay?: number;\n  \n  /** Whether to log debug messages */\n  debug?: boolean;\n  \n  /** Custom request ID prefix */\n  requestIdPrefix?: string;\n}\n\n/**\n * Configuration for the API proxy server (iframe)\n */\nexport interface ProxyServerConfig {\n  /** Base URL for API requests */\n  baseUrl: string;\n  \n  /** Request timeout in milliseconds */\n  timeout?: number;\n  \n  /** Whether to log debug messages */\n  debug?: boolean;\n  \n  /** Custom headers to include in API requests */\n  headers?: Record<string, string>;\n  \n  /** Allowed origins for security (empty array = allow all) */\n  allowedOrigins?: string[];\n  \n  /** Custom server ID for identification */\n  serverId?: string;\n}\n\n/**\n * Default configurations\n */\nexport const DEFAULT_CLIENT_CONFIG: Required<ProxyClientConfig> = {\n  defaultTimeout: 10000, // 10 seconds\n  maxRetries: 3,\n  retryDelay: 1000, // 1 second\n  debug: false,\n  requestIdPrefix: 'proxy'\n};\n\nexport const DEFAULT_SERVER_CONFIG: Required<Omit<ProxyServerConfig, 'baseUrl'>> = {\n  timeout: 30000, // 30 seconds\n  debug: false,\n  headers: {},\n  allowedOrigins: [],\n  serverId: `server_${Date.now()}`\n};\n\n/**\n * Request timeout information\n */\nexport interface RequestTimeout {\n  requestId: string;\n  timeoutId: NodeJS.Timeout;\n  startTime: number;\n  timeoutMs: number;\n}\n\n/**\n * Pending request information\n */\nexport interface PendingRequest {\n  requestId: string;\n  resolve: (response: any) => void;\n  reject: (error: Error) => void;\n  startTime: number;\n  retryCount: number;\n  originalRequest: any;\n}\n\n/**\n * Proxy client status\n */\nexport interface ProxyClientStatus {\n  isInitialized: boolean;\n  activeIframeCount: number;\n  pendingRequestCount: number;\n  totalRequestCount: number;\n  errorCount: number;\n  averageResponseTime: number;\n  lastActivityTime: number;\n}\n\n/**\n * Proxy server status\n */\nexport interface ProxyServerStatus {\n  isInitialized: boolean;\n  serverId: string;\n  baseUrl: string;\n  requestCount: number;\n  errorCount: number;\n  startTime: number;\n  lastRequestTime: number;\n}\n\n/**\n * Error types for the proxy system\n */\nexport enum ProxyErrorType {\n  TIMEOUT = 'TIMEOUT',\n  NETWORK_ERROR = 'NETWORK_ERROR',\n  INVALID_REQUEST = 'INVALID_REQUEST',\n  INVALID_RESPONSE = 'INVALID_RESPONSE',\n  NO_ACTIVE_IFRAME = 'NO_ACTIVE_IFRAME',\n  INITIALIZATION_ERROR = 'INITIALIZATION_ERROR',\n  PERMISSION_DENIED = 'PERMISSION_DENIED',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR'\n}\n\n/**\n * Proxy error interface\n */\nexport interface ProxyError extends Error {\n  type: ProxyErrorType;\n  requestId?: string;\n  originalError?: Error;\n  timestamp: number;\n}\n\n/**\n * Helper function to create proxy error\n */\nexport function createProxyError(\n  type: ProxyErrorType,\n  message: string,\n  requestId?: string,\n  originalError?: Error\n): ProxyError {\n  const error = new Error(message) as ProxyError;\n  error.type = type;\n  error.timestamp = Date.now();\n  \n  if (requestId) {\n    error.requestId = requestId;\n  }\n  \n  if (originalError) {\n    error.originalError = originalError;\n  }\n  \n  return error;\n}\n\n/**\n * Helper function to merge client config with defaults\n */\nexport function mergeClientConfig(config?: Partial<ProxyClientConfig>): Required<ProxyClientConfig> {\n  return {\n    ...DEFAULT_CLIENT_CONFIG,\n    ...config\n  };\n}\n\n/**\n * Helper function to merge server config with defaults\n */\nexport function mergeServerConfig(config: ProxyServerConfig): Required<ProxyServerConfig> {\n  return {\n    ...DEFAULT_SERVER_CONFIG,\n    ...config\n  };\n}\n\n/**\n * Helper function to validate server config\n */\nexport function validateServerConfig(config: ProxyServerConfig): void {\n  if (!config.baseUrl) {\n    throw new Error('baseUrl is required for proxy server configuration');\n  }\n  \n  if (!config.baseUrl.startsWith('http')) {\n    throw new Error('baseUrl must be a valid HTTP/HTTPS URL');\n  }\n  \n  if (config.timeout && config.timeout < 1000) {\n    throw new Error('timeout must be at least 1000ms');\n  }\n}\n\n/**\n * Helper function to check if origin is allowed\n */\nexport function isOriginAllowed(origin: string, allowedOrigins: string[]): boolean {\n  // If no allowed origins specified, allow all\n  if (allowedOrigins.length === 0) {\n    return true;\n  }\n  \n  // Check exact match\n  if (allowedOrigins.includes(origin)) {\n    return true;\n  }\n  \n  // Check wildcard patterns\n  return allowedOrigins.some(allowed => {\n    if (allowed.includes('*')) {\n      const pattern = allowed.replace(/\\*/g, '.*');\n      return new RegExp(`^${pattern}$`).test(origin);\n    }\n    return false;\n  });\n} ", "/**\n * API Proxy Client - Customer page component\n * \n * Runs in the customer page context and proxies API requests\n * through active iframes to bypass CSP restrictions.\n */\n\nimport { \n  ApiRequest, \n  ApiResponse, \n  getEndpointForMethod, \n  validateApiRequest,\n  ProxyRequest,\n  DirectApiRequest,\n  PluginRequest,\n  RequestOptions,\n  validateProxyRequest\n} from '../types/ApiTypes';\nimport { \n  ProxyApiResponseMessage,\n  isProxyApiResponse,\n  isProxyError,\n  generateRequestId,\n  createProxyRequest,\n  createEnhancedProxyRequest\n} from '../types/MessageTypes';\nimport { \n  ProxyClientConfig, \n  ProxyClientStatus, \n  ProxyError, \n  ProxyErrorType, \n  PendingRequest, \n  RequestTimeout,\n  mergeClientConfig,\n  createProxyError \n} from '../types/ProxyTypes';\n\n/**\n * API Proxy Client\n * \n * Handles API requests from forum iframes by proxying them through\n * the active iframe (auth or forum) to bypass CSP restrictions.\n * \n * =============================================================================\n * \uD83D\uDE80 USAGE EXAMPLES\n * =============================================================================\n * \n * // Legacy plugin-style requests (backward compatible)\n * const result = await apiProxy.makeApiRequest({\n *   method: 'getUserInfo',\n *   userId: 'user123',\n *   communityId: 'comm456'\n * });\n * \n * // \uD83C\uDD95 Direct HTTP API calls\n * const sessions = await apiProxy.makeDirectRequest('/api/auth/sessions', {\n *   method: 'GET',\n *   headers: { 'Authorization': 'Bearer token123' }\n * });\n * \n * // \uD83C\uDD95 Authenticated requests (convenience method)\n * const sessions = await apiProxy.makeAuthenticatedRequest('/api/auth/sessions', 'token123');\n * const profile = await apiProxy.makeAuthenticatedRequest('/api/user/profile', 'token123', {\n *   method: 'POST',\n *   body: { updateData: 'value' }\n * });\n * \n * // \uD83C\uDD95 Enhanced plugin requests (explicit format)\n * const result = await apiProxy.makePluginRequest('getUserInfo', 'user123', 'comm456', {\n *   extraParam: 'value'\n * });\n * \n * =============================================================================\n */\nexport class ApiProxyClient {\n  private config: Required<ProxyClientConfig>;\n  private isInitialized: boolean = false;\n  private activeIframe: HTMLIFrameElement | null = null;\n  private pendingRequests = new Map<string, PendingRequest>();\n  private requestTimeouts = new Map<string, RequestTimeout>();\n  private messageListener: ((event: MessageEvent) => void) | null = null;\n  \n  // Statistics\n  private totalRequests = 0;\n  private totalErrors = 0;\n  private responseTimes: number[] = [];\n  private lastActivityTime = 0;\n\n  constructor(config?: Partial<ProxyClientConfig>) {\n    this.config = mergeClientConfig(config);\n    this.initialize();\n  }\n\n  /**\n   * Initialize the proxy client\n   */\n  private initialize(): void {\n    this.setupMessageListener();\n    this.isInitialized = true;\n    \n    if (this.config.debug) {\n      console.log('[ApiProxyClient] Initialized with config:', this.config);\n    }\n  }\n\n  /**\n   * Set up the message listener for iframe communication\n   */\n  private setupMessageListener(): void {\n    if (this.messageListener) {\n      window.removeEventListener('message', this.messageListener);\n    }\n\n    this.messageListener = (event: MessageEvent) => {\n      if (!event.data || typeof event.data !== 'object') {\n        return;\n      }\n\n      // Handle proxy API responses\n      if (isProxyApiResponse(event.data)) {\n        this.handleProxyResponse(event.data);\n      }\n      \n      // Handle proxy errors\n      if (isProxyError(event.data)) {\n        this.handleProxyError(event.data);\n      }\n    };\n\n    window.addEventListener('message', this.messageListener);\n  }\n\n  /**\n   * Set the active iframe for API requests\n   */\n  public setActiveIframe(iframe: HTMLIFrameElement): void {\n    this.activeIframe = iframe;\n    \n    if (this.config.debug) {\n      console.log('[ApiProxyClient] Active iframe set:', iframe.src);\n    }\n  }\n\n  /**\n   * Clear the active iframe\n   */\n  public clearActiveIframe(): void {\n    this.activeIframe = null;\n    \n    if (this.config.debug) {\n      console.log('[ApiProxyClient] Active iframe cleared');\n    }\n  }\n\n  /**\n   * Make an API request through the active iframe\n   */\n  public async makeApiRequest(request: ApiRequest): Promise<ApiResponse> {\n    if (!this.isInitialized) {\n      throw createProxyError(\n        ProxyErrorType.INITIALIZATION_ERROR,\n        'Proxy client not initialized'\n      );\n    }\n\n    if (!this.activeIframe) {\n      throw createProxyError(\n        ProxyErrorType.NO_ACTIVE_IFRAME,\n        'No active iframe available for API requests'\n      );\n    }\n\n    if (!validateApiRequest(request)) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_REQUEST,\n        'Invalid API request format'\n      );\n    }\n\n    const requestId = generateRequestId();\n    const startTime = Date.now();\n    this.totalRequests++;\n    this.lastActivityTime = startTime;\n\n    return new Promise((resolve, reject) => {\n      try {\n        // Store pending request\n        const pendingRequest: PendingRequest = {\n          requestId,\n          resolve,\n          reject,\n          startTime,\n          retryCount: 0,\n          originalRequest: request\n        };\n        \n        this.pendingRequests.set(requestId, pendingRequest);\n        \n        // Set up timeout\n        this.setupRequestTimeout(requestId);\n        \n        // Send request to active iframe\n        this.sendRequestToIframe(requestId, request);\n        \n        if (this.config.debug) {\n          console.log('[ApiProxyClient] API request sent:', {\n            requestId,\n            method: request.method,\n            userId: request.userId,\n            communityId: request.communityId\n          });\n        }\n        \n      } catch (error) {\n        this.cleanupRequest(requestId);\n        reject(error);\n      }\n    });\n  }\n\n  // =============================================================================\n  // \uD83D\uDE80 NEW: Enhanced API Request Methods\n  // =============================================================================\n\n  /**\n   * Make a direct HTTP API request through the active iframe\n   */\n  public async makeDirectRequest(url: string, options?: RequestOptions): Promise<any> {\n    if (!this.isInitialized) {\n      throw createProxyError(\n        ProxyErrorType.INITIALIZATION_ERROR,\n        'Proxy client not initialized'\n      );\n    }\n\n    if (!this.activeIframe) {\n      throw createProxyError(\n        ProxyErrorType.NO_ACTIVE_IFRAME,\n        'No active iframe available for API requests'\n      );\n    }\n\n    const directRequest: DirectApiRequest = {\n      type: 'direct',\n      url,\n      method: options?.method || 'GET',\n      ...options\n    };\n\n    if (!validateProxyRequest(directRequest)) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_REQUEST,\n        'Invalid direct API request format'\n      );\n    }\n\n    return this.makeEnhancedProxyRequest(directRequest);\n  }\n\n  /**\n   * Make an authenticated API request (convenience method for requests with auth headers)\n   */\n  public async makeAuthenticatedRequest(url: string, token: string, options?: RequestOptions): Promise<any> {\n    const headers = {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json',\n      ...options?.headers\n    };\n\n    return this.makeDirectRequest(url, {\n      ...options,\n      headers\n    });\n  }\n\n  /**\n   * Make a plugin-style request using the enhanced format\n   */\n  public async makePluginRequest(\n    method: string,\n    userId: string,\n    communityId: string,\n    params?: Record<string, any>,\n    signature?: string\n  ): Promise<ApiResponse> {\n    if (!this.isInitialized) {\n      throw createProxyError(\n        ProxyErrorType.INITIALIZATION_ERROR,\n        'Proxy client not initialized'\n      );\n    }\n\n    if (!this.activeIframe) {\n      throw createProxyError(\n        ProxyErrorType.NO_ACTIVE_IFRAME,\n        'No active iframe available for API requests'\n      );\n    }\n\n    const pluginRequest: PluginRequest = {\n      type: 'plugin',\n      method,\n      userId,\n      communityId\n    };\n\n    // Only include optional properties if they're defined\n    if (params !== undefined) {\n      pluginRequest.params = params;\n    }\n    if (signature !== undefined) {\n      pluginRequest.signature = signature;\n    }\n\n    if (!validateProxyRequest(pluginRequest)) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_REQUEST,\n        'Invalid plugin request format'\n      );\n    }\n\n    return this.makeEnhancedProxyRequest(pluginRequest);\n  }\n\n  /**\n   * Internal method to handle enhanced proxy requests\n   */\n  private async makeEnhancedProxyRequest(request: ProxyRequest): Promise<any> {\n    const requestId = generateRequestId();\n    const startTime = Date.now();\n    this.totalRequests++;\n    this.lastActivityTime = startTime;\n\n    return new Promise((resolve, reject) => {\n      try {\n        // Store pending request\n        const pendingRequest: PendingRequest = {\n          requestId,\n          resolve,\n          reject,\n          startTime,\n          retryCount: 0,\n          originalRequest: request  // Store the enhanced request\n        };\n        \n        this.pendingRequests.set(requestId, pendingRequest);\n        \n        // Set up timeout\n        this.setupRequestTimeout(requestId);\n        \n        // Send enhanced request to active iframe\n        this.sendEnhancedRequestToIframe(requestId, request);\n        \n        if (this.config.debug) {\n          console.log('[ApiProxyClient] Enhanced API request sent:', {\n            requestId,\n            type: request.type,\n            ...(request.type === 'plugin' ? { method: request.method } : { url: request.url })\n          });\n        }\n        \n      } catch (error) {\n        this.cleanupRequest(requestId);\n        reject(error);\n      }\n    });\n  }\n\n  // =============================================================================\n  // \uD83D\uDD04 EXISTING: Legacy API Request Method (maintained for backward compatibility)\n  // =============================================================================\n\n  /**\n   * Send request to the active iframe\n   */\n  private sendRequestToIframe(requestId: string, request: ApiRequest): void {\n    if (!this.activeIframe?.contentWindow) {\n      throw createProxyError(\n        ProxyErrorType.NO_ACTIVE_IFRAME,\n        'Active iframe content window not available'\n      );\n    }\n\n    const endpoint = getEndpointForMethod(request.method as any);\n    const message = createProxyRequest(requestId, endpoint, request);\n    \n    this.activeIframe.contentWindow.postMessage(message, '*');\n  }\n\n  /**\n   * Send enhanced request to the active iframe\n   */\n  private sendEnhancedRequestToIframe(requestId: string, request: ProxyRequest): void {\n    if (!this.activeIframe?.contentWindow) {\n      throw createProxyError(\n        ProxyErrorType.NO_ACTIVE_IFRAME,\n        'Active iframe content window not available'\n      );\n    }\n\n    const message = createEnhancedProxyRequest(requestId, request);\n    \n    this.activeIframe.contentWindow.postMessage(message, '*');\n  }\n\n  /**\n   * Set up request timeout\n   */\n  private setupRequestTimeout(requestId: string): void {\n    const timeoutId = setTimeout(() => {\n      this.handleRequestTimeout(requestId);\n    }, this.config.defaultTimeout);\n\n    this.requestTimeouts.set(requestId, {\n      requestId,\n      timeoutId,\n      startTime: Date.now(),\n      timeoutMs: this.config.defaultTimeout\n    });\n  }\n\n  /**\n   * Handle request timeout\n   */\n  private handleRequestTimeout(requestId: string): void {\n    const pendingRequest = this.pendingRequests.get(requestId);\n    if (!pendingRequest) {\n      return;\n    }\n\n    const error = createProxyError(\n      ProxyErrorType.TIMEOUT,\n      `Request timeout after ${this.config.defaultTimeout}ms`,\n      requestId\n    );\n\n    this.handleRequestError(requestId, error);\n  }\n\n  /**\n   * Handle proxy response from iframe\n   */\n  private handleProxyResponse(message: ProxyApiResponseMessage): void {\n    const pendingRequest = this.pendingRequests.get(message.requestId);\n    if (!pendingRequest) {\n      if (this.config.debug) {\n        console.warn('[ApiProxyClient] Received response for unknown request:', message.requestId);\n      }\n      return;\n    }\n\n    const responseTime = Date.now() - pendingRequest.startTime;\n    this.responseTimes.push(responseTime);\n    \n    // Keep only last 100 response times for average calculation\n    if (this.responseTimes.length > 100) {\n      this.responseTimes.shift();\n    }\n\n    this.cleanupRequest(message.requestId);\n    pendingRequest.resolve(message.response);\n\n    if (this.config.debug) {\n      console.log('[ApiProxyClient] API response received:', {\n        requestId: message.requestId,\n        responseTime: `${responseTime}ms`,\n        success: message.response.success\n      });\n    }\n  }\n\n  /**\n   * Handle proxy error from iframe\n   */\n  private handleProxyError(message: any): void {\n    const error = createProxyError(\n      ProxyErrorType.NETWORK_ERROR,\n      message.error,\n      message.requestId\n    );\n\n    this.handleRequestError(message.requestId, error);\n  }\n\n  /**\n   * Handle request error\n   */\n  private handleRequestError(requestId: string, error: ProxyError): void {\n    const pendingRequest = this.pendingRequests.get(requestId);\n    if (!pendingRequest) {\n      return;\n    }\n\n    this.totalErrors++;\n    this.cleanupRequest(requestId);\n    \n    // Check if we should retry\n    if (pendingRequest.retryCount < this.config.maxRetries) {\n      this.retryRequest(pendingRequest, error);\n    } else {\n      pendingRequest.reject(error);\n    }\n  }\n\n  /**\n   * Retry a failed request\n   */\n  private retryRequest(pendingRequest: PendingRequest, lastError: ProxyError): void {\n    pendingRequest.retryCount++;\n    \n    if (this.config.debug) {\n      console.log('[ApiProxyClient] Retrying request:', {\n        requestId: pendingRequest.requestId,\n        retryCount: pendingRequest.retryCount,\n        lastError: lastError.message\n      });\n    }\n\n    setTimeout(() => {\n      if (this.activeIframe) {\n        // \u2705 CORRECT: Keep same requestId - it's the same logical request\n        this.pendingRequests.set(pendingRequest.requestId, pendingRequest);\n        this.setupRequestTimeout(pendingRequest.requestId);\n        \n        // Send request with same ID (either legacy or enhanced format)\n        if (pendingRequest.originalRequest && 'type' in pendingRequest.originalRequest) {\n          // Enhanced request format\n          this.sendEnhancedRequestToIframe(pendingRequest.requestId, pendingRequest.originalRequest as ProxyRequest);\n        } else {\n          // Legacy request format  \n          this.sendRequestToIframe(pendingRequest.requestId, pendingRequest.originalRequest as ApiRequest);\n        }\n      } else {\n        pendingRequest.reject(lastError);\n      }\n    }, this.config.retryDelay);\n  }\n\n  /**\n   * Clean up request resources\n   */\n  private cleanupRequest(requestId: string): void {\n    this.pendingRequests.delete(requestId);\n    \n    const timeout = this.requestTimeouts.get(requestId);\n    if (timeout) {\n      clearTimeout(timeout.timeoutId);\n      this.requestTimeouts.delete(requestId);\n    }\n  }\n\n  /**\n   * Get proxy client status\n   */\n  public getStatus(): ProxyClientStatus {\n    const averageResponseTime = this.responseTimes.length > 0\n      ? this.responseTimes.reduce((sum, time) => sum + time, 0) / this.responseTimes.length\n      : 0;\n\n    return {\n      isInitialized: this.isInitialized,\n      activeIframeCount: this.activeIframe ? 1 : 0,\n      pendingRequestCount: this.pendingRequests.size,\n      totalRequestCount: this.totalRequests,\n      errorCount: this.totalErrors,\n      averageResponseTime: Math.round(averageResponseTime),\n      lastActivityTime: this.lastActivityTime\n    };\n  }\n\n  /**\n   * Destroy the proxy client\n   */\n  public destroy(): void {\n    // Clear all pending requests\n    this.pendingRequests.forEach(request => {\n      request.reject(createProxyError(\n        ProxyErrorType.INITIALIZATION_ERROR,\n        'Proxy client destroyed'\n      ));\n    });\n    this.pendingRequests.clear();\n\n    // Clear all timeouts\n    this.requestTimeouts.forEach(timeout => {\n      clearTimeout(timeout.timeoutId);\n    });\n    this.requestTimeouts.clear();\n\n    // Remove message listener\n    if (this.messageListener) {\n      window.removeEventListener('message', this.messageListener);\n      this.messageListener = null;\n    }\n\n    // Clear active iframe\n    this.activeIframe = null;\n    this.isInitialized = false;\n\n    if (this.config.debug) {\n      console.log('[ApiProxyClient] Destroyed');\n    }\n  }\n} ", "/**\n * API Proxy Server - Iframe component\n * \n * Runs inside iframes (auth or forum) and handles API requests\n * from the customer page by making actual API calls to the host service.\n */\n\nimport { \n  ApiRequest, \n  ApiResponse,\n  ProxyRequest,\n  PluginRequest,\n  DirectApiRequest,\n  validateProxyRequest,\n  convertLegacyRequest\n} from '../types/ApiTypes';\nimport { \n  createProxyResponse,\n  EnhancedProxyRequestMessage,\n  LegacyProxyRequestMessage,\n  AnyProxyRequestMessage,\n  isAnyProxyRequest,\n  isUsingEnhancedFormat\n} from '../types/MessageTypes';\nimport { \n  ProxyServerConfig, \n  ProxyServerStatus, \n  ProxyErrorType, \n  mergeServerConfig,\n  validateServerConfig,\n  createProxyError,\n  isOriginAllowed\n} from '../types/ProxyTypes';\n\n/**\n * API Proxy Server\n * \n * Handles API proxy requests from the customer page by making\n * actual API calls to the host service and returning responses.\n * \n * =============================================================================\n * \uD83D\uDE80 ENHANCED ARCHITECTURE\n * =============================================================================\n * \n * The server now supports both legacy and new flexible request formats:\n * \n * \uD83D\uDCE8 MESSAGE FORMATS:\n * - Legacy: { type: 'proxy-api-request', endpoint: '/api/user', payload: ApiRequest }\n * - Enhanced: { type: 'proxy-api-request', request: ProxyRequest }\n * \n * \uD83D\uDD00 REQUEST TYPES:\n * - Plugin Requests: Traditional method-based calls with endpoint mapping\n * - Direct Requests: Full HTTP control (method, headers, body, URL)\n * \n * \uD83D\uDEE0\uFE0F PROCESSING FLOW:\n * 1. handleAnyProxyRequest() - Detects message format (legacy vs enhanced)\n * 2. processProxyRequest() - Routes to plugin or direct processing\n * 3. processPluginRequest() - Uses endpoint mapping + legacy makeApiRequest()\n * 4. processDirectRequest() - Full HTTP control via makeDirectHttpRequest()\n * \n * \uD83D\uDD04 BACKWARD COMPATIBILITY:\n * - All existing legacy requests continue to work unchanged\n * - Legacy format automatically converted to enhanced format internally\n * - No breaking changes to current plugin usage\n * \n * =============================================================================\n */\nexport class ApiProxyServer {\n  private config: Required<ProxyServerConfig>;\n  private isInitialized: boolean = false;\n  private messageListener: ((event: MessageEvent) => void) | null = null;\n  \n  // Statistics\n  private requestCount = 0;\n  private errorCount = 0;\n  private startTime = Date.now();\n  private lastRequestTime = 0;\n\n  constructor(config: ProxyServerConfig) {\n    validateServerConfig(config);\n    this.config = mergeServerConfig(config);\n    this.initialize();\n  }\n\n  /**\n   * Initialize the proxy server\n   */\n  private initialize(): void {\n    this.setupMessageListener();\n    this.isInitialized = true;\n    \n    // \uD83C\uDD95 Notify parent that API proxy is ready for requests\n    this.notifyParentReady();\n    \n    if (this.config.debug) {\n      console.log('[ApiProxyServer] Initialized with config:', {\n        baseUrl: this.config.baseUrl,\n        serverId: this.config.serverId,\n        timeout: this.config.timeout,\n        allowedOrigins: this.config.allowedOrigins\n      });\n    }\n  }\n\n  /**\n   * Send ready notification to parent window\n   * This enables event-driven API proxy usage instead of polling/retries\n   */\n  private notifyParentReady(): void {\n    if (window.parent && window.parent !== window) {\n      window.parent.postMessage({\n        type: 'curia-api-proxy-ready',\n        serverId: this.config.serverId,\n        timestamp: new Date().toISOString()\n      }, '*');\n      \n      if (this.config.debug) {\n        console.log(`[ApiProxyServer] Ready notification sent to parent (serverId: ${this.config.serverId})`);\n      }\n    }\n  }\n\n  /**\n   * Set up message listener for proxy requests\n   */\n  private setupMessageListener(): void {\n    if (this.messageListener) {\n      window.removeEventListener('message', this.messageListener);\n    }\n\n    this.messageListener = (event: MessageEvent) => {\n      // Security check: validate origin if configured\n      if (this.config.allowedOrigins.length > 0) {\n        if (!isOriginAllowed(event.origin, this.config.allowedOrigins)) {\n          if (this.config.debug) {\n            console.warn('[ApiProxyServer] Request from unauthorized origin:', event.origin);\n          }\n          return;\n        }\n      }\n\n      if (!event.data || typeof event.data !== 'object') {\n        return;\n      }\n\n      // Handle proxy API requests (both legacy and enhanced formats)\n      if (isAnyProxyRequest(event.data)) {\n        this.handleAnyProxyRequest(event.data, event.source as Window);\n      }\n    };\n\n    window.addEventListener('message', this.messageListener);\n  }\n\n\n\n  // =============================================================================\n  // \uD83D\uDE80 NEW: Enhanced Request Handler for Flexible Request System\n  // =============================================================================\n\n  /**\n   * Handle incoming proxy API request (both legacy and enhanced formats)\n   */\n  private async handleAnyProxyRequest(message: AnyProxyRequestMessage, source: Window): Promise<void> {\n    this.requestCount++;\n    this.lastRequestTime = Date.now();\n\n    try {\n      let response: any;\n\n      if (isUsingEnhancedFormat(message)) {\n        // Enhanced format: process ProxyRequest directly\n        const enhancedMessage = message as EnhancedProxyRequestMessage;\n        \n        if (this.config.debug) {\n          console.log('[ApiProxyServer] Received enhanced proxy request:', {\n            requestId: enhancedMessage.requestId,\n            type: enhancedMessage.request.type,\n            ...(enhancedMessage.request.type === 'plugin' \n              ? { method: enhancedMessage.request.method } \n              : { url: enhancedMessage.request.url, method: enhancedMessage.request.method })\n          });\n        }\n\n        response = await this.processProxyRequest(enhancedMessage.request);\n      } else {\n        // Legacy format: convert and process\n        const legacyMessage = message as LegacyProxyRequestMessage;\n        \n        if (this.config.debug) {\n          console.log('[ApiProxyServer] Received legacy proxy request:', {\n            requestId: legacyMessage.requestId,\n            endpoint: legacyMessage.endpoint,\n            method: legacyMessage.payload.method,\n            userId: legacyMessage.payload.userId,\n            communityId: legacyMessage.payload.communityId\n          });\n        }\n\n        // Convert legacy format to enhanced format\n        const pluginRequest = convertLegacyRequest(legacyMessage.payload);\n        response = await this.processProxyRequest(pluginRequest);\n      }\n      \n      // Send successful response back to client\n      this.sendSuccessResponse(source, message.requestId, response);\n      \n    } catch (error) {\n      this.errorCount++;\n      \n      if (this.config.debug) {\n        console.error('[ApiProxyServer] API request failed:', {\n          requestId: message.requestId,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        });\n      }\n      \n      // Send error response back to client\n      this.sendErrorResponse(source, message.requestId, error);\n    }\n  }\n\n  /**\n   * Process a proxy request (either plugin or direct API request)\n   */\n  private async processProxyRequest(request: ProxyRequest): Promise<any> {\n    if (!validateProxyRequest(request)) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_REQUEST,\n        'Invalid proxy request format'\n      );\n    }\n\n    if (request.type === 'plugin') {\n      return this.processPluginRequest(request);\n    } else if (request.type === 'direct') {\n      return this.processDirectRequest(request);\n    } else {\n      throw createProxyError(\n        ProxyErrorType.INVALID_REQUEST,\n        `Unknown request type: ${(request as any).type}`\n      );\n    }\n  }\n\n  /**\n   * Process a plugin-style request using the endpoint mapping\n   */\n  private async processPluginRequest(request: PluginRequest): Promise<ApiResponse> {\n    // Use existing endpoint mapping logic for plugin requests\n    const endpoint = this.getEndpointForPluginMethod(request.method);\n    \n    // Convert back to legacy format for compatibility with existing makeApiRequest\n    const legacyRequest: ApiRequest = {\n      method: request.method,\n      userId: request.userId,\n      communityId: request.communityId\n    };\n    \n    // Only include optional properties if they're defined\n    if (request.params !== undefined) {\n      legacyRequest.params = request.params;\n    }\n    if (request.signature !== undefined) {\n      legacyRequest.signature = request.signature;\n    }\n    \n    return this.makeApiRequest(endpoint, legacyRequest);\n  }\n\n  /**\n   * Process a direct HTTP API request\n   */\n  private async processDirectRequest(request: DirectApiRequest): Promise<ApiResponse> {\n    const rawData = await this.makeDirectHttpRequest(request);\n    \n    // \uD83D\uDE80 FIX: Wrap direct HTTP response in ApiResponse format for client compatibility\n    return {\n      success: true,\n      data: rawData\n    };\n  }\n\n  /**\n   * Get endpoint for plugin method (extracted from existing logic)\n   */\n  private getEndpointForPluginMethod(method: string): string {\n    const methodToEndpoint: Record<string, string> = {\n      'getUserInfo': '/api/user',\n      'getUserFriends': '/api/user',\n      'getContextData': '/api/user',\n      'getCommunityInfo': '/api/community',\n      'giveRole': '/api/community',\n      'getUserCommunities': '/api/communities',\n      'getUserProfile': '/api/auth/validate-session',\n      'getIrcCredentials': '/api/irc-user-provision'  // \uD83C\uDD95 NEW - For IRC chat functionality\n    };\n    \n    const endpoint = methodToEndpoint[method];\n    if (!endpoint) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_REQUEST,\n        `Unknown plugin method: ${method}`\n      );\n    }\n    \n    return endpoint;\n  }\n\n  /**\n   * Make a direct HTTP request with full control over method, headers, and body\n   */\n  private async makeDirectHttpRequest(request: DirectApiRequest): Promise<any> {\n    const url = request.url.startsWith('http') \n      ? request.url \n      : `${this.config.baseUrl}${request.url}`;\n    \n    const requestOptions: RequestInit = {\n      method: request.method || 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        ...this.config.headers,\n        ...request.headers\n      }\n    };\n    \n    // Add body for non-GET requests\n    if (request.body && requestOptions.method !== 'GET') {\n      requestOptions.body = typeof request.body === 'string' \n        ? request.body \n        : JSON.stringify(request.body);\n    }\n    \n    // Handle timeout if specified\n    const timeout = request.timeout || this.config.timeout;\n    if (timeout > 0) {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), timeout);\n      requestOptions.signal = controller.signal;\n      \n      try {\n        const response = await fetch(url, requestOptions);\n        clearTimeout(timeoutId);\n        return await this.processDirectHttpResponse(response);\n      } catch (error) {\n        clearTimeout(timeoutId);\n        throw error;\n      }\n    } else {\n      const response = await fetch(url, requestOptions);\n      return await this.processDirectHttpResponse(response);\n    }\n  }\n\n  /**\n   * Process response from direct HTTP request\n   */\n  private async processDirectHttpResponse(response: Response): Promise<any> {\n    if (!response.ok) {\n      throw createProxyError(\n        ProxyErrorType.NETWORK_ERROR,\n        `HTTP ${response.status}: ${response.statusText}`\n      );\n    }\n\n    // Try to parse as JSON, fall back to text\n    const contentType = response.headers.get('content-type') || '';\n    if (contentType.includes('application/json')) {\n      return await response.json();\n    } else {\n      return await response.text();\n    }\n  }\n\n  /**\n   * Make API request to host service\n   */\n  private async makeApiRequest(endpoint: string, payload: ApiRequest): Promise<ApiResponse> {\n    const url = `${this.config.baseUrl}${endpoint}`;\n    \n    // \uD83C\uDD95 NEW: Determine HTTP method and request format based on endpoint\n    let requestOptions: RequestInit;\n    \n    if (endpoint === '/api/communities') {\n      // GET request with Authorization header for communities\n      requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${payload.params?.sessionToken}`,\n          'Content-Type': 'application/json',\n          ...this.config.headers\n        }\n      };\n    } else if (endpoint === '/api/auth/validate-session') {\n      // POST request with sessionToken in body for profile\n      requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...this.config.headers\n        },\n        body: JSON.stringify({\n          sessionToken: payload.params?.sessionToken\n        })\n      };\n    } else {\n      // \uD83D\uDD04 EXISTING: Standard POST format for plugin methods\n      requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...this.config.headers\n        },\n        body: JSON.stringify(payload)\n      };\n    }\n\n    // \uD83D\uDD04 EXISTING: Timeout handling logic (unchanged)\n    if (this.config.timeout > 0) {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.config.timeout);\n      requestOptions.signal = controller.signal;\n      \n      try {\n        const response = await fetch(url, requestOptions);\n        clearTimeout(timeoutId);\n        \n        // \uD83C\uDFAF FIX: Handle different response formats based on endpoint\n        if (endpoint === '/api/communities' || endpoint === '/api/auth/validate-session' || endpoint === '/api/irc-user-provision') {\n          // These endpoints return raw NextJS responses - wrap in ApiResponse format\n          return await this.processRawApiResponse(response);\n        } else {\n          // Legacy plugin endpoints already return ApiResponse format\n          return await this.processResponse(response);\n        }\n      } catch (error) {\n        clearTimeout(timeoutId);\n        throw error;\n      }\n    } else {\n      const response = await fetch(url, requestOptions);\n      \n      // \uD83C\uDFAF FIX: Handle different response formats based on endpoint  \n      if (endpoint === '/api/communities' || endpoint === '/api/auth/validate-session' || endpoint === '/api/irc-user-provision') {\n        // These endpoints return raw NextJS responses - wrap in ApiResponse format\n        return await this.processRawApiResponse(response);\n      } else {\n        // Legacy plugin endpoints already return ApiResponse format\n        return await this.processResponse(response);\n      }\n    }\n  }\n\n  /**\n   * Process API response from host service\n   */\n  private async processResponse(response: Response): Promise<ApiResponse> {\n    if (!response.ok) {\n      throw createProxyError(\n        ProxyErrorType.NETWORK_ERROR,\n        `HTTP ${response.status}: ${response.statusText}`\n      );\n    }\n\n    let data: any;\n    try {\n      data = await response.json();\n    } catch (error) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_RESPONSE,\n        'Invalid JSON response from API'\n      );\n    }\n\n    // Validate response structure\n    if (typeof data !== 'object' || data === null) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_RESPONSE,\n        'Invalid response format from API'\n      );\n    }\n\n    return data;\n  }\n\n  /**\n   * Process raw API response from NextJS endpoints and wrap in ApiResponse format\n   */\n  private async processRawApiResponse(response: Response): Promise<ApiResponse> {\n    if (!response.ok) {\n      throw createProxyError(\n        ProxyErrorType.NETWORK_ERROR,\n        `HTTP ${response.status}: ${response.statusText}`\n      );\n    }\n\n    let rawData: any;\n    try {\n      rawData = await response.json();\n    } catch (error) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_RESPONSE,\n        'Invalid JSON response from API'\n      );\n    }\n\n    // Validate response structure\n    if (typeof rawData !== 'object' || rawData === null) {\n      throw createProxyError(\n        ProxyErrorType.INVALID_RESPONSE,\n        'Invalid response format from API'\n      );\n    }\n\n    // \uD83C\uDFAF CRITICAL FIX: Wrap raw data in ApiResponse format\n    return {\n      success: true,\n      data: rawData\n    };\n  }\n\n  /**\n   * Send successful response back to client\n   */\n  private sendSuccessResponse(source: Window, requestId: string, response: ApiResponse): void {\n    const message = createProxyResponse(requestId, response);\n    source.postMessage(message, '*');\n\n    if (this.config.debug) {\n      console.log('[ApiProxyServer] Success response sent:', {\n        requestId,\n        success: response.success\n      });\n    }\n  }\n\n  /**\n   * Send error response back to client\n   */\n  private sendErrorResponse(source: Window, requestId: string, error: any): void {\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n    const response: ApiResponse = {\n      success: false,\n      error: errorMessage\n    };\n\n    const message = createProxyResponse(requestId, response);\n    source.postMessage(message, '*');\n\n    if (this.config.debug) {\n      console.log('[ApiProxyServer] Error response sent:', {\n        requestId,\n        error: errorMessage\n      });\n    }\n  }\n\n  /**\n   * Get proxy server status\n   */\n  public getStatus(): ProxyServerStatus {\n    return {\n      isInitialized: this.isInitialized,\n      serverId: this.config.serverId,\n      baseUrl: this.config.baseUrl,\n      requestCount: this.requestCount,\n      errorCount: this.errorCount,\n      startTime: this.startTime,\n      lastRequestTime: this.lastRequestTime\n    };\n  }\n\n  /**\n   * Destroy the proxy server\n   */\n  public destroy(): void {\n    // Remove message listener\n    if (this.messageListener) {\n      window.removeEventListener('message', this.messageListener);\n      this.messageListener = null;\n    }\n\n    this.isInitialized = false;\n\n    if (this.config.debug) {\n      console.log('[ApiProxyServer] Destroyed');\n    }\n  }\n} ", "/**\n * @curia/iframe-api-proxy - Main exports\n * \n * API proxy system for iframe-based applications to bypass CSP restrictions.\n * Provides client-side (customer page) and server-side (iframe) components.\n */\n\n// Core client components\nexport { ApiProxyClient } from './client/ApiProxyClient';\n\n// Core server components\nexport { ApiProxyServer } from './server/ApiProxyServer';\n\n// Import for use in helper functions\nimport { ApiProxyClient } from './client/ApiProxyClient';\nimport { ApiProxyServer } from './server/ApiProxyServer';\n\n// Type definitions\nexport type {\n  // API types\n  ApiRequest,\n  ApiResponse,\n  ApiMethod,\n  ApiRequestUnion,\n  GetUserInfoRequest,\n  GetUserFriendsRequest,\n  GetContextDataRequest,\n  GetCommunityInfoRequest,\n  GiveRoleRequest\n} from './types/ApiTypes';\n\nexport {\n  // API utilities (non-type exports)\n  API_ENDPOINTS,\n  getEndpointForMethod,\n  validateApiRequest\n} from './types/ApiTypes';\n\nexport type {\n  // Message types\n  MessageType,\n  BaseMessage,\n  ForumApiRequestMessage,\n  ProxyApiRequestMessage,\n  ProxyApiResponseMessage,\n  ForumApiResponseMessage,\n  ProxyErrorMessage,\n  ProxyInitMessage,\n  ProxyReadyMessage,\n  ProxyMessage\n} from './types/MessageTypes';\n\nexport {\n  // Message utilities (non-type exports)\n  isProxyApiRequest,\n  isProxyApiResponse,\n  isForumApiRequest,\n  isProxyError,\n  generateRequestId,\n  createErrorMessage,\n  createProxyRequest,\n  createProxyResponse\n} from './types/MessageTypes';\n\nexport type {\n  // Proxy configuration types\n  ProxyClientConfig,\n  ProxyServerConfig,\n  ProxyClientStatus,\n  ProxyServerStatus,\n  ProxyError,\n  ProxyErrorType,\n  PendingRequest,\n  RequestTimeout\n} from './types/ProxyTypes';\n\nexport {\n  // Proxy utilities (non-type exports)\n  DEFAULT_CLIENT_CONFIG,\n  DEFAULT_SERVER_CONFIG,\n  createProxyError,\n  mergeClientConfig,\n  mergeServerConfig,\n  validateServerConfig,\n  isOriginAllowed\n} from './types/ProxyTypes';\n\n// Version information\nexport const VERSION = '1.0.0';\n\n// Package information\nexport const PACKAGE_NAME = '@curia_/iframe-api-proxy';\n\n/**\n * Quick start helper for client-side integration\n */\nexport function createProxyClient(config?: Partial<import('./types/ProxyTypes').ProxyClientConfig>): ApiProxyClient {\n  return new ApiProxyClient(config);\n}\n\n/**\n * Quick start helper for server-side integration\n */\nexport function createProxyServer(config: import('./types/ProxyTypes').ProxyServerConfig): ApiProxyServer {\n  return new ApiProxyServer(config);\n}\n\n/**\n * Package metadata\n */\nexport const METADATA = {\n  name: PACKAGE_NAME,\n  version: VERSION,\n  description: 'API proxy system for iframe-based applications to bypass CSP restrictions',\n  repository: 'https://github.com/curia/host-service/tree/main/packages/iframe-api-proxy',\n  documentation: 'https://github.com/curia/host-service/blob/main/packages/iframe-api-proxy/README.md'\n} as const; ", "/**\n * Embed Configuration Module\n * \n * Handles parsing configuration from script data attributes\n */\n\nimport { EmbedConfig } from '../types/EmbedTypes';\n\n/**\n * Parse configuration from script data attributes\n */\nexport function parseEmbedConfig(scriptElement?: HTMLScriptElement): EmbedConfig {\n  // Get the script element - either passed in or from document.currentScript\n  const script = scriptElement || (document.currentScript as HTMLScriptElement);\n  if (!script) {\n    throw new Error('[Curia] Could not find script element');\n  }\n\n  // Read configuration from data attributes\n  const config: EmbedConfig = {\n    community: script.getAttribute('data-community') || null,\n    theme: (script.getAttribute('data-theme') as 'light' | 'dark' | 'auto') || 'light',\n    backgroundColor: script.getAttribute('data-background-color') || undefined,\n    borderRadius: script.getAttribute('data-border-radius') || undefined,\n    container: script.getAttribute('data-container') || null,\n    height: script.getAttribute('data-height') || '600px',\n    width: script.getAttribute('data-width') || '100%',\n    mode: (script.getAttribute('data-mode') as 'full' | 'auth-only') || 'full'\n  };\n\n  console.log('[Curia] Parsed embed config:', config);\n  console.log('[Curia] Dimensions parsed:', {\n    width: config.width,\n    height: config.height,\n    widthSource: script.getAttribute('data-width') ? 'data-width' : 'default',\n    heightSource: script.getAttribute('data-height') ? 'data-height' : 'default'\n  });\n  return config;\n}\n\n/**\n * Validate embed configuration\n */\nexport function validateEmbedConfig(config: EmbedConfig): void {\n  // Validate theme\n  if (config.theme !== 'light' && config.theme !== 'dark' && config.theme !== 'auto') {\n    console.warn('[Curia] Invalid theme, using light:', config.theme);\n    config.theme = 'light';\n  }\n\n  // Validate background color (if provided)\n  if (config.backgroundColor && !config.backgroundColor.match(/^#[0-9A-Fa-f]{6}$/)) {\n    console.warn('[Curia] Invalid background color format, removing:', config.backgroundColor);\n    config.backgroundColor = undefined;\n  }\n\n  // Validate height format\n  if (config.height && !config.height.match(/^\\d+(px|%|vh|em|rem)$/)) {\n    console.warn('[Curia] Invalid height format, using 600px:', config.height);\n    config.height = '600px';\n  }\n\n  // Validate width format\n  if (config.width && !config.width.match(/^\\d+(px|%|vw|em|rem)$/)) {\n    console.warn('[Curia] Invalid width format, using 100%:', config.width);\n    config.width = '100%';\n  }\n}\n\n/**\n * Generate embed script configuration JavaScript\n */\nexport function generateConfigCode(config: EmbedConfig): string {\n  return `\n  // Get the script element that loaded this code\n  const script = document.currentScript;\n  if (!script) {\n    console.error('[Curia] Could not find script element');\n    return;\n  }\n\n  // Read configuration from data attributes\n  const config = {\n    community: script.getAttribute('data-community') || null,\n    theme: script.getAttribute('data-theme') || 'light',\n    backgroundColor: script.getAttribute('data-background-color') || undefined,\n    borderRadius: script.getAttribute('data-border-radius') || undefined,\n    container: script.getAttribute('data-container') || null,\n    height: script.getAttribute('data-height') || '600px',\n    width: script.getAttribute('data-width') || '100%'\n  };\n\n  console.log('[Curia] Initializing embed with config:', config);\n  `;\n} ", "/**\n * Internal Plugin Host - Self-contained plugin hosting within embed script\n * \n * This class embeds all ClientPluginHost functionality directly into the embed script,\n * making it completely self-contained so customers don't need to implement any logic.\n * \n * Updated to use SessionManager instead of localStorage for session management.\n * \n * Responsibilities:\n * 1. Handle auth completion from embed iframe\n * 2. Manage iframe switching (auth \u2192 forum)\n * 3. Route API requests from forum to host service\n * 4. Maintain auth context throughout session\n */\n\nimport { EmbedConfig } from '../types/EmbedTypes';\nimport { ApiProxyClient } from '@curia_/iframe-api-proxy';\nimport { sessionManager } from '../../SessionManager';\nimport { SessionServiceProxy } from '../services/SessionServiceProxy';\nimport { CommunitySidebar } from '../components';\nimport {\n  AuthenticationService,\n  AuthenticationCallbacks,\n  InternalAuthContext,\n  UserCommunityMembership,\n  UserProfile,\n  MessageRouter,\n  MessageRouterCallbacks,\n  IframeManager,\n  IframeManagerCallbacks\n} from '../services';\n\n// Interface definitions moved to services - imported above\n\nenum InternalMessageType {\n  API_REQUEST = 'api_request',\n  API_RESPONSE = 'api_response',\n  INIT = 'init',\n  ERROR = 'error'\n}\n\n/**\n * Internal plugin message interface\n */\ninterface InternalPluginMessage {\n  type: InternalMessageType;\n  iframeUid: string;\n  requestId: string;\n  method?: string;\n  params?: any;\n  data?: any;\n  error?: string;\n}\n\n/**\n * Get iframe permissions for forum functionality\n */\nfunction getIframePermissions(): string {\n  return [\n    'clipboard-write *',\n    'clipboard-read *', \n    'fullscreen *',\n    'web-share *',\n    'autoplay *',\n    'picture-in-picture *',\n    'payment *',\n    'encrypted-media *',\n    'storage-access *',\n    'camera *',\n    'microphone *',\n    'geolocation *'\n  ].join('; ');\n}\n\n/**\n * Internal Plugin Host - Lean orchestrator using service layer architecture\n * \n * Responsibilities:\n * - Coordinate between services\n * - Manage overall embed lifecycle\n * - Handle UI component composition\n * - Orchestrate phase transitions (auth \u2192 forum)\n */\nexport class InternalPluginHost {\n  // \uD83D\uDE80 FIX: Singleton API proxy to prevent multiple client instances in React Strict Mode\n  private static sharedApiProxy: ApiProxyClient | null = null;\n  \n  // \uD83D\uDE80 FIX: Singleton session service to prevent multiple iframes and proxies\n  private static sharedSessionServiceIframe: HTMLIFrameElement | null = null;\n  private static sharedSessionServiceProxy: SessionServiceProxy | null = null;\n  private static sessionServiceRefCount = 0;\n  \n  /**\n   * Get shared ApiProxyClient instance for embed context\n   */\n  private static getSharedApiProxy(): ApiProxyClient {\n    if (!InternalPluginHost.sharedApiProxy) {\n      console.log('[InternalPluginHost] Creating shared ApiProxyClient singleton');\n      InternalPluginHost.sharedApiProxy = new ApiProxyClient({\n        debug: true,\n        defaultTimeout: 10000,\n        maxRetries: 3\n      });\n    } else {\n      console.log('[InternalPluginHost] Reusing shared ApiProxyClient singleton');\n    }\n    return InternalPluginHost.sharedApiProxy;\n  }\n  \n  /**\n   * Get shared session service (iframe + proxy) for embed context\n   */\n  private static getSharedSessionService(hostServiceUrl: string): { iframe: HTMLIFrameElement; proxy: SessionServiceProxy } {\n    if (!InternalPluginHost.sharedSessionServiceIframe || !InternalPluginHost.sharedSessionServiceProxy) {\n      console.log('[InternalPluginHost] Creating shared session service singleton');\n      \n      // Create hidden session service iframe\n      InternalPluginHost.sharedSessionServiceIframe = document.createElement('iframe');\n      InternalPluginHost.sharedSessionServiceIframe.src = `${hostServiceUrl}/session-service`;\n      InternalPluginHost.sharedSessionServiceIframe.style.display = 'none';\n      InternalPluginHost.sharedSessionServiceIframe.style.position = 'absolute';\n      InternalPluginHost.sharedSessionServiceIframe.style.width = '0px';\n      InternalPluginHost.sharedSessionServiceIframe.style.height = '0px';\n      InternalPluginHost.sharedSessionServiceIframe.style.border = 'none';\n      InternalPluginHost.sharedSessionServiceIframe.setAttribute('data-purpose', 'session-service');\n      InternalPluginHost.sharedSessionServiceIframe.setAttribute('data-curia-iframe', 'true');\n      \n      // Add to document body\n      document.body.appendChild(InternalPluginHost.sharedSessionServiceIframe);\n      \n      console.log('[InternalPluginHost] Session service iframe created and added to DOM');\n      \n      // Initialize proxy\n      InternalPluginHost.sharedSessionServiceProxy = new SessionServiceProxy(InternalPluginHost.sharedSessionServiceIframe);\n    } else {\n      console.log('[InternalPluginHost] Reusing shared session service singleton');\n    }\n    \n    InternalPluginHost.sessionServiceRefCount++;\n    console.log(`[InternalPluginHost] Session service ref count: ${InternalPluginHost.sessionServiceRefCount}`);\n    \n    return {\n      iframe: InternalPluginHost.sharedSessionServiceIframe,\n      proxy: InternalPluginHost.sharedSessionServiceProxy\n    };\n  }\n  \n  /**\n   * Clean up shared resources (called when embed is destroyed)\n   */\n  private static cleanupSharedResources(): void {\n    // Clean up API proxy\n    if (InternalPluginHost.sharedApiProxy) {\n      console.log('[InternalPluginHost] Destroying shared ApiProxyClient singleton');\n      InternalPluginHost.sharedApiProxy.destroy();\n      InternalPluginHost.sharedApiProxy = null;\n    }\n    \n    // Clean up session service (with ref counting)\n    InternalPluginHost.sessionServiceRefCount--;\n    console.log(`[InternalPluginHost] Session service ref count: ${InternalPluginHost.sessionServiceRefCount}`);\n    \n    if (InternalPluginHost.sessionServiceRefCount <= 0) {\n      if (InternalPluginHost.sharedSessionServiceProxy) {\n        console.log('[InternalPluginHost] Destroying shared session service singleton');\n        InternalPluginHost.sharedSessionServiceProxy.destroy();\n        InternalPluginHost.sharedSessionServiceProxy = null;\n      }\n      if (InternalPluginHost.sharedSessionServiceIframe && InternalPluginHost.sharedSessionServiceIframe.parentNode) {\n        InternalPluginHost.sharedSessionServiceIframe.parentNode.removeChild(InternalPluginHost.sharedSessionServiceIframe);\n        InternalPluginHost.sharedSessionServiceIframe = null;\n      }\n      console.log('[InternalPluginHost] Session service singleton destroyed');\n    }\n  }\n  private container: HTMLElement;\n  private config: EmbedConfig;\n  private hostServiceUrl: string;\n  private forumUrl: string;\n  \n  // Service Layer - Injected Dependencies\n  private authService: AuthenticationService;\n  private messageRouter: MessageRouter;\n  private iframeManager: IframeManager;\n  private apiProxy: ApiProxyClient;\n  \n  // Session Service - Dedicated iframe for cross-domain session management\n  private sessionServiceIframe: HTMLIFrameElement | null = null;\n  private sessionServiceProxy: SessionServiceProxy | null = null;\n  private sessionServiceSyncTimer: NodeJS.Timeout | null = null;\n  \n  // UI State\n  private communitySidebar: CommunitySidebar | null = null;\n  private embedContainer: HTMLElement | null = null;\n  \n  // Discovery Modal State\n  private discoveryModal: HTMLElement | null = null;\n  private discoveryIframe: HTMLIFrameElement | null = null;\n  \n  // Add Session Modal State\n  private addSessionModal: HTMLElement | null = null;\n  private addSessionIframe: HTMLIFrameElement | null = null;\n  \n  // Multi-iframe community switching\n  private communityIframes: Map<string, HTMLIFrameElement> = new Map();\n  private activeCommunityId: string | null = null;\n  \n  // Community polling for sidebar refresh (covers both initial load and switchCommunity joins)\n  private communityPollingTimer: NodeJS.Timeout | null = null;\n  private lastKnownCommunities: UserCommunityMembership[] = [];\n  \n  // Cross-tab update throttling\n  private lastCrossTabReload: number = 0;\n  private readonly CROSS_TAB_RELOAD_THROTTLE = 2000; // 2 seconds\n  \n  // Signature validation\n  private readonly publicKey: string;\n\n  // Global keyboard shortcuts\n  private keyboardListener: ((event: KeyboardEvent) => void) | null = null;  // \uD83C\uDD95 NEW - Store listener for cleanup\n\n  constructor(container: HTMLElement, config: EmbedConfig, hostServiceUrl: string, forumUrl: string, publicKey: string) {\n    this.container = container;\n    this.config = config;\n    this.hostServiceUrl = hostServiceUrl;\n    this.forumUrl = forumUrl;\n    this.publicKey = publicKey;\n    \n    // \uD83D\uDE80 FIX: Use singleton API proxy to prevent multiple client instances\n    this.apiProxy = InternalPluginHost.getSharedApiProxy();\n    \n    // \uD83D\uDD27 Configure SessionManager with host service URL and API proxy for embed context\n    sessionManager.configure(hostServiceUrl, this.apiProxy);\n    \n    // Initialize services with dependency injection\n    // Note: Create IframeManager first to get UID for MessageRouter\n    this.iframeManager = new IframeManager(\n      hostServiceUrl,\n      forumUrl,\n      this.apiProxy,\n      {\n        onIframeSwitch: this.onIframeSwitch.bind(this)\n      }\n    );\n    \n    this.authService = new AuthenticationService(hostServiceUrl, {\n      onAuthComplete: this.onAuthComplete.bind(this),\n      onSessionSwitch: this.onSessionSwitch.bind(this),\n      onSignOut: this.onSignOut.bind(this),\n      onCrossTabSessionUpdate: this.onCrossTabUpdate.bind(this)\n    }, this.apiProxy);  // \uD83C\uDD95 NEW - Pass API proxy for CSP-compliant calls\n    \n    this.messageRouter = new MessageRouter(\n      this.iframeManager.getUid(),\n      this.apiProxy, // Share the same ApiProxyClient instance!\n      {\n        onAuthComplete: this.onMessageAuthComplete.bind(this),\n        onForumInit: this.onForumInit.bind(this),\n        getAuthContext: () => this.authService.getAuthContext(),\n        onCommunitySwitchRequest: this.handleCommunitySwitchRequest.bind(this),\n        onCommunityDiscoveryComplete: this.handleCommunityDiscoveryComplete.bind(this),\n        onAddSessionComplete: this.handleAddSessionComplete.bind(this),\n        onApiProxyReady: this.onApiProxyReady.bind(this),\n        getActiveIframe: this.getActiveIframe.bind(this)  // \uD83C\uDD95 NEW - Provide active iframe access\n      },\n      publicKey // Pass public key for signature validation\n    );\n    \n    // \uD83D\uDE80 NEW: Initialize dedicated session service iframe for cross-domain session persistence\n    // (async, non-blocking - will sync session data when ready)\n    this.initializeSessionService().catch(error => {\n      console.error('[InternalPluginHost] Session service initialization failed:', error);\n    });\n    \n    // Initialize the embed\n    this.initialize();\n    \n    console.log(`[MULTI-IFRAME] InternalPluginHost initialized with multi-iframe community switching support`);\n  }\n\n  /**\n   * Initialize dedicated session service iframe for cross-domain session persistence\n   */\n  private async initializeSessionService(): Promise<void> {\n    console.log('[InternalPluginHost] Initializing dedicated session service iframe');\n    \n    try {\n      // \uD83D\uDE80 FIX: Use singleton session service to prevent multiple iframes\n      const sessionService = InternalPluginHost.getSharedSessionService(this.hostServiceUrl);\n      this.sessionServiceIframe = sessionService.iframe;\n      this.sessionServiceProxy = sessionService.proxy;\n      \n      console.log('[InternalPluginHost] Session service singleton initialized');\n      \n      // \uD83D\uDE80 NEW: Wait for session service to be ready and sync data to parent SessionManager\n      await this.syncSessionServiceToParent();\n      \n    } catch (error) {\n      console.error('[InternalPluginHost] Failed to initialize session service:', error);\n    }\n  }\n\n  /**\n   * Sync session data from session service to parent SessionManager (explicit integration)\n   */\n  private async syncSessionServiceToParent(): Promise<void> {\n    try {\n      if (!this.sessionServiceProxy) {\n        console.warn('[InternalPluginHost] No session service proxy available for sync');\n        return;\n      }\n\n      console.log('[InternalPluginHost] \uD83D\uDD04 Waiting for session service to be ready...');\n      await this.sessionServiceProxy.waitForReady();\n      \n      console.log('[InternalPluginHost] \uD83D\uDD04 Session service ready, syncing data to parent SessionManager...');\n      \n      // Pull authoritative session data from session service\n      console.log('[InternalPluginHost] \uD83D\uDD04 Requesting all sessions from session service...');\n      const sessions = await this.sessionServiceProxy.getAllSessions();\n      console.log('[InternalPluginHost] \uD83D\uDD04 All sessions received:', sessions?.length || 0);\n      \n      console.log('[InternalPluginHost] \uD83D\uDD04 Requesting active session from session service...');\n      const activeSession = await this.sessionServiceProxy.getActiveSession();\n      console.log('[InternalPluginHost] \uD83D\uDD04 Active session received:', activeSession?.userId || 'none');\n      \n      console.log('[InternalPluginHost] \uD83D\uDD04 Retrieved from session service:', sessions?.length || 0, 'sessions, active:', activeSession?.userId || 'none');\n      \n      // Update parent SessionManager with authoritative data\n      sessionManager.bulkUpdateSessions(sessions);\n      \n      if (activeSession && sessions.some(s => s.sessionToken === activeSession.sessionToken)) {\n        sessionManager.setActiveSession(activeSession.sessionToken);\n        console.log('[InternalPluginHost] \uD83D\uDD04 Active session set to:', activeSession.userId);\n      }\n      \n      console.log('[InternalPluginHost] \u2705 Session service sync completed successfully');\n      \n      // Setup periodic refresh to keep parent in sync with session service\n      this.setupSessionServicePeriodicSync();\n      \n    } catch (error) {\n      console.error('[InternalPluginHost] Failed to sync session service to parent:', error);\n      console.error('[InternalPluginHost] Session service proxy state:', {\n        exists: !!this.sessionServiceProxy,\n        iframe: !!this.sessionServiceIframe,\n        iframeContentWindow: !!this.sessionServiceIframe?.contentWindow,\n        iframeSrc: this.sessionServiceIframe?.src\n      });\n    }\n  }\n\n  /**\n   * Setup periodic sync timer to keep parent SessionManager in sync with session service\n   */\n  private setupSessionServicePeriodicSync(): void {\n    // Clear any existing timer\n    if (this.sessionServiceSyncTimer) {\n      clearInterval(this.sessionServiceSyncTimer);\n    }\n    \n    // Setup new periodic sync (every 30 seconds)\n    this.sessionServiceSyncTimer = setInterval(async () => {\n      try {\n        if (!this.sessionServiceProxy) return;\n        \n        console.log('[InternalPluginHost] \uD83D\uDD04 Periodic session service sync...');\n        const sessions = await this.sessionServiceProxy.getAllSessions();\n        sessionManager.bulkUpdateSessions(sessions);\n        console.log('[InternalPluginHost] \uD83D\uDD04 Periodic sync completed:', sessions.length, 'sessions');\n      } catch (error) {\n        console.warn('[InternalPluginHost] Periodic session sync failed:', error);\n      }\n    }, 30000); // 30 seconds\n    \n    console.log('[InternalPluginHost] \uD83D\uDD04 Periodic session service sync timer established');\n  }\n\n  /**\n   * Initialize the embed - start with auth phase\n   */\n  private initialize(): void {\n    console.log('[InternalPluginHost] Initializing embed');\n    \n    // \uD83C\uDFAF CRITICAL FIX: Apply theme to document early (fixes community sidebar and profile menu)\n    this.applyThemeToDocument();\n    \n    // Setup message listener and cross-tab sync\n    this.messageRouter.setupMessageListener();\n    this.authService.setupCrossTabSessionListener();\n    \n    // Create and display auth iframe\n    this.initializeAuthPhase();\n  }\n\n  /**\n   * Resolve theme from config and system preferences\n   * Extracted from getThemeAwareBackground for reuse\n   */\n  private resolveTheme(): 'light' | 'dark' {\n    let resolvedTheme = this.config.theme || 'light';\n    if (resolvedTheme === 'auto') {\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        resolvedTheme = 'dark';\n      } else {\n        resolvedTheme = 'light';\n      }\n      console.log('[InternalPluginHost] Resolved auto theme to:', resolvedTheme);\n    }\n    return resolvedTheme as 'light' | 'dark';\n  }\n\n  /**\n   * Apply resolved theme to document.documentElement \n   * This fixes community sidebar and profile menu theming by matching Next.js page behavior\n   */\n  private applyThemeToDocument(): void {\n    const resolvedTheme = this.resolveTheme();\n    \n    console.log('[InternalPluginHost] Applying theme to document:', resolvedTheme);\n    \n    // Remove existing theme classes to avoid conflicts\n    document.documentElement.classList.remove('light', 'dark');\n    \n    // Add resolved theme class (matches EmbedThemeProvider behavior)\n    document.documentElement.classList.add(resolvedTheme);\n    \n    console.log('[InternalPluginHost] Document theme applied - sidebar and profile menu should now work correctly');\n  }\n\n  // ============================================================================\n  // SERVICE CALLBACK HANDLERS - Orchestration Logic\n  // ============================================================================\n\n  /**\n   * Handle authentication completion from auth service (with context)\n   */\n  private async onAuthComplete(authData: any, context: InternalAuthContext): Promise<void> {\n    console.log('[InternalPluginHost] Auth completion received from service');\n    if (authData.mode === 'auth-only') {\n      console.log('[InternalPluginHost] Auth-only mode - staying on auth phase');\n      return;\n    }\n    \n    // \uD83C\uDFAF STEP 1: Prepare API proxy with early forum iframe creation\n    console.log('[InternalPluginHost] Step 1: Preparing API proxy server');\n    await this.prepareApiProxy();\n    \n    // \uD83C\uDFAF STEP 2: Initialize community navigation with working API proxy\n    console.log('[InternalPluginHost] Step 2: Fetching community/profile data via API proxy');\n    await this.initializeCommunityNavigation();\n    \n    // \uD83C\uDFAF STEP 3: Complete forum layout setup (sidebar now exists)\n    console.log('[InternalPluginHost] Step 3: Setting up final layout with sidebar');\n    await this.switchToForum();\n  }\n\n  /**\n   * Handle authentication completion from message router (without context)\n   */\n  private async onMessageAuthComplete(authData: any): Promise<void> {\n    console.log('[InternalPluginHost] Auth completion received from message router');\n    \n    // Delegate to auth service handler\n    await this.authService.handleAuthCompletion(authData);\n  }\n\n  /**\n   * Handle session switching from auth service\n   * Performs full embed reload to ensure new session context is properly applied\n   */\n  private async onSessionSwitch(profile: UserProfile): Promise<void> {\n    console.log('[InternalPluginHost] Session switch detected - performing full embed reload');\n    console.log('[InternalPluginHost] New session profile:', profile);\n    \n    // Perform full reload to pick up new session context\n    this.reloadForSessionSwitch();\n  }\n\n  /**\n   * Handle sign out from auth service\n   */\n  private onSignOut(): void {\n    console.log('[InternalPluginHost] Sign out received from service');\n    this.resetToInitialState();\n  }\n\n  /**\n   * Handle cross-tab session updates with throttling\n   */\n  private onCrossTabUpdate(): void {\n    console.log('[InternalPluginHost] Cross-tab update received from service');\n    \n    // Throttle rapid successive cross-tab updates\n    const now = Date.now();\n    if (now - this.lastCrossTabReload < this.CROSS_TAB_RELOAD_THROTTLE) {\n      console.log('[InternalPluginHost] Cross-tab update throttled - too recent');\n      return;\n    }\n\n    // Get current auth context to check if we actually need to reload\n    const currentAuthContext = this.authService.getAuthContext();\n    if (!currentAuthContext) {\n      console.log('[InternalPluginHost] No auth context - skipping cross-tab update');\n      return;\n    }\n\n    // Only reload if we're in the forum phase (have an iframe that needs session updates)\n    const currentIframe = this.iframeManager.getCurrentIframe();\n    if (currentIframe && currentIframe.src.includes('mod=standalone')) {\n      console.log('[InternalPluginHost] Reloading forum iframe due to cross-tab session change');\n      this.lastCrossTabReload = now;\n      this.iframeManager.reloadCurrentIframe();\n    } else {\n      console.log('[InternalPluginHost] Auth phase - no reload needed for cross-tab update');\n    }\n  }\n\n  /**\n   * Handle forum initialization\n   */\n  private onForumInit(): void {\n    console.log('[InternalPluginHost] Forum initialized');\n  }\n\n  /**\n   * Handle iframe switching\n   */\n  private onIframeSwitch(iframe: HTMLIFrameElement, type: 'auth' | 'forum'): void {\n    console.log(`[InternalPluginHost] Iframe switched to: ${type}`, {\n      iframeSrc: iframe.src,\n      hasContentWindow: !!iframe.contentWindow,\n      iframeUid: this.iframeManager.getUid()\n    });\n    \n    // Could add additional logic here for iframe lifecycle management\n    // For now, the services handle the specifics\n  }\n\n  // ============================================================================\n  // ORCHESTRATION METHODS - Compose services for complex operations\n  // ============================================================================\n\n  /**\n   * Prepare API proxy by creating forum iframe (without layout setup)\n   * This ensures the API proxy server is ready before we fetch community/profile data\n   */\n  private async prepareApiProxy(): Promise<void> {\n    console.log('[InternalPluginHost] Preparing API proxy with early forum iframe creation');\n    \n    const authContext = this.authService.getAuthContext();\n    if (!authContext) {\n      console.error('[InternalPluginHost] Cannot prepare API proxy - no auth context');\n      return;\n    }\n\n    // \uD83D\uDE80 FIX: Auto-join user to community if they selected one (first-time user flow)\n    if (authContext.communityId) {\n      console.log(`[InternalPluginHost] Auto-joining user to selected community: ${authContext.communityId}`);\n      await this.autoJoinCommunityOnVisit(authContext.communityId, authContext.userId);\n    }\n\n    // Create forum iframe (hidden) just for API proxy functionality\n    const tempContainer = document.createElement('div');\n    tempContainer.style.display = 'none'; // Hide until full layout\n    this.container.appendChild(tempContainer);\n    \n    // Create forum iframe using service - this sets up the API proxy server\n    const proxyIframe = this.iframeManager.createForumIframe(\n      this.config,\n      authContext,\n      tempContainer\n    );\n    \n    // \uD83C\uDFAF CRITICAL FIX: Wait for API proxy ready notification instead of guessing\n    await this.waitForApiProxyReady(proxyIframe);\n    console.log('[InternalPluginHost] API proxy ready notification received - ready for API calls');\n    \n    // Track this iframe for community switching (using auth context community)\n    if (authContext.communityId) {\n      console.log(`[InternalPluginHost] Tracking proxy iframe for community: ${authContext.communityId}`);\n      this.communityIframes.set(authContext.communityId, proxyIframe);\n      this.activeCommunityId = authContext.communityId;\n    }\n    \n    console.log('[InternalPluginHost] API proxy prepared - forum iframe ready for API calls');\n  }\n\n  // ============================================================================\n  // API PROXY EVENT HANDLERS - Event-driven iframe readiness\n  // ============================================================================\n\n  /**\n   * Handle API proxy ready notification from iframe\n   * Resolves waiting promises when the expected iframe is ready\n   */\n  private apiProxyReadyPromise: Promise<void> | null = null;\n  private apiProxyReadyResolve: (() => void) | null = null;\n\n  private onApiProxyReady(sourceWindow: Window): void {\n    console.log('[InternalPluginHost] API proxy ready notification received');\n    \n    // Resolve the waiting promise if one exists\n    if (this.apiProxyReadyResolve) {\n      this.apiProxyReadyResolve();\n      this.apiProxyReadyResolve = null;\n      this.apiProxyReadyPromise = null;\n    }\n\n    // \uD83D\uDE80 NEW: Trigger SessionManager initial sync now that API proxy is ready\n    sessionManager.triggerInitialSyncWhenReady();\n  }\n\n  /**\n   * Wait for API proxy ready notification from specific iframe\n   * Event-driven replacement for iframe load polling\n   */\n  private waitForApiProxyReady(expectedIframe: HTMLIFrameElement): Promise<void> {\n    if (this.apiProxyReadyPromise) {\n      return this.apiProxyReadyPromise;\n    }\n\n    this.apiProxyReadyPromise = new Promise((resolve) => {\n      this.apiProxyReadyResolve = resolve;\n      \n      // Set a reasonable timeout (should be much faster than before)\n      setTimeout(() => {\n        if (this.apiProxyReadyResolve) {\n          console.warn('[InternalPluginHost] API proxy ready timeout - falling back to old behavior');\n          this.apiProxyReadyResolve();\n          this.apiProxyReadyResolve = null;\n          this.apiProxyReadyPromise = null;\n        }\n      }, 5000); // Much shorter timeout since we expect immediate notification\n    });\n\n    return this.apiProxyReadyPromise;\n  }\n\n  /**\n   * Initialize auth phase - now delegates to IframeManager service\n   */\n  private initializeAuthPhase(): void {\n    console.log('[InternalPluginHost] Initializing auth phase via service');\n    \n    // Apply config dimensions to the main container first\n    this.applyContainerDimensions();\n    \n    // Create auth iframe using service\n    const iframe = this.iframeManager.createAuthIframe(this.config);\n    \n    // Add iframe to container\n    this.container.appendChild(iframe);\n    \n    console.log('[InternalPluginHost] Auth iframe created and added to container');\n  }\n\n  /**\n   * Get theme-aware background color based on config and system preferences\n   */\n  private getThemeAwareBackground(): string {\n    // If background color is explicitly set in config, use that\n    if (this.config.backgroundColor) {\n      return this.config.backgroundColor;\n    }\n    \n    // Use centralized theme resolution\n    const resolvedTheme = this.resolveTheme();\n    \n    // Return theme-appropriate background\n    return resolvedTheme === 'dark' ? '#0f172a' : '#ffffff';\n  }\n\n  /**\n   * Apply config dimensions to the main container element\n   */\n  private applyContainerDimensions(): void {\n    console.log('[InternalPluginHost] Applying container dimensions:', {\n      width: this.config.width,\n      height: this.config.height\n    });\n    \n    // Apply width and height from config to the main container\n    this.container.style.width = this.config.width || '100%';\n    this.container.style.height = this.config.height || '600px';\n    \n    // Ensure the container has proper display properties\n    if (!this.container.style.display) {\n      this.container.style.display = 'block';\n    }\n    \n    // Add border radius if specified\n    if (this.config.borderRadius) {\n      this.container.style.borderRadius = this.config.borderRadius;\n      this.container.style.overflow = 'hidden';\n    }\n    \n    console.log('[InternalPluginHost] Container dimensions applied');\n  }\n\n  /**\n   * Initialize community navigation if user has multiple communities\n   */\n  private async initializeCommunityNavigation(): Promise<void> {\n    console.log('[InternalPluginHost] Initializing community navigation');\n    \n    // Fetch both user communities and profile data from service\n    const [communities, profile] = await Promise.all([\n      this.authService.fetchUserCommunities(),\n      this.authService.fetchUserProfile()\n    ]);\n    \n    // Always show sidebar - adapt content based on community count\n    console.log('[InternalPluginHost] User has', communities.length, 'communities, showing navigation');\n    console.log(`[MULTI-IFRAME] Community navigation initialized - switching enabled for ${communities.length} communities`);\n    \n    // Create community sidebar with user profile and menu action handler\n    this.communitySidebar = new CommunitySidebar({\n      communities,\n      currentCommunityId: this.authService.getAuthContext()?.communityId || '',\n      userProfile: profile,\n      hostServiceUrl: this.hostServiceUrl, // \uD83C\uDFAF Pass host service URL for absolute asset paths\n      onCommunitySelect: (community) => {\n        console.log('[InternalPluginHost] Community selected:', community.name);\n        console.log(`[MULTI-IFRAME] Community selection triggered for: ${community.id} (${community.name})`);\n        this.switchToCommunity(community.id).catch(error => {\n          console.error(`[MULTI-IFRAME] Failed to switch to community ${community.id}:`, error);\n        });\n      },\n      onMenuAction: (action: string) => this.handleMenuAction(action),\n      getIframeStatus: (communityId: string) => this.hasIframeLoaded(communityId),\n      onPlusButtonClick: () => this.openDiscoveryModal(),\n      embedContainer: this.embedContainer || undefined, // \uD83C\uDFAF Pass embed container for mobile boundary respect (null \u2192 undefined)\n      messageRouter: this.messageRouter  // \uD83C\uDD95 NEW - Pass MessageRouter for sidebar actions\n    });\n\n    // \uD83D\uDE80 REMOVED: Start initial 5-second polling to catch immediate community joins\n    // this.startCommunityPolling('initial'); // REPLACED by auto-join on visit\n  }\n\n  /**\n   * Start 5-second community polling (DRY implementation)\n   * Used for both initial load and switchCommunity scenarios\n   */\n  private startCommunityPolling(reason: 'initial' | 'community-switch'): void {\n    console.log(`[InternalPluginHost] Starting 5-second community polling (${reason})`);\n    \n    // Stop any existing polling first\n    this.stopCommunityPolling();\n    \n    let pollCount = 0;\n    const maxPolls = 5;\n    \n    this.communityPollingTimer = setInterval(async () => {\n      pollCount++;\n      console.log(`[InternalPluginHost] Community refresh poll ${pollCount}/${maxPolls} (${reason})`);\n      \n      try {\n        await this.refreshCommunitySidebar();\n      } catch (error) {\n        console.error('[InternalPluginHost] Failed to refresh communities during polling:', error);\n      }\n      \n      // Stop polling after 5 iterations\n      if (pollCount >= maxPolls) {\n        console.log(`[InternalPluginHost] Polling completed (${reason}), switching to event-driven updates`);\n        this.stopCommunityPolling();\n      }\n    }, 1000); // Poll every second for 5 seconds\n  }\n\n  /**\n   * Stop the community polling timer\n   */\n  private stopCommunityPolling(): void {\n    if (this.communityPollingTimer) {\n      clearInterval(this.communityPollingTimer);\n      this.communityPollingTimer = null;\n    }\n  }\n\n  /**\n   * Refresh the community sidebar with fresh data (with flickering prevention)\n   * Used by both initial polling and switchCommunity events\n   */\n  private async refreshCommunitySidebar(): Promise<void> {\n    if (!this.communitySidebar) {\n      console.log('[InternalPluginHost] Skipping sidebar refresh - sidebar not initialized');\n      return;\n    }\n    \n    try {\n      const freshCommunities = await this.authService.fetchUserCommunities();\n      \n      // \uD83C\uDFAF RACE CONDITION FIX: Check sidebar still exists after async operation\n      if (!this.communitySidebar) {\n        console.log('[InternalPluginHost] Sidebar became null during community fetch - skipping update');\n        return;\n      }\n      \n      // \uD83C\uDFAF FLICKERING FIX: Only update UI if communities actually changed\n      if (this.hasCommunitiesChanged(freshCommunities, this.lastKnownCommunities)) {\n        this.communitySidebar.updateCommunities(freshCommunities);\n        this.lastKnownCommunities = freshCommunities;\n        console.log(`[InternalPluginHost] Sidebar updated with ${freshCommunities.length} communities (changes detected)`);\n      } else {\n        console.log(`[InternalPluginHost] No community changes detected, skipping UI update`);\n      }\n    } catch (error) {\n      console.error('[InternalPluginHost] Failed to refresh community sidebar:', error);\n    }\n  }\n\n  /**\n   * Compare two community arrays to detect actual changes\n   * Prevents unnecessary UI flickering during polling\n   */\n  private hasCommunitiesChanged(\n    newCommunities: UserCommunityMembership[], \n    oldCommunities: UserCommunityMembership[]\n  ): boolean {\n    // Different lengths = definitely changed\n    if (newCommunities.length !== oldCommunities.length) {\n      return true;\n    }\n    \n    // Check if any community IDs are different\n    const newIds = new Set(newCommunities.map(c => c.id));\n    const oldIds = new Set(oldCommunities.map(c => c.id));\n    \n    // Compare sets\n    if (newIds.size !== oldIds.size) return true;\n    \n    for (const id of newIds) {\n      if (!oldIds.has(id)) return true;\n    }\n    \n    return false;\n  }\n\n  /**\n   * Setup container layout - always use flex layout with sidebar\n   */\n  private setupContainerLayout(): void {\n    // Always create flex container with sidebar + iframe layout\n      this.embedContainer = document.createElement('div');\n      this.embedContainer.className = 'curia-embed-container';\n    \n    // Use config dimensions for the embed container - raw CSS values\n    const configWidth = this.config.width || '100%';\n    const configHeight = this.config.height || '600px';\n    \n    console.log('[InternalPluginHost] Setting up container layout with dimensions:', {\n      width: configWidth,\n      height: configHeight,\n      configHeight: this.config.height\n    });\n    \n          // Get theme-aware background color\n    const themeBackground = this.getThemeAwareBackground();\n    \n    this.embedContainer.style.cssText = `\n      display: flex;\n      width: ${configWidth};\n      height: ${configHeight};\n      background: ${themeBackground};\n      border-radius: ${this.config.borderRadius || '8px'};\n      overflow: hidden;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      position: relative; /* \uD83C\uDFAF Positioning context for mobile modals */\n    `;\n\n    // Add navigation sidebar (always present)\n    const navElement = this.communitySidebar!.render();\n      this.embedContainer.appendChild(navElement);\n\n      // Add iframe container\n      const iframeContainer = document.createElement('div');\n      iframeContainer.className = 'curia-iframe-container';\n          iframeContainer.style.cssText = `\n      flex: 1;\n      display: flex;\n      position: relative;\n      background: ${themeBackground};\n      align-items: stretch;\n    `;\n    \n      this.embedContainer.appendChild(iframeContainer);\n\n        // Replace original container content\n    this.container.innerHTML = '';\n    this.container.appendChild(this.embedContainer);\n    \n    // \uD83C\uDFAF UPDATE SIDEBAR: Pass embedContainer reference for mobile boundary respect\n    if (this.communitySidebar) {\n      this.communitySidebar.updateEmbedContainer(this.embedContainer);\n    }\n  }\n\n  /**\n   * Switch to forum phase using services\n   */\n  private async switchToForum(): Promise<void> {\n    console.log('[InternalPluginHost] Switching to forum phase via services');\n    \n    const authContext = this.authService.getAuthContext();\n    if (!authContext) {\n      console.error('[InternalPluginHost] Cannot switch to forum - no auth context');\n      return;\n    }\n\n    // Setup container layout (sidebar + iframe or just iframe)\n    this.setupContainerLayout();\n\n    // Setup global keyboard shortcuts (Cmd+K for search)\n    this.setupGlobalKeyboardShortcuts();\n\n    // Get the iframe container\n    const iframeContainer = this.embedContainer?.querySelector('.curia-iframe-container') || this.container;\n    \n    // Check if we already have an iframe from prepareApiProxy()\n    const existingIframe = authContext.communityId ? this.communityIframes.get(authContext.communityId) : null;\n    \n    let initialIframe: HTMLIFrameElement;\n    \n    if (existingIframe) {\n      console.log('[InternalPluginHost] Reusing existing forum iframe from API proxy preparation');\n      \n      // Move iframe from temp container to proper layout container\n      const tempContainer = existingIframe.parentElement;\n      if (tempContainer) {\n        tempContainer.removeChild(existingIframe);\n        // Remove the temporary container\n        tempContainer.parentElement?.removeChild(tempContainer);\n      }\n      \n      // Show the iframe and add to proper container\n      existingIframe.style.display = 'block';\n      (iframeContainer as HTMLElement).appendChild(existingIframe);\n      \n      initialIframe = existingIframe;\n    } else {\n      console.log('[InternalPluginHost] Creating new forum iframe (no existing iframe found)');\n      \n      // Create forum iframe using service\n      initialIframe = this.iframeManager.createForumIframe(\n        this.config,\n        authContext,\n        iframeContainer as HTMLElement\n      );\n      \n      // Track the initial forum iframe for community switching\n      if (authContext.communityId) {\n        console.log(`[MULTI-IFRAME] Tracking new forum iframe for community: ${authContext.communityId}`);\n        this.communityIframes.set(authContext.communityId, initialIframe);\n        this.activeCommunityId = authContext.communityId;\n      }\n    }\n    \n    // Ensure API proxy is pointing to the correct iframe (important for reused iframes)\n    this.apiProxy.setActiveIframe(initialIframe);\n    console.log('[InternalPluginHost] API proxy confirmed for final forum iframe');\n    \n    console.log('[InternalPluginHost] Forum phase setup complete');\n  }\n\n  /**\n   * Switch to a specific community with state preservation\n   * Implements the TODO for community switching\n   */\n  private async switchToCommunity(communityId: string): Promise<void> {\n    console.log(`[MULTI-IFRAME] Starting community switch to: ${communityId}`);\n    console.log(`[MULTI-IFRAME] Current active community: ${this.activeCommunityId}`);\n    console.log(`[MULTI-IFRAME] Total community iframes tracked: ${this.communityIframes.size}`);\n\n    // Don't switch if already on this community\n    if (this.activeCommunityId === communityId) {\n      console.log(`[MULTI-IFRAME] Already on community ${communityId}, skipping switch`);\n      return;\n    }\n\n    // Get auth context for building forum URLs\n    const authContext = this.authService.getAuthContext();\n    if (!authContext) {\n      console.error(`[MULTI-IFRAME] No auth context available for community switch`);\n      return;\n    }\n\n    // \uD83D\uDE80 FIX: Always auto-join when switching to community (even if iframe exists)\n    console.log(`[MULTI-IFRAME] Auto-joining user to community: ${communityId}`);\n    await this.autoJoinCommunityOnVisit(communityId, authContext.userId);\n\n    // Get or create iframe for target community\n    let targetIframe = this.communityIframes.get(communityId);\n    \n    if (!targetIframe) {\n      console.log(`[MULTI-IFRAME] Creating new iframe for community: ${communityId}`);\n      targetIframe = await this.createCommunityIframe(communityId, authContext);\n      this.communityIframes.set(communityId, targetIframe);\n      console.log(`[MULTI-IFRAME] New iframe created and stored for community: ${communityId}`);\n    } else {\n      console.log(`[MULTI-IFRAME] Using existing iframe for community: ${communityId}`);\n    }\n\n    // Hide current active iframe if exists\n    if (this.activeCommunityId) {\n      const currentIframe = this.communityIframes.get(this.activeCommunityId);\n      if (currentIframe) {\n        currentIframe.style.display = 'none';\n        console.log(`[MULTI-IFRAME] Hidden iframe for community: ${this.activeCommunityId}`);\n      }\n    }\n\n    // Show target iframe\n    targetIframe.style.display = 'block';\n    console.log(`[MULTI-IFRAME] Showing iframe for community: ${communityId}`);\n\n    // Update API proxy to route to new active iframe\n    this.apiProxy.setActiveIframe(targetIframe);\n    console.log(`[MULTI-IFRAME] API proxy updated to route to community: ${communityId}`);\n\n    // Update internal state\n    this.activeCommunityId = communityId;\n\n    // \u2705 CRITICAL FIX: Update auth context so API requests use correct community\n    this.authService.updateCommunityContext(communityId);\n\n    // Update sidebar active state\n    if (this.communitySidebar) {\n      this.communitySidebar.updateActiveCommunity(communityId);\n      // Refresh online indicators after iframe status might have changed\n      this.communitySidebar.updateOnlineIndicators();\n      console.log(`[MULTI-IFRAME] Sidebar updated to show active community: ${communityId}`);\n    }\n\n    console.log(`[MULTI-IFRAME] Community switch completed successfully to: ${communityId}`);\n  }\n\n  /**\n   * Create a new forum iframe for a specific community\n   * Based on IframeManager.createForumIframe logic but for community switching\n   */\n  private async createCommunityIframe(communityId: string, authContext: InternalAuthContext): Promise<HTMLIFrameElement> {\n    console.log(`[MULTI-IFRAME] Creating iframe for community: ${communityId}`);\n\n    // Get iframe container (same as in switchToForum)\n    const iframeContainer = this.embedContainer?.querySelector('.curia-iframe-container') || this.container;\n\n    // Build forum URL with community-specific parameters (similar to IframeManager.createForumIframe)\n    const forumUrl = new URL(this.iframeManager['forumUrl']); // Access private property\n    forumUrl.searchParams.set('mod', 'standalone');\n    forumUrl.searchParams.set('iframeUid', this.iframeManager.getUid());\n\n    // Add community ID to URL\n    forumUrl.searchParams.set('community', communityId);\n\n    // Theme resolution (copied from IframeManager)\n    let resolvedTheme = this.config.theme || 'light';\n    if (resolvedTheme === 'auto') {\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        resolvedTheme = 'dark';\n      } else {\n        resolvedTheme = 'light';\n      }\n      console.log(`[MULTI-IFRAME] Resolved auto theme to: ${resolvedTheme}`);\n    }\n    \n    forumUrl.searchParams.set('cg_theme', resolvedTheme);\n    if (this.config.backgroundColor) {\n      forumUrl.searchParams.set('cg_bg_color', this.config.backgroundColor);\n    }\n\n    // Add parent URL parameter if community is pre-specified\n    if (this.config.community && this.config.parentUrl) {\n      const encodedParentUrl = encodeURIComponent(this.config.parentUrl);\n      forumUrl.searchParams.set('cg_parent_url', encodedParentUrl);\n      console.log(`[MULTI-IFRAME] Adding parent URL for community: ${this.config.parentUrl}`);\n    }\n\n    // Add external parameters to forum URL\n    if (authContext.externalParams) {\n      console.log(`[MULTI-IFRAME] Adding external parameters:`, authContext.externalParams);\n      for (const [key, value] of Object.entries(authContext.externalParams)) {\n        forumUrl.searchParams.set(key, value);\n      }\n    }\n\n    console.log(`[MULTI-IFRAME] Forum URL for community ${communityId}:`, forumUrl.toString());\n\n    // Create iframe element (copied styling from IframeManager.createForumIframe)\n    const iframe = document.createElement('iframe');\n    iframe.src = forumUrl.toString();\n    iframe.style.width = '100%';\n    iframe.style.height = '100%';\n    iframe.style.border = 'none';\n    iframe.style.margin = '0';\n    iframe.style.padding = '0';\n    iframe.style.display = 'none'; // Start hidden\n    iframe.style.verticalAlign = 'top';\n    \n    // Apply border radius (only right side since sidebar is on left)\n    const borderRadius = this.config.borderRadius || '8px';\n    iframe.style.borderRadius = `0 ${borderRadius} ${borderRadius} 0`;\n    \n    // Set security attributes\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox');\n    iframe.setAttribute('allow', this.getIframePermissions());\n\n    // Add data attributes for debugging\n    iframe.setAttribute('data-community-id', communityId);\n    iframe.setAttribute('data-iframe-uid', this.iframeManager.getUid());\n\n    console.log(`[MULTI-IFRAME] Iframe element created for community: ${communityId}`);\n\n    // Add to DOM\n    (iframeContainer as HTMLElement).appendChild(iframe);\n    console.log(`[MULTI-IFRAME] Iframe added to DOM for community: ${communityId}`);\n\n    return iframe;\n  }\n\n  /**\n   * Get iframe permissions (copied from IframeManager)\n   */\n  private getIframePermissions(): string {\n    return [\n      'clipboard-write *',\n      'clipboard-read *', \n      'fullscreen *',\n      'web-share *',\n      'autoplay *',\n      'picture-in-picture *',\n      'payment *',\n      'encrypted-media *',\n      'storage-access *',\n      'camera *',\n      'microphone *',\n      'geolocation *'\n    ].join('; ');\n  }\n\n  /**\n   * Simple method to check if a community has an iframe loaded\n   */\n  private hasIframeLoaded(communityId: string): boolean {\n    return this.communityIframes.has(communityId);\n  }\n\n  /**\n   * Get the currently active iframe (for MessageRouter sidebar actions)\n   */\n  private getActiveIframe(): HTMLIFrameElement | null {\n    if (!this.activeCommunityId) {\n      console.warn('[InternalPluginHost] No active community set');\n      return null;\n    }\n    \n    const activeIframe = this.communityIframes.get(this.activeCommunityId);\n    if (!activeIframe) {\n      console.warn(`[InternalPluginHost] No iframe found for active community: ${this.activeCommunityId}`);\n      return null;\n    }\n    \n    return activeIframe;\n  }\n\n  /**\n   * Setup global keyboard shortcuts for the embed (Cmd+K for search)\n   */\n  private setupGlobalKeyboardShortcuts(): void {\n    this.keyboardListener = (event: KeyboardEvent) => {\n      // Cmd+K on Mac, Ctrl+K on Windows/Linux\n      if ((event.metaKey || event.ctrlKey) && event.key === 'k') {\n        // Only trigger if focus is within our embed container or no specific focus\n        const isWithinEmbed = !this.embedContainer || \n                             this.embedContainer.contains(document.activeElement) ||\n                             document.activeElement === document.body ||\n                             document.activeElement === null;\n        \n        if (isWithinEmbed) {\n          event.preventDefault();\n          event.stopPropagation();\n          \n          console.log('[InternalPluginHost] Global Cmd+K triggered - opening search');\n          this.messageRouter.sendSidebarAction('search');\n        }\n      }\n    };\n\n    document.addEventListener('keydown', this.keyboardListener);\n    console.log('[InternalPluginHost] Global keyboard shortcuts enabled (Cmd+K for search)');\n  }\n\n  /**\n   * Handle menu actions from community sidebar\n   */\n  private handleMenuAction(action: string): void {\n    console.log('[InternalPluginHost] Menu action:', action);\n    \n    if (action === 'add-session') {\n      this.openAddSessionModal();\n    } else if (action === 'sign-out') {\n      this.authService.signOut();\n    } else if (action.startsWith('switch-session:')) {\n      const sessionToken = action.replace('switch-session:', '');\n      console.log('[InternalPluginHost] Switching to session via SessionServiceProxy:', sessionToken);\n      \n      // \uD83D\uDE80 FIX: Route session switch through SessionServiceProxy + trigger full reload\n      if (this.sessionServiceProxy) {\n        this.sessionServiceProxy.setActiveSession(sessionToken)\n          .then(() => {\n            console.log('[InternalPluginHost] Session updated in service, triggering full reload');\n            this.reloadForSessionSwitch();\n          })\n          .catch(error => {\n            console.error('[InternalPluginHost] Failed to switch session via proxy:', error);\n          });\n      } else {\n        console.warn('[InternalPluginHost] No SessionServiceProxy available, falling back to parent SessionManager');\n        sessionManager.setActiveSession(sessionToken)\n          .then(() => {\n            console.log('[InternalPluginHost] Session updated locally, triggering full reload');\n            this.reloadForSessionSwitch();\n          })\n          .catch(error => {\n            console.error('[InternalPluginHost] Failed to switch session via fallback:', error);\n          });\n      }\n    } else if (action === 'switch-account') {\n      // DEPRECATED: Use session switching in profile menu instead\n      console.log('[InternalPluginHost] Switch account deprecated - use session switching');\n    } else if (action === 'settings') {\n      console.log('[InternalPluginHost] Settings (placeholder)');\n    }\n  }\n\n  /**\n   * Handle community switch requests from forum app\n   */\n  private async handleCommunitySwitchRequest(\n    communityId: string, \n    options?: any\n  ): Promise<any> {\n    console.log(`[InternalPluginHost] Community switch requested: ${communityId}`, options);\n\n    try {\n      // Use existing switchToCommunity logic!\n      await this.switchToCommunity(communityId);\n\n      // \uD83D\uDE80 REMOVED: START POLLING: User will join community during iframe load, so start polling to detect it\n      // this.startCommunityPolling('community-switch'); // REPLACED by auto-join on visit\n\n      const result = {\n        switched: true,\n        communityId: communityId\n      };\n\n      console.log(`[InternalPluginHost] Community switch completed successfully:`, result);\n      return result;\n\n    } catch (error) {\n      console.error(`[InternalPluginHost] Community switch failed:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Open discovery modal with community discovery iframe\n   */\n  private openDiscoveryModal(): void {\n    console.log('[InternalPluginHost] Opening community discovery modal');\n    \n    // Close existing modal if open\n    this.closeDiscoveryModal();\n    \n    // Create modal overlay\n    this.discoveryModal = document.createElement('div');\n    this.discoveryModal.className = 'curia-discovery-modal-overlay';\n    this.discoveryModal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.5);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000000;\n      backdrop-filter: blur(4px);\n    `;\n    \n    // Create modal content container\n    const modalContent = document.createElement('div');\n    modalContent.className = 'curia-discovery-modal-content';\n    modalContent.style.cssText = `\n      background: white;\n      border-radius: 12px;\n      width: 90%;\n      max-width: 600px;\n      height: 80%;\n      max-height: 700px;\n      position: relative;\n      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      overflow: hidden;\n    `;\n    \n    // Create close button\n    const closeButton = document.createElement('button');\n    closeButton.innerHTML = '\u00D7';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 16px;\n      right: 16px;\n      background: rgba(0, 0, 0, 0.1);\n      border: none;\n      border-radius: 50%;\n      width: 32px;\n      height: 32px;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 10001;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: background 0.2s ease;\n    `;\n    \n    closeButton.addEventListener('mouseenter', () => {\n      closeButton.style.background = 'rgba(0, 0, 0, 0.2)';\n    });\n    closeButton.addEventListener('mouseleave', () => {\n      closeButton.style.background = 'rgba(0, 0, 0, 0.1)';\n    });\n    closeButton.addEventListener('click', () => {\n      this.closeDiscoveryModal();\n    });\n    \n    // Create discovery iframe\n    this.discoveryIframe = document.createElement('iframe');\n    this.discoveryIframe.src = `${this.hostServiceUrl}/embed?mode=community-discovery`;\n    this.discoveryIframe.style.cssText = `\n      width: 100%;\n      height: 100%;\n      border: none;\n      border-radius: 12px;\n    `;\n    this.discoveryIframe.allow = getIframePermissions();\n    \n    // Assemble modal\n    modalContent.appendChild(closeButton);\n    modalContent.appendChild(this.discoveryIframe);\n    this.discoveryModal.appendChild(modalContent);\n    \n    // Close modal on overlay click\n    this.discoveryModal.addEventListener('click', (e) => {\n      if (e.target === this.discoveryModal) {\n        this.closeDiscoveryModal();\n      }\n    });\n    \n    // Add to DOM\n    document.body.appendChild(this.discoveryModal);\n    \n    console.log('[InternalPluginHost] Discovery modal opened successfully');\n  }\n\n  /**\n   * Close discovery modal and cleanup\n   */\n  private closeDiscoveryModal(): void {\n    if (this.discoveryModal) {\n      console.log('[InternalPluginHost] Closing discovery modal');\n      document.body.removeChild(this.discoveryModal);\n      this.discoveryModal = null;\n      this.discoveryIframe = null;\n    }\n  }\n\n  /**\n   * Handle community discovery completion from discovery iframe\n   */\n  private async handleCommunityDiscoveryComplete(discoveryData: any): Promise<void> {\n    console.log('[InternalPluginHost] Community discovery completed:', discoveryData);\n    \n    const { communityId } = discoveryData;\n    \n    try {\n      // 1. Close discovery modal\n      this.closeDiscoveryModal();\n      \n      // 2. Switch to selected community using existing infrastructure\n      // This includes auto-join + sidebar refresh, so no need for duplicate refresh\n      await this.switchToCommunity(communityId);\n      \n      console.log('[InternalPluginHost] Discovery-to-community switch completed');\n    } catch (error) {\n      console.error('[InternalPluginHost] Discovery community switch failed:', error);\n    }\n  }\n\n  /**\n   * Handle add session completion from add-session iframe\n   */\n  private async handleAddSessionComplete(sessionMessage: any): Promise<void> {\n    console.log('[InternalPluginHost] Add session completed:', sessionMessage);\n    \n    const { sessionData } = sessionMessage;\n    \n    try {\n      // 1. Close add session modal\n      this.closeAddSessionModal();\n      \n      // 2. Check if session already exists (profile components create sessions during auth)\n      const existingSession = sessionManager.getSessionByToken(sessionData.sessionToken);\n      \n      if (existingSession) {\n        // Session already exists, just activate it\n        console.log('[InternalPluginHost] \uD83D\uDD27 Session already exists, just activating:', sessionData.sessionToken);\n        await sessionManager.setActiveSession(sessionData.sessionToken);\n      } else {\n        // Session doesn't exist, create it\n        console.log('[InternalPluginHost] \uD83D\uDD27 Creating new session:', sessionData.sessionToken);\n        await sessionManager.addSession({\n          sessionToken: sessionData.sessionToken,\n          userId: sessionData.userId,\n          identityType: sessionData.identityType,\n          walletAddress: sessionData.walletAddress,\n          ensName: sessionData.ensName,\n          upAddress: sessionData.upAddress,\n          name: sessionData.name,\n          profileImageUrl: sessionData.profileImageUrl,\n          expiresAt: new Date(sessionData.expiresAt),\n          isActive: true,\n        });\n      }\n      \n      console.log('[InternalPluginHost] New session activated');\n    } catch (error) {\n      console.error('[InternalPluginHost] Failed to handle new session:', error);\n    }\n  }\n\n  /**\n   * Open add session modal with add-session iframe\n   */\n  private openAddSessionModal(): void {\n    console.log('[InternalPluginHost] Opening add session modal');\n    \n    // Close existing modal if open\n    this.closeAddSessionModal();\n    \n    // Create modal overlay\n    this.addSessionModal = document.createElement('div');\n    this.addSessionModal.className = 'curia-add-session-modal-overlay';\n    this.addSessionModal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.5);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000000;\n      backdrop-filter: blur(4px);\n    `;\n    \n    // Create modal content container\n    const modalContent = document.createElement('div');\n    modalContent.className = 'curia-add-session-modal-content';\n    modalContent.style.cssText = `\n      background: white;\n      border-radius: 12px;\n      width: 90%;\n      max-width: 600px;\n      height: 80%;\n      max-height: 700px;\n      position: relative;\n      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      overflow: hidden;\n    `;\n    \n    // Create close button\n    const closeButton = document.createElement('button');\n    closeButton.innerHTML = '\u00D7';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 16px;\n      right: 16px;\n      background: rgba(0, 0, 0, 0.1);\n      border: none;\n      border-radius: 50%;\n      width: 32px;\n      height: 32px;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 10001;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: background 0.2s ease;\n    `;\n    \n    closeButton.addEventListener('mouseenter', () => {\n      closeButton.style.background = 'rgba(0, 0, 0, 0.2)';\n    });\n    closeButton.addEventListener('mouseleave', () => {\n      closeButton.style.background = 'rgba(0, 0, 0, 0.1)';\n    });\n    closeButton.addEventListener('click', () => {\n      this.closeAddSessionModal();\n    });\n    \n    // Create add session iframe\n    this.addSessionIframe = document.createElement('iframe');\n    this.addSessionIframe.src = `${this.hostServiceUrl}/embed?mode=add-session`;\n    this.addSessionIframe.style.cssText = `\n      width: 100%;\n      height: 100%;\n      border: none;\n      border-radius: 12px;\n    `;\n    this.addSessionIframe.allow = getIframePermissions();\n    \n    // Assemble modal\n    modalContent.appendChild(closeButton);\n    modalContent.appendChild(this.addSessionIframe);\n    this.addSessionModal.appendChild(modalContent);\n    \n    // Close modal on overlay click\n    this.addSessionModal.addEventListener('click', (e) => {\n      if (e.target === this.addSessionModal) {\n        this.closeAddSessionModal();\n      }\n    });\n    \n    // Add to DOM\n    document.body.appendChild(this.addSessionModal);\n    \n    console.log('[InternalPluginHost] Add session modal opened successfully');\n  }\n\n  /**\n   * Close add session modal and cleanup\n   */\n  private closeAddSessionModal(): void {\n    if (this.addSessionModal) {\n      console.log('[InternalPluginHost] Closing add session modal');\n      document.body.removeChild(this.addSessionModal);\n      this.addSessionModal = null;\n      this.addSessionIframe = null;\n    }\n  }\n\n  /**\n   * Add account: Reset to initial state for new auth\n   */\n  private addAccount(): void {\n    console.log('[InternalPluginHost] Add account - resetting to initial state');\n        this.resetToInitialState();\n  }\n\n  /**\n   * Reload embed for session switching - TRUE FULL RELOAD\n   * Destroys current instance and creates brand new one (like page refresh)\n   */\n  private reloadForSessionSwitch(): void {\n    console.log('[InternalPluginHost] Performing TRUE FULL RELOAD for session switch');\n    console.log('[InternalPluginHost] This will destroy current instance and create fresh one');\n    \n    // Store parameters needed for recreation\n    const container = this.container;\n    const config = { ...this.config }; // \u2705 Create copy to avoid mutation\n    const hostServiceUrl = this.hostServiceUrl;\n    const forumUrl = this.forumUrl;\n    \n    // \uD83C\uDFAF PRESERVE COMMUNITY CONTEXT!\n    if (this.activeCommunityId) {\n      console.log('[InternalPluginHost] Preserving community context:', this.activeCommunityId);\n      config.community = this.activeCommunityId; // \u2705 Override with current community\n    }\n    \n    // 1. Completely destroy current instance (cleanup all state and services)\n    this.destroy();\n    \n    // 2. Create brand new InternalPluginHost instance (fresh start)\n    console.log('[InternalPluginHost] Creating fresh InternalPluginHost instance');\n    const newInstance = new InternalPluginHost(container, config, hostServiceUrl, forumUrl, this.publicKey);\n    \n    // 3. Update global reference if it exists (for window.curiaEmbed.destroy() etc)\n    if (window.curiaEmbed) {\n      console.log('[InternalPluginHost] Updating global curiaEmbed reference');\n      window.curiaEmbed = newInstance;\n    }\n    \n    console.log('[InternalPluginHost] TRUE FULL RELOAD complete - fresh instance will authenticate with new session');\n  }\n\n  /**\n   * Reset to initial state - start over with auth\n   */\n  private resetToInitialState(): void {\n    console.log('[InternalPluginHost] Resetting to initial state');\n    \n    // Clean up iframe-related elements\n    this.iframeManager.cleanupPortalElements();\n    \n    // Reset UI state\n    this.communitySidebar = null;\n    this.embedContainer = null;\n    \n    // Clear session using SessionManager\n    try {\n      sessionManager.removeActiveSession().catch(error => {\n        console.error('[InternalPluginHost] Failed to clear session via SessionManager:', error);\n      });\n      console.log('[InternalPluginHost] Session cleared via SessionManager');\n    } catch (error) {\n      console.error('[InternalPluginHost] SessionManager clear error:', error);\n    }\n    \n    // Recreate clean auth iframe\n    this.container.innerHTML = '';\n    this.initializeAuthPhase();\n    \n    console.log('[InternalPluginHost] Reset to initial state complete');\n  }\n\n  /**\n   * Auto-join user to community on visit (UPSERT pattern)\n   * Eliminates need for polling by creating membership immediately when user visits community\n   */\n  private async autoJoinCommunityOnVisit(communityId: string, userId: string): Promise<boolean> {\n    try {\n      console.log(`[InternalPluginHost] Auto-joining user ${userId} to community ${communityId}`);\n      \n      // Get session token for authentication\n      const authContext = this.authService.getAuthContext();\n      if (!authContext?.sessionToken) {\n        console.error(`[InternalPluginHost] No session token available for auto-join`);\n        return false;\n      }\n      \n      // Use enhanced API proxy with correct parameter order\n      const response = await this.apiProxy.makeAuthenticatedRequest(\n        `/api/communities/${communityId}/auto-join`,\n        authContext.sessionToken,    // token parameter\n        { method: 'POST' }          // options parameter\n      );\n      \n      if (response.success) {\n        // \uD83D\uDD27 Handle both response formats: production (wrapped) vs localhost (unwrapped)\n        const membership = response.data?.membership || response.membership;\n        \n        if (!membership) {\n          console.error(`[InternalPluginHost] Auto-join response missing membership data:`, response);\n          return false;\n        }\n        \n        const { isNewMember, status, visitCount } = membership;\n        \n        // \uD83D\uDE80 FIX: Always refresh sidebar after successful auto-join\n        // This ensures new users see their selected community immediately\n        console.log(`[InternalPluginHost] \uD83D\uDD04 Refreshing sidebar after auto-join response`);\n        await this.refreshCommunitySidebar();\n        \n        if (isNewMember && status === 'active') {\n          console.log(`[InternalPluginHost] \u2705 User auto-joined community: ${communityId}`);\n          return true;\n        } else if (status === 'pending') {\n          console.log(`[InternalPluginHost] \u23F3 User membership pending approval: ${communityId}`);\n          return false;\n        } else {\n          console.log(`[InternalPluginHost] \uD83D\uDD04 User visit updated for community: ${communityId} (visit #${visitCount})`);\n          return false;\n        }\n      }\n      \n      return false;\n    } catch (error) {\n      console.error(`[InternalPluginHost] Auto-join failed for ${communityId}:`, error);\n      // Don't throw - iframe should still load even if auto-join fails\n      return false;\n    }\n  }\n\n  /**\n   * Cleanup when embed is destroyed\n   */\n  public destroy(): void {\n    console.log('[InternalPluginHost] Destroying plugin host');\n    \n    // \uD83D\uDE80 CRITICAL FIX: Stop community polling timer to prevent performance leaks\n    this.stopCommunityPolling();\n    \n    // Cleanup global keyboard shortcuts\n    if (this.keyboardListener) {\n      document.removeEventListener('keydown', this.keyboardListener);\n      this.keyboardListener = null;\n      console.log('[InternalPluginHost] Global keyboard shortcuts cleanup completed');\n    }\n    \n    // Destroy services\n    if (this.authService) {\n      this.authService.destroy();\n    }\n    \n    if (this.messageRouter) {\n      this.messageRouter.destroy();\n    }\n    \n    if (this.iframeManager) {\n      this.iframeManager.destroy();\n    }\n    \n    // Destroy community sidebar\n    if (this.communitySidebar) {\n      this.communitySidebar.destroy();\n      this.communitySidebar = null;\n    }\n    \n    // Clean up session service references (singleton will be cleaned by shared resources)\n    if (this.sessionServiceSyncTimer) {\n      clearInterval(this.sessionServiceSyncTimer);\n      this.sessionServiceSyncTimer = null;\n      console.log('[InternalPluginHost] Session service sync timer cleaned up');\n    }\n    this.sessionServiceProxy = null;\n    this.sessionServiceIframe = null;\n    \n    // Clean up community iframes\n    console.log(`[MULTI-IFRAME] Cleaning up ${this.communityIframes.size} community iframes`);\n    this.communityIframes.forEach((iframe, communityId) => {\n      if (iframe.parentNode) {\n        iframe.parentNode.removeChild(iframe);\n      }\n      console.log(`[MULTI-IFRAME] Removed iframe for community: ${communityId}`);\n    });\n    this.communityIframes.clear();\n    this.activeCommunityId = null;\n    console.log(`[MULTI-IFRAME] Community iframe cleanup complete`);\n    \n    // Clear container\n    this.container.innerHTML = '';\n    this.embedContainer = null;\n    \n    // \uD83D\uDE80 FIX: Clean up shared API proxy when instance is destroyed\n    InternalPluginHost.cleanupSharedResources();\n    \n    console.log('[InternalPluginHost] Plugin host destroyed');\n  }\n}\n\n ", "/**\n * SessionManager - Centralized session management for Curia\n * \n * Replaces scattered localStorage usage with a unified system that supports:\n * - Multi-account sessions (ENS, Universal Profile, Anonymous)\n * - Database-backed session persistence\n * - Cross-tab synchronization\n * - Automatic token rotation handling\n * - Bulletproof error recovery\n */\n\n// ============================================================================\n// TYPE DEFINITIONS\n// ============================================================================\n\nexport interface SessionData {\n  sessionToken: string;\n  userId: string;\n  identityType: 'ens' | 'universal_profile' | 'anonymous';\n  walletAddress?: string;\n  ensName?: string;\n  upAddress?: string;\n  name?: string;\n  profileImageUrl?: string;\n  expiresAt: Date;\n  lastAccessedAt: Date;\n  isActive: boolean;\n}\n\nexport interface SessionStorage {\n  activeSessions: SessionData[];\n  activeSessionToken: string | null;\n  lastSyncedAt: number;\n  version: number; // For migration handling\n}\n\nexport type SessionChangeListener = (\n  sessions: SessionData[], \n  activeToken: string | null,\n  activeSession: SessionData | null\n) => void;\n\n// ============================================================================\n// CORE SESSION MANAGER CLASS\n// ============================================================================\n\nexport class SessionManager {\n  private static instance: SessionManager;\n  private static readonly STORAGE_KEY = 'curia_sessions';\n  private static readonly LEGACY_TOKEN_KEY = 'curia_session_token';\n  private static readonly STORAGE_VERSION = 1;\n  private static readonly SYNC_INTERVAL = 30_000; // 30 seconds\n  \n  private storage: SessionStorage;\n  private listeners: Set<SessionChangeListener> = new Set();\n  private syncInterval: NodeJS.Timeout | null = null;\n  private isInitialized = false;\n  private hostServiceUrl: string = ''; // Host service URL for API calls\n  private apiProxy: any | null = null; // API proxy for CSP-compliant calls\n\n  private constructor() {\n    this.storage = this.loadFromStorage();\n    this.setupStorageListener();\n    this.setupPeriodicTimer(); // \uD83D\uDE80 FIX: Setup timer only, defer initial sync\n    this.migrateLegacySession();\n    this.isInitialized = true;\n    \n    console.log('[SessionManager] Initialized with', this.storage.activeSessions.length, 'sessions (sync deferred until configured)');\n  }\n\n  public static getInstance(): SessionManager {\n    if (!SessionManager.instance) {\n      SessionManager.instance = new SessionManager();\n    }\n    return SessionManager.instance;\n  }\n\n  /**\n   * Configure the host service URL and API proxy for API calls\n   * Must be called before making any API calls in embed context\n   * \n   * \uD83D\uDE80 FIX: Now triggers initial database sync after configuration\n   */\n  public configure(hostServiceUrl: string, apiProxy?: any): void {\n    this.hostServiceUrl = hostServiceUrl;\n    this.apiProxy = apiProxy || null;\n    console.log('[SessionManager] Configured with host service URL:', hostServiceUrl);\n    if (apiProxy) {\n      console.log('[SessionManager] API proxy configured for CSP-compliant calls');\n    }\n    console.log('[SessionManager] Configuration complete - initial sync deferred until API proxy ready');\n  }\n\n  /**\n   * Trigger initial database sync when API proxy is confirmed ready\n   * Called from InternalPluginHost when 'curia-api-proxy-ready' event is received\n   */\n  public triggerInitialSyncWhenReady(): void {\n    if (!this.hostServiceUrl) {\n      console.warn('[SessionManager] Cannot sync - not configured yet');\n      return;\n    }\n\n    if (this.storage.activeSessions.length > 0) {\n      console.log('[SessionManager] \uD83D\uDE80 Triggering initial database sync (API proxy ready)');\n      this.syncWithDatabase();\n    } else {\n      console.log('[SessionManager] No sessions to sync initially (API proxy ready)');\n    }\n  }\n\n  // ============================================================================\n  // CORE SESSION OPERATIONS\n  // ============================================================================\n\n  /**\n   * Add a new session to the manager\n   */\n  public async addSession(sessionData: Omit<SessionData, 'lastAccessedAt'>): Promise<void> {\n    console.log('[SessionManager] \uD83D\uDD27 addSession called with:', sessionData);\n    \n    try {\n      const session: SessionData = {\n        ...sessionData,\n        lastAccessedAt: new Date(),\n        expiresAt: new Date(sessionData.expiresAt),\n      };\n\n      console.log('[SessionManager] \uD83D\uDD27 Converted session data:', session);\n\n      if (!this.validateSession(session)) {\n        console.error('[SessionManager] \u274C Session validation failed for:', session);\n        throw new Error('Invalid session data provided');\n      }\n\n      console.log('[SessionManager] \u2705 Session validation passed');\n\n      // Remove existing session with same token (if any)\n      this.storage.activeSessions = this.storage.activeSessions.filter(\n        s => s.sessionToken !== session.sessionToken\n      );\n\n      // Add new session\n      this.storage.activeSessions.push(session);\n\n      // Set as active if it's the first session OR if this session should be active\n      if (!this.storage.activeSessionToken || session.isActive) {\n        this.storage.activeSessionToken = session.sessionToken;\n        console.log('[SessionManager] Session set as active:', session.sessionToken);\n      }\n\n      console.log('[SessionManager] \uD83D\uDD27 Sessions before save:', this.storage.activeSessions.length);\n      console.log('[SessionManager] \uD83D\uDD27 Active token before save:', this.storage.activeSessionToken);\n\n      this.saveToStorage();\n      this.broadcastChange();\n      this.notifyListeners();\n\n      console.log('[SessionManager] \u2705 Session added successfully:', session.identityType, session.userId);\n      console.log('[SessionManager] \uD83D\uDD27 Total sessions now:', this.storage.activeSessions.length);\n    } catch (error) {\n      console.error('[SessionManager] Failed to add session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Remove a session by token\n   */\n  public async removeSession(sessionToken: string): Promise<void> {\n    try {\n      const sessionExists = this.storage.activeSessions.some(s => s.sessionToken === sessionToken);\n      \n      if (!sessionExists) {\n        console.warn('[SessionManager] Attempted to remove non-existent session:', sessionToken);\n        return;\n      }\n\n      // Remove session\n      this.storage.activeSessions = this.storage.activeSessions.filter(\n        s => s.sessionToken !== sessionToken\n      );\n\n      // Update active session if we removed the active one\n      if (this.storage.activeSessionToken === sessionToken) {\n        this.storage.activeSessionToken = this.storage.activeSessions[0]?.sessionToken || null;\n      }\n\n      this.saveToStorage();\n      this.broadcastChange();\n      this.notifyListeners();\n\n      console.log('[SessionManager] Session removed:', sessionToken);\n    } catch (error) {\n      console.error('[SessionManager] Failed to remove session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Set the active session\n   */\n  public async setActiveSession(sessionToken: string): Promise<void> {\n    try {\n      const session = this.getSessionByToken(sessionToken);\n      if (!session) {\n        throw new Error(`Session not found: ${sessionToken}`);\n      }\n\n      if (!session.isActive || session.expiresAt <= new Date()) {\n        throw new Error('Cannot activate expired or inactive session');\n      }\n\n      this.storage.activeSessionToken = sessionToken;\n      \n      // Update last accessed time\n      session.lastAccessedAt = new Date();\n\n      this.saveToStorage();\n      this.broadcastChange();\n      this.notifyListeners();\n\n      console.log('[SessionManager] Active session changed:', session.identityType, session.userId);\n    } catch (error) {\n      console.error('[SessionManager] Failed to set active session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Remove the active session (logout)\n   */\n  public async removeActiveSession(): Promise<void> {\n    try {\n      if (!this.storage.activeSessionToken) {\n        console.warn('[SessionManager] No active session to remove');\n        return;\n      }\n\n      await this.removeSession(this.storage.activeSessionToken);\n      console.log('[SessionManager] Active session removed (logout)');\n    } catch (error) {\n      console.error('[SessionManager] Failed to remove active session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clear all sessions (full logout)\n   */\n  public async clearAllSessions(): Promise<void> {\n    try {\n      this.storage.activeSessions = [];\n      this.storage.activeSessionToken = null;\n      this.storage.lastSyncedAt = Date.now();\n\n      this.saveToStorage();\n      this.broadcastChange();\n      this.notifyListeners();\n\n      console.log('[SessionManager] All sessions cleared');\n    } catch (error) {\n      console.error('[SessionManager] Failed to clear all sessions:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Bulk update sessions from session service (used by SessionServiceProxy integration)\n   * Replaces entire session cache with authoritative data from session service\n   */\n  public bulkUpdateSessions(sessions: SessionData[]): void {\n    try {\n      console.log('[SessionManager] \uD83D\uDD04 Bulk updating sessions from session service:', sessions.length, 'sessions');\n      \n      // Validate and sanitize incoming sessions\n      const validSessions = sessions\n        .map(session => ({\n          ...session,\n          expiresAt: new Date(session.expiresAt),\n          lastAccessedAt: new Date(session.lastAccessedAt),\n        }))\n        .filter(this.validateSession);\n\n      console.log('[SessionManager] \uD83D\uDD04 Valid sessions after filtering:', validSessions.length);\n\n      // Track the original active session token to detect actual changes\n      const originalActiveToken = this.storage.activeSessionToken;\n\n      // Update storage with authoritative session data\n      this.storage.activeSessions = validSessions;\n      this.storage.lastSyncedAt = Date.now();\n\n      // Ensure active session token is still valid\n      const activeStillValid = validSessions.some(\n        s => s.sessionToken === this.storage.activeSessionToken\n      );\n\n      if (!activeStillValid) {\n        // Current active session is invalid, set to first available session\n        this.storage.activeSessionToken = validSessions[0]?.sessionToken || null;\n        console.log('[SessionManager] \uD83D\uDD04 Active session updated to:', this.storage.activeSessionToken);\n      }\n\n      this.saveToStorage();\n\n      // \uD83D\uDE80 FIX: Only notify listeners if the active session token actually changed\n      // This prevents background sync from triggering unwanted session switch reloads\n      if (this.storage.activeSessionToken !== originalActiveToken) {\n        console.log('[SessionManager] \uD83D\uDD04 Active session token changed during bulk update, notifying listeners');\n        this.notifyListeners();\n      } else {\n        console.log('[SessionManager] \uD83D\uDD04 Bulk update completed, no active session change detected');\n      }\n\n      console.log('[SessionManager] \u2705 Bulk update completed:', validSessions.length, 'sessions, active:', this.storage.activeSessionToken);\n    } catch (error) {\n      console.error('[SessionManager] Failed to bulk update sessions:', error);\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // GETTERS\n  // ============================================================================\n\n  public getActiveSession(): SessionData | null {\n    if (!this.storage.activeSessionToken) return null;\n    \n    const session = this.getSessionByToken(this.storage.activeSessionToken);\n    if (!session || !session.isActive || session.expiresAt <= new Date()) {\n      // Clean up expired or invalid active session\n      this.storage.activeSessionToken = null;\n      this.saveToStorage();\n      return null;\n    }\n    \n    return session;\n  }\n\n  public getActiveToken(): string | null {\n    const activeSession = this.getActiveSession();\n    return activeSession?.sessionToken || null;\n  }\n\n  public getAllSessions(): SessionData[] {\n    // Filter out expired sessions\n    const validSessions = this.storage.activeSessions.filter(\n      session => session.isActive && session.expiresAt > new Date()\n    );\n\n    // Update storage if we filtered out expired sessions\n    if (validSessions.length !== this.storage.activeSessions.length) {\n      this.storage.activeSessions = validSessions;\n      this.saveToStorage();\n    }\n\n    return validSessions;\n  }\n\n  public getSessionByToken(token: string): SessionData | null {\n    return this.storage.activeSessions.find(s => s.sessionToken === token) || null;\n  }\n\n  public getSessionsByIdentityType(type: 'ens' | 'universal_profile' | 'anonymous'): SessionData[] {\n    return this.getAllSessions().filter(s => s.identityType === type);\n  }\n\n  public isAuthenticated(): boolean {\n    return this.getActiveSession() !== null;\n  }\n\n  // ============================================================================\n  // REACTIVITY & EVENTS\n  // ============================================================================\n\n  public subscribe(callback: SessionChangeListener): () => void {\n    this.listeners.add(callback);\n    \n    // Immediately call with current state\n    if (this.isInitialized) {\n      callback(this.getAllSessions(), this.getActiveToken(), this.getActiveSession());\n    }\n    \n    return () => {\n      this.listeners.delete(callback);\n    };\n  }\n\n  private notifyListeners(): void {\n    const sessions = this.getAllSessions();\n    const activeToken = this.getActiveToken();\n    const activeSession = this.getActiveSession();\n    \n    this.listeners.forEach(callback => {\n      try {\n        callback(sessions, activeToken, activeSession);\n      } catch (error) {\n        console.error('[SessionManager] Listener error:', error);\n      }\n    });\n  }\n\n  // ============================================================================\n  // PERSISTENCE & STORAGE\n  // ============================================================================\n\n  private loadFromStorage(): SessionStorage {\n    try {\n      // \u2705 Browser-only check to prevent SSR errors\n      if (typeof window === 'undefined') {\n        console.log('[SessionManager] SSR environment detected, using default storage');\n        return this.getDefaultStorage();\n      }\n\n      const stored = localStorage.getItem(SessionManager.STORAGE_KEY);\n      if (!stored) {\n        return this.getDefaultStorage();\n      }\n\n      const parsed: SessionStorage = JSON.parse(stored);\n      \n      // Validate and sanitize storage\n      return this.sanitizeStorage(parsed);\n    } catch (error) {\n      console.error('[SessionManager] Failed to load from storage, using defaults:', error);\n      return this.getDefaultStorage();\n    }\n  }\n\n  private saveToStorage(): void {\n    try {\n      // \u2705 Browser-only check to prevent SSR errors\n      if (typeof window === 'undefined') {\n        console.log('[SessionManager] SSR environment detected, skipping storage save');\n        return;\n      }\n\n      const serialized = JSON.stringify({\n        ...this.storage,\n        lastSyncedAt: Date.now(),\n      });\n      \n      localStorage.setItem(SessionManager.STORAGE_KEY, serialized);\n    } catch (error) {\n      if (error instanceof DOMException && error.code === 22) {\n        console.error('[SessionManager] localStorage quota exceeded, clearing old sessions');\n        this.handleStorageQuotaExceeded();\n      } else {\n        console.error('[SessionManager] Failed to save to storage:', error);\n      }\n    }\n  }\n\n  private getDefaultStorage(): SessionStorage {\n    return {\n      activeSessions: [],\n      activeSessionToken: null,\n      lastSyncedAt: Date.now(),\n      version: SessionManager.STORAGE_VERSION,\n    };\n  }\n\n  private sanitizeStorage(storage: SessionStorage): SessionStorage {\n    try {\n      // Ensure version compatibility\n      if (!storage.version || storage.version < SessionManager.STORAGE_VERSION) {\n        console.log('[SessionManager] Migrating storage to version', SessionManager.STORAGE_VERSION);\n        storage.version = SessionManager.STORAGE_VERSION;\n      }\n\n      // Validate and filter sessions\n      const validSessions = (storage.activeSessions || [])\n        .map(session => ({\n          ...session,\n          expiresAt: new Date(session.expiresAt),\n          lastAccessedAt: new Date(session.lastAccessedAt),\n        }))\n        .filter(this.validateSession);\n\n      // Ensure active session is still valid\n      const activeStillValid = validSessions.some(\n        s => s.sessionToken === storage.activeSessionToken\n      );\n\n      return {\n        activeSessions: validSessions,\n        activeSessionToken: activeStillValid \n          ? storage.activeSessionToken \n          : (validSessions[0]?.sessionToken || null),\n        lastSyncedAt: storage.lastSyncedAt || Date.now(),\n        version: SessionManager.STORAGE_VERSION,\n      };\n    } catch (error) {\n      console.error('[SessionManager] Storage sanitization failed:', error);\n      return this.getDefaultStorage();\n    }\n  }\n\n  private validateSession(session: SessionData): boolean {\n    try {\n      return (\n        typeof session.sessionToken === 'string' &&\n        session.sessionToken.length > 10 &&\n        typeof session.userId === 'string' &&\n        session.userId.length > 0 &&\n        ['ens', 'universal_profile', 'anonymous'].includes(session.identityType) &&\n        session.expiresAt instanceof Date &&\n        session.expiresAt > new Date() &&\n        typeof session.isActive === 'boolean' &&\n        session.isActive\n      );\n    } catch {\n      return false;\n    }\n  }\n\n  private handleStorageQuotaExceeded(): void {\n    try {\n      // Remove oldest sessions first, keeping at least the active one\n      const sorted = this.storage.activeSessions.sort(\n        (a, b) => a.lastAccessedAt.getTime() - b.lastAccessedAt.getTime()\n      );\n\n      const activeToken = this.storage.activeSessionToken;\n      const keepSessions = sorted.filter(s => s.sessionToken === activeToken).slice(-3); // Keep last 3\n      \n      this.storage.activeSessions = keepSessions;\n      this.saveToStorage();\n      \n      console.log('[SessionManager] Cleaned up old sessions due to storage quota');\n    } catch (error) {\n      console.error('[SessionManager] Failed to handle storage quota:', error);\n      \n      // Last resort: clear everything (browser-only)\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem(SessionManager.STORAGE_KEY);\n      }\n      this.storage = this.getDefaultStorage();\n    }\n  }\n\n  // ============================================================================\n  // CROSS-TAB SYNCHRONIZATION\n  // ============================================================================\n\n  private setupStorageListener(): void {\n    if (typeof window === 'undefined') return;\n\n    // Listen for localStorage changes from other tabs\n    window.addEventListener('storage', (e) => {\n      if (e.key === SessionManager.STORAGE_KEY && e.newValue) {\n        try {\n          const newStorage: SessionStorage = JSON.parse(e.newValue);\n          this.storage = this.sanitizeStorage(newStorage);\n          this.notifyListeners();\n          console.log('[SessionManager] Cross-tab sync: Session state updated from other tab');\n        } catch (error) {\n          console.error('[SessionManager] Cross-tab sync failed:', error);\n        }\n      }\n    });\n\n    // Listen for custom session events (same-tab updates)\n    window.addEventListener('curia-session-change', () => {\n      this.storage = this.loadFromStorage();\n      this.notifyListeners();\n    });\n  }\n\n  private broadcastChange(): void {\n    if (typeof window !== 'undefined') {\n      window.dispatchEvent(new CustomEvent('curia-session-change', {\n        detail: {\n          activeToken: this.getActiveToken(),\n          sessionCount: this.storage.activeSessions.length,\n        }\n      }));\n    }\n  }\n\n  // ============================================================================\n  // DATABASE SYNCHRONIZATION\n  // ============================================================================\n\n  /**\n   * Setup periodic sync timer (without initial sync)\n   * \uD83D\uDE80 FIX: Renamed from setupPeriodicSync to be more explicit\n   */\n  private setupPeriodicTimer(): void {\n    if (typeof window === 'undefined') return;\n\n    // \uD83D\uDE80 FIX: Only set up the periodic timer, don't sync immediately\n    // Initial sync will be triggered by configure() when ready\n    this.syncInterval = setInterval(() => {\n      if (this.storage.activeSessions.length > 0) {\n        this.syncWithDatabase();\n      }\n    }, SessionManager.SYNC_INTERVAL);\n    \n    console.log('[SessionManager] Periodic sync timer setup (initial sync deferred)');\n  }\n\n  /**\n   * Sync localStorage sessions with database\n   * Ensures sessions remain up to date across browser sessions\n   * \n   * =============================================================================\n   * \uD83D\uDE80 Enhanced API Proxy Integration\n   * =============================================================================\n   * \n   * When running in CSP-restricted environments (like external embeds), this\n   * method uses the enhanced iframe-api-proxy to make authenticated requests.\n   * \n   * OLD (complex, forced format):\n   * const requestData = { method: 'getSessions', userId: '', communityId: '', params: { sessionToken } };\n   * const response = await this.apiProxy.makeApiRequest(requestData);\n   * \n   * NEW (clean, semantic):\n   * const sessions = await this.apiProxy.makeAuthenticatedRequest('/api/auth/sessions', token);\n   * \n   * This provides:\n   * - \u2705 Proper HTTP semantics (GET with Authorization header)\n   * - \u2705 Clean, readable code\n   * - \u2705 No artificial userId/communityId placeholders\n   * - \u2705 CSP compliance through iframe proxy\n   * - \u2705 Automatic fallback to direct fetch when proxy unavailable\n   * \n   * =============================================================================\n   */\n  public async syncWithDatabase(): Promise<void> {\n    try {\n      const activeToken = this.getActiveToken();\n      if (!activeToken) {\n        console.log('[SessionManager] No active session for database sync');\n        return;\n      }\n\n      let dbSessions: SessionData[] = [];\n\n      // Use API proxy if available (embed context with CSP), otherwise direct fetch\n      if (this.apiProxy) {\n        console.log('[SessionManager] Using API proxy for database sync (CSP-compliant)');\n        \n        try {\n          // \uD83D\uDE80 NEW: Use clean authenticated request API\n          const response = await this.apiProxy.makeAuthenticatedRequest('/api/auth/sessions', activeToken);\n          \n          // Extract data from ApiResponse format\n          dbSessions = response.success ? response.data : [];\n          console.log('[SessionManager] API proxy database sync success:', dbSessions.length, 'sessions');\n        } catch (proxyError) {\n          console.warn('[SessionManager] API proxy database sync error:', proxyError);\n          return;\n        }\n      } else {\n        // Fallback to direct fetch for regular app usage\n        console.log('[SessionManager] Using direct fetch for database sync');\n        \n        const apiUrl = this.hostServiceUrl ? `${this.hostServiceUrl}/api/auth/sessions` : '/api/auth/sessions';\n        \n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${activeToken}`,\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          console.warn('[SessionManager] Database sync failed:', response.status, response.statusText);\n          return;\n        }\n\n        dbSessions = await response.json();\n      }\n      \n      // Merge database sessions with localStorage cache\n      const mergedSessions = this.mergeSessionStates(this.storage.activeSessions, dbSessions);\n      \n      this.storage.activeSessions = mergedSessions;\n      this.storage.lastSyncedAt = Date.now();\n      this.saveToStorage();\n      this.notifyListeners();\n\n      console.log('[SessionManager] Database sync completed:', mergedSessions.length, 'sessions');\n    } catch (error) {\n      console.error('[SessionManager] Database sync error:', error);\n      // Graceful degradation - continue with localStorage cache\n    }\n  }\n\n  private mergeSessionStates(localSessions: SessionData[], dbSessions: SessionData[]): SessionData[] {\n    const sessionMap = new Map<string, SessionData>();\n\n    // Start with database sessions (source of truth for metadata)\n    for (const session of dbSessions) {\n      sessionMap.set(session.sessionToken, {\n        ...session,\n        expiresAt: new Date(session.expiresAt),\n        lastAccessedAt: new Date(session.lastAccessedAt),\n      });\n    }\n\n    // Override with localStorage cache for active session context\n    for (const session of localSessions) {\n      const existing = sessionMap.get(session.sessionToken);\n      if (existing) {\n        // Keep database metadata but preserve localStorage context\n        sessionMap.set(session.sessionToken, {\n          ...existing,\n          lastAccessedAt: session.lastAccessedAt, // Keep local access time\n        });\n      } else {\n        // \uD83D\uDD25 FIX: Keep new sessions that aren't in database yet\n        console.log('[SessionManager] \uD83D\uDD27 Preserving local session not yet in database:', session.sessionToken);\n        sessionMap.set(session.sessionToken, session);\n      }\n    }\n\n    return Array.from(sessionMap.values());\n  }\n\n  // ============================================================================\n  // LEGACY MIGRATION\n  // ============================================================================\n\n  private migrateLegacySession(): void {\n    try {\n      // \u2705 Browser-only check to prevent SSR errors\n      if (typeof window === 'undefined') {\n        console.log('[SessionManager] SSR environment detected, skipping legacy migration');\n        return;\n      }\n\n      const legacyToken = localStorage.getItem(SessionManager.LEGACY_TOKEN_KEY);\n      if (!legacyToken || this.storage.activeSessions.length > 0) {\n        return; // No migration needed\n      }\n\n      console.log('[SessionManager] Migrating legacy session token');\n\n      // Create a placeholder session that will be validated by the next database sync\n      const legacySession: SessionData = {\n        sessionToken: legacyToken,\n        userId: 'legacy-migration', // Will be updated by database sync\n        identityType: 'anonymous', // Will be updated by database sync\n        expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days\n        lastAccessedAt: new Date(),\n        isActive: true,\n      };\n\n      this.storage.activeSessions = [legacySession];\n      this.storage.activeSessionToken = legacyToken;\n      this.saveToStorage();\n\n      // Remove legacy token\n      localStorage.removeItem(SessionManager.LEGACY_TOKEN_KEY);\n      \n      // Trigger immediate database sync to validate and populate session data\n      this.syncWithDatabase();\n\n      console.log('[SessionManager] Legacy session migration completed');\n    } catch (error) {\n      console.error('[SessionManager] Legacy migration failed:', error);\n    }\n  }\n\n  // ============================================================================\n  // CLEANUP\n  // ============================================================================\n\n  public destroy(): void {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n      this.syncInterval = null;\n    }\n    this.listeners.clear();\n    console.log('[SessionManager] Destroyed');\n  }\n}\n\n// ============================================================================\n// SINGLETON INSTANCE & CONVENIENCE EXPORTS\n// ============================================================================\n\nexport const sessionManager = SessionManager.getInstance();\n\n// Convenience functions for simple use cases\nexport const getSessionToken = (): string | null => sessionManager.getActiveToken();\nexport const setSessionToken = (sessionData: Omit<SessionData, 'lastAccessedAt'>): Promise<void> => sessionManager.addSession(sessionData);\nexport const clearSessionToken = (): Promise<void> => sessionManager.removeActiveSession();\nexport const isAuthenticated = (): boolean => sessionManager.isAuthenticated(); ", "interface PendingRequest {\n  resolve: (value: any) => void;\n  reject: (error: Error) => void;\n  timeout: NodeJS.Timeout;\n}\n\nexport class SessionServiceProxy {\n  private iframe: HTMLIFrameElement;\n  private pendingRequests: Map<string, PendingRequest> = new Map();\n  private isReady = false;\n  private readyPromise: Promise<void>;\n  private readyResolve: (() => void) | null = null;\n\n  constructor(iframe: HTMLIFrameElement) {\n    this.iframe = iframe;\n    \n    // Setup ready promise\n    this.readyPromise = new Promise((resolve) => {\n      this.readyResolve = resolve;\n    });\n\n    // Listen for responses\n    window.addEventListener('message', this.handleMessage.bind(this));\n  }\n\n  public async waitForReady(): Promise<void> {\n    return this.readyPromise;\n  }\n\n  public async addSession(session: any): Promise<void> {\n    return this.sendRequest('addSession', { session });\n  }\n\n  public async removeSession(sessionId: string): Promise<void> {\n    return this.sendRequest('removeSession', { sessionId });\n  }\n\n  public async syncWithDatabase(): Promise<any> {\n    return this.sendRequest('syncWithDatabase');\n  }\n\n  public async getAllSessions(): Promise<any[]> {\n    try {\n      return await this.sendRequest('getAllSessions');\n    } catch (error) {\n      console.error('[SessionServiceProxy] getAllSessions failed:', error);\n      throw error;\n    }\n  }\n\n  public async getActiveSession(): Promise<any> {\n    return this.sendRequest('getActiveSession');\n  }\n\n  public async setActiveSession(sessionId: string): Promise<void> {\n    return this.sendRequest('setActiveSession', { sessionId });\n  }\n\n  private async sendRequest(operation: string, data?: any): Promise<any> {\n    await this.waitForReady();\n\n    // Check if iframe is accessible\n    if (!this.iframe.contentWindow) {\n      throw new Error(`Session service iframe not accessible for operation: ${operation}`);\n    }\n\n    const requestId = this.generateRequestId();\n    \n    return new Promise((resolve, reject) => {\n      // Setup timeout\n      const timeout = setTimeout(() => {\n        this.pendingRequests.delete(requestId);\n        reject(new Error(`Session service request timeout: ${operation}`));\n      }, 10000);\n\n      this.pendingRequests.set(requestId, { resolve, reject, timeout });\n\n      // Send message to iframe - now we know contentWindow exists\n      this.iframe.contentWindow!.postMessage({\n        type: 'session-operation',\n        operation,\n        data,\n        requestId\n      }, '*');\n    });\n  }\n\n  private handleMessage(event: MessageEvent): void {\n    if (!event.data) return;\n\n    // Handle ready notification\n    if (event.data.type === 'session-service-ready') {\n      console.log('[SessionServiceProxy] Session service is ready');\n      this.isReady = true;\n      if (this.readyResolve) {\n        this.readyResolve();\n        this.readyResolve = null;\n      }\n      return;\n    }\n\n    // Handle operation responses\n    if (event.data.type === 'session-operation-response') {\n      const { requestId, success, data, error } = event.data;\n      const pendingRequest = this.pendingRequests.get(requestId);\n      \n      if (pendingRequest) {\n        clearTimeout(pendingRequest.timeout);\n        this.pendingRequests.delete(requestId);\n        \n        if (success) {\n          pendingRequest.resolve(data);\n        } else {\n          pendingRequest.reject(new Error(error || 'Unknown session service error'));\n        }\n      }\n    }\n  }\n\n  private generateRequestId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  public destroy(): void {\n    // Clear any pending requests\n    this.pendingRequests.forEach((request) => {\n      clearTimeout(request.timeout);\n      request.reject(new Error('Session service proxy destroyed'));\n    });\n    this.pendingRequests.clear();\n\n    window.removeEventListener('message', this.handleMessage.bind(this));\n  }\n} ", "/**\n * Gradient utilities for community icons\n * Extracted from InternalPluginHost.ts for better maintainability\n */\n\n/**\n * Get gradient class based on community name\n */\nexport function getGradientClass(name: string): string {\n  // Simple hash function to get consistent gradient based on name\n  let hash = 0;\n  for (let i = 0; i < name.length; i++) {\n    const char = name.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  // Map to gradient classes (8 beautiful gradients)\n  const gradients = [\n    'gradient-blue',     // Blue to indigo\n    'gradient-purple',   // Purple to pink\n    'gradient-green',    // Green to teal\n    'gradient-orange',   // Orange to red\n    'gradient-cyan',     // Cyan to blue\n    'gradient-pink',     // Pink to rose\n    'gradient-yellow',   // Yellow to orange\n    'gradient-teal'      // Teal to green\n  ];\n\n  return gradients[Math.abs(hash) % gradients.length];\n}\n\n/**\n * Get CSS gradient style for a gradient class\n */\nexport function getGradientStyle(gradientClass: string): string {\n  const gradientMap: Record<string, string> = {\n    'gradient-blue': 'linear-gradient(135deg, #3b82f6 0%, #6366f1 100%)',\n    'gradient-purple': 'linear-gradient(135deg, #8b5cf6 0%, #ec4899 100%)',\n    'gradient-green': 'linear-gradient(135deg, #10b981 0%, #06b6d4 100%)',\n    'gradient-orange': 'linear-gradient(135deg, #f59e0b 0%, #ef4444 100%)',\n    'gradient-cyan': 'linear-gradient(135deg, #06b6d4 0%, #3b82f6 100%)',\n    'gradient-pink': 'linear-gradient(135deg, #ec4899 0%, #f43f5e 100%)',\n    'gradient-yellow': 'linear-gradient(135deg, #eab308 0%, #f59e0b 100%)',\n    'gradient-teal': 'linear-gradient(135deg, #14b8a6 0%, #10b981 100%)'\n  };\n\n  return gradientMap[gradientClass] || gradientMap['gradient-blue'];\n}\n\n/**\n * All available gradient classes for reference\n */\nexport const GRADIENT_CLASSES = [\n  'gradient-blue',\n  'gradient-purple', \n  'gradient-green',\n  'gradient-orange',\n  'gradient-cyan',\n  'gradient-pink',\n  'gradient-yellow',\n  'gradient-teal'\n] as const;\n\nexport type GradientClass = typeof GRADIENT_CLASSES[number]; ", "/**\n * Lucide Icons Utility\n * Beautiful, consistent SVG icons for the mobile navigation\n * All icons are 24x24 and support CSS theming via currentColor\n */\n\nexport interface IconOptions {\n  size?: number;\n  className?: string;\n  color?: string;\n}\n\n/**\n * Render an SVG icon with consistent styling\n */\nfunction renderIcon(svgContent: string, options: IconOptions = {}): string {\n  const { size = 20, className = '', color = 'currentColor' } = options;\n  \n  return `<svg \n    width=\"${size}\" \n    height=\"${size}\" \n    viewBox=\"0 0 24 24\" \n    fill=\"none\" \n    stroke=\"${color}\" \n    stroke-width=\"2\" \n    stroke-linecap=\"round\" \n    stroke-linejoin=\"round\"\n    class=\"lucide-icon ${className}\"\n    style=\"display: inline-block; vertical-align: middle;\"\n  >${svgContent}</svg>`;\n}\n\n/**\n * Mobile Navigation Icons\n */\nexport const MobileIcons = {\n  // Search - magnifying glass\n  search: (options?: IconOptions) => renderIcon(\n    '<circle cx=\"11\" cy=\"11\" r=\"8\"/><path d=\"m21 21-4.35-4.35\"/>',\n    options\n  ),\n\n  // Messages - message square  \n  messages: (options?: IconOptions) => renderIcon(\n    '<path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>',\n    options\n  ),\n\n  // Notifications - bell\n  notifications: (options?: IconOptions) => renderIcon(\n    '<path d=\"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9\"/><path d=\"M10.3 21a1.94 1.94 0 0 0 3.4 0\"/>',\n    options\n  ),\n\n  // Chevron Down - for collapse\n  chevronDown: (options?: IconOptions) => renderIcon(\n    '<path d=\"m6 9 6 6 6-6\"/>',\n    options\n  ),\n\n  // Chevron Up - for expand  \n  chevronUp: (options?: IconOptions) => renderIcon(\n    '<path d=\"m18 15-6-6-6 6\"/>',\n    options\n  )\n};\n\n/**\n * Get icon HTML string for direct innerHTML usage\n */\nexport function getIconHTML(iconName: keyof typeof MobileIcons, options?: IconOptions): string {\n  return MobileIcons[iconName](options);\n}\n\n// ==========================================\n// EXISTING COMMUNITY ICON FUNCTIONS\n// (Preserving original functionality)\n// ==========================================\n\n/**\n * Get emoji icon for community based on name\n */\nexport function getIconForCommunity(name: string): string {\n  // Clean the name for better matching\n  const cleanName = name.toLowerCase().trim();\n  \n  // Direct matches for common terms\n  if (cleanName.includes('dev') || cleanName.includes('code') || cleanName.includes('tech')) return '\uD83D\uDCBB';\n  if (cleanName.includes('art') || cleanName.includes('design') || cleanName.includes('creative')) return '\uD83C\uDFA8';\n  if (cleanName.includes('music') || cleanName.includes('audio') || cleanName.includes('sound')) return '\uD83C\uDFB5';\n  if (cleanName.includes('game') || cleanName.includes('gaming') || cleanName.includes('play')) return '\uD83C\uDFAE';\n  if (cleanName.includes('book') || cleanName.includes('read') || cleanName.includes('literature')) return '\uD83D\uDCDA';\n  if (cleanName.includes('food') || cleanName.includes('cook') || cleanName.includes('recipe')) return '\uD83C\uDF7D\uFE0F';\n  if (cleanName.includes('travel') || cleanName.includes('explore') || cleanName.includes('adventure')) return '\uD83C\uDF0D';\n  if (cleanName.includes('fitness') || cleanName.includes('gym') || cleanName.includes('workout')) return '\uD83D\uDCAA';\n  if (cleanName.includes('photo') || cleanName.includes('camera') || cleanName.includes('picture')) return '\uD83D\uDCF8';\n  if (cleanName.includes('film') || cleanName.includes('movie') || cleanName.includes('cinema')) return '\uD83C\uDFAC';\n  if (cleanName.includes('science') || cleanName.includes('research') || cleanName.includes('lab')) return '\uD83D\uDD2C';\n  if (cleanName.includes('crypto') || cleanName.includes('bitcoin') || cleanName.includes('blockchain')) return '\u20BF';\n  if (cleanName.includes('nft') || cleanName.includes('collectible') || cleanName.includes('token')) return '\uD83D\uDDBC\uFE0F';\n  if (cleanName.includes('dao') || cleanName.includes('governance') || cleanName.includes('vote')) return '\uD83C\uDFDB\uFE0F';\n  if (cleanName.includes('defi') || cleanName.includes('finance') || cleanName.includes('trading')) return '\uD83D\uDCB0';\n  \n  // Fallback based on first letter hash\n  const icons = [\n    '\uD83D\uDE80', '\u2B50', '\uD83C\uDF1F', '\u2728', '\uD83D\uDD25', '\u26A1', '\uD83D\uDC8E', '\uD83C\uDFAF',\n    '\uD83C\uDFAA', '\uD83C\uDFAD', '\uD83C\uDFA8', '\uD83C\uDFB5', '\uD83C\uDFAE', '\uD83C\uDFC6', '\uD83C\uDF08', '\uD83E\uDD84',\n    '\uD83D\uDC09', '\uD83E\uDD8B', '\uD83C\uDF3A', '\uD83C\uDF40', '\uD83C\uDF19', '\u2600\uFE0F', '\uD83D\uDD2E', '\uD83D\uDCAB'\n  ];\n  \n  // Use first character for consistent selection\n  const charCode = name.charCodeAt(0) || 0;\n  return icons[charCode % icons.length];\n}\n\n/**\n * Get user initials from name\n */\nexport function getUserInitials(name: string): string {\n  if (!name) return '?';\n  \n  const words = name.trim().split(/\\s+/);\n  if (words.length === 1) {\n    return words[0].substring(0, 2).toUpperCase();\n  }\n  \n  return words\n    .slice(0, 2)\n    .map(word => word.charAt(0).toUpperCase())\n    .join('');\n}\n\n/**\n * Identity type icons\n */\nexport function getIdentityIcon(identityType: string): string {\n  const iconMap: Record<string, string> = {\n    'ens': '\uD83C\uDFF7\uFE0F',\n    'universal_profile': '\uD83C\uDD94', \n    'anonymous': '\uD83D\uDC64'\n  };\n  \n  return iconMap[identityType] || '\uD83D\uDC64';\n}\n\n/**\n * All available fallback icons\n */\nexport const FALLBACK_ICONS = [\n  '\uD83D\uDE80', '\u2B50', '\uD83C\uDF1F', '\u2728', '\uD83D\uDD25', '\u26A1', '\uD83D\uDC8E', '\uD83C\uDFAF',\n  '\uD83C\uDFAA', '\uD83C\uDFAD', '\uD83C\uDFA8', '\uD83C\uDFB5', '\uD83C\uDFAE', '\uD83C\uDFC6', '\uD83C\uDF08', '\uD83E\uDD84',\n  '\uD83D\uDC09', '\uD83E\uDD8B', '\uD83C\uDF3A', '\uD83C\uDF40', '\uD83C\uDF19', '\u2600\uFE0F', '\uD83D\uDD2E', '\uD83D\uDCAB'\n] as const;\n\nexport type FallbackIcon = typeof FALLBACK_ICONS[number]; ", "/*\n * Curia Embed CSS Isolation Layer - SURGICAL APPROACH\n * \n * STRATEGY: Only block parent interference, preserve our design system\n * This reset targets ONLY the properties that commonly cause inheritance issues\n */\n\n/* ==========================================================================\n   CSS CONTAINMENT & ISOLATION - Keep this, it's essential\n   ========================================================================== */\n\n.curia-embed-container {\n  /* CSS Containment - Isolates layout, style, and paint from parent */\n  contain: layout style paint;\n  \n  /* Create new stacking context - prevents z-index conflicts */\n  isolation: isolate;\n  \n  /* Establish positioning context for absolute children */\n  position: relative;\n  \n  /* Prevent parent flexbox/grid from affecting our layout */\n  flex-shrink: 0;\n  \n  /* Block inheritance of parent transforms that could break fixed positioning */\n  transform: translateZ(0);\n}\n\n/* ==========================================================================\n   SURGICAL RESET - Only target problematic inheritance\n   ========================================================================== */\n\n/* Target all elements within embed + portal elements outside embed */\n.curia-embed-container,\n.curia-embed-container *,\n.mobile-community-picker-overlay,\n.mobile-community-picker-overlay *,\n.mobile-profile-drawer-overlay,\n.mobile-profile-drawer-overlay *,\n.community-preview,\n.community-preview *,\n.user-profile-menu,\n.user-profile-menu * {\n  \n  /* ==========================================================================\n     BOX MODEL PROTECTION - Critical for layout integrity\n     ========================================================================== */\n  \n  /* Force border-box - prevents layout breaks from parent content-box */\n  box-sizing: border-box !important;\n  \n  /* ==========================================================================\n     TYPOGRAPHY BASELINE - Prevent font chaos from parent\n     ========================================================================== */\n  \n  /* Reset only the most problematic font properties */\n  text-decoration: none !important;\n  text-transform: none !important;\n  letter-spacing: normal !important;\n  word-spacing: normal !important;\n  text-indent: 0 !important;\n  text-shadow: none !important;\n  \n  /* Font rendering optimization */\n  text-rendering: optimizeLegibility !important;\n  -webkit-font-smoothing: antialiased !important;\n  -moz-osx-font-smoothing: grayscale !important;\n  \n  /* ==========================================================================\n     LAYOUT INTERFERENCE PROTECTION\n     ========================================================================== */\n  \n  /* Reset floats and clears that could break our layout */\n  float: none !important;\n  clear: none !important;\n  \n  /* ==========================================================================\n     ANIMATION/TRANSITION INTERFERENCE\n     ========================================================================== */\n  \n  /* Reset will-change that could interfere */\n  will-change: auto !important;\n}\n\n/* ==========================================================================\n   PORTAL ELEMENT ISOLATION - Keep this for modals/tooltips\n   ========================================================================== */\n\n.mobile-community-picker-overlay,\n.mobile-profile-drawer-overlay,\n.community-preview,\n.user-profile-menu {\n  /* Create isolated rendering context */\n  contain: layout style paint;\n  isolation: isolate;\n  \n  /* Ensure proper stacking */\n  position: fixed;\n  z-index: 999999;\n  \n  /* Prevent parent transforms from affecting positioning */\n  transform: translateZ(0);\n}\n\n/* ==========================================================================\n   EMBED DESIGN SYSTEM - Apply our actual styles\n   ========================================================================== */\n\n/* Apply our design system to embed container */\n.curia-embed-container {\n  /* Typography foundation */\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Noto Sans\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.5;\n  color: #1f2937;\n  \n  /* Remove any inherited backgrounds */\n  background: transparent;\n}\n\n/* Apply design system to portal elements */\n.mobile-community-picker-overlay,\n.mobile-profile-drawer-overlay,\n.community-preview,\n.user-profile-menu {\n  /* Typography foundation */\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Noto Sans\", Helvetica, Arial, sans-serif !important;\n  font-size: 14px !important;\n  line-height: 1.5 !important;\n  color: #1f2937 !important;\n  \n  /* Clean background */\n  background: transparent !important;\n}\n\n/* Ensure all embed children inherit proper typography */\n.curia-embed-container *,\n.mobile-community-picker-overlay *,\n.mobile-profile-drawer-overlay *,\n.community-preview *,\n.user-profile-menu * {\n  font-family: inherit;\n  color: inherit;\n}\n\n/* ==========================================================================\n   SPECIFIC ELEMENT RESETS - Only what's necessary\n   ========================================================================== */\n\n/* Reset button appearance */\n.curia-embed-container button,\n.mobile-community-picker-overlay button,\n.mobile-profile-drawer-overlay button,\n.community-preview button,\n.user-profile-menu button {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n\n/* Reset input appearance */\n.curia-embed-container input,\n.curia-embed-container textarea,\n.curia-embed-container select,\n.mobile-community-picker-overlay input,\n.mobile-community-picker-overlay textarea,\n.mobile-community-picker-overlay select,\n.mobile-profile-drawer-overlay input,\n.mobile-profile-drawer-overlay textarea,\n.mobile-profile-drawer-overlay select {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n\n/* Reset list styles only if problematic */\n.curia-embed-container ul,\n.curia-embed-container ol {\n  list-style: none;\n}\n\n/* Reset link colors */\n.curia-embed-container a,\n.mobile-community-picker-overlay a,\n.mobile-profile-drawer-overlay a,\n.community-preview a,\n.user-profile-menu a {\n  color: inherit;\n  text-decoration: none;\n} ", "/*\n * Main CSS Entry Point for Curia Embed Styling\n * \n * NOTE: Individual CSS files are bundled via esbuild in index.ts\n * @import statements here would execute in browser and try to load from customer domain\n */\n\n/* All CSS is bundled in styling/index.ts - no @import needed */ ", "/* \n * Community Sidebar Styles\n * Extracted from InternalPluginHost.ts for better maintainability\n * \n * Responsive Design System using absolute px units\n * Benefits: Complete isolation from parent site, consistent rendering\n * No dependency on parent's font-size settings\n */\n\n.curia-community-nav {\n  /* Responsive sidebar dimensions - absolute px units */\n  --sidebar-width: 80px;        /* Fixed width for consistency */\n  --sidebar-padding: 16px;      /* Fixed padding */\n  \n  /* Community icon dimensions - absolute px units */\n  --icon-size: 48px;            /* Fixed icon size */\n  --icon-image-size: 44px;      /* Fixed image size */\n  --icon-emoji-size: 24px;      /* Fixed emoji size */\n  --icon-border-radius: 12px;   /* Fixed border radius */\n  \n  /* Consistent spacing system - absolute px units */\n  --space-xs: 8px;              /* Extra small spacing */\n  --space-sm: 12px;             /* Small spacing */\n  --space-md: 16px;             /* Medium spacing */\n  --space-lg: 20px;             /* Large spacing */\n  \n  /* Profile section - absolute px units */\n  --profile-height: 64px;       /* Fixed profile height */\n  \n  /* Navigation section - absolute px units */\n  --nav-item-size: 40px;        /* Fixed nav item size */\n  --nav-icon-size: 20px;        /* Fixed nav icon size */\n  \n  /* Main sidebar layout */\n  width: var(--sidebar-width);\n  height: 100%;\n  min-height: 100%;\n  flex-shrink: 0;\n  flex-grow: 0;\n  background: linear-gradient(135deg, \n    var(--sidebar-bg-from, #f8fafc) 0%, \n    var(--sidebar-bg-to, #f1f5f9) 100%);\n  border-right: 1px solid var(--sidebar-border, rgba(148, 163, 184, 0.2));\n  box-shadow: \n    inset 2px 0 4px rgba(0, 0, 0, 0.05),\n    inset 0 2px 4px rgba(0, 0, 0, 0.03);\n  display: flex;\n  flex-direction: column;\n  padding: var(--sidebar-padding);\n  position: relative;\n}\n\n.curia-community-nav::-webkit-scrollbar { \n  display: none; \n}\n\n/* ==========================================\n * LOGO SECTION\n * ========================================== */\n\n.sidebar-logo-section {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-md) 0;\n  margin-bottom: var(--space-sm);\n}\n\n.sidebar-logo-img {\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n  opacity: 0.9;\n  transition: opacity 0.2s ease;\n}\n\n.sidebar-logo-img:hover {\n  opacity: 1;\n}\n\n/* ==========================================\n * NAVIGATION SECTION  \n * ========================================== */\n\n.sidebar-nav-section {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-xs);\n  margin-bottom: var(--space-md);\n}\n\n.sidebar-nav-item {\n  width: var(--nav-item-size);\n  height: var(--nav-item-size);\n  min-width: var(--nav-item-size);\n  min-height: var(--nav-item-size);\n  margin: 0 auto; /* Center horizontally */\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n  background: transparent;\n  border: 1px solid transparent;\n}\n\n.sidebar-nav-item:hover {\n  background: var(--sidebar-hover-bg, rgba(99, 102, 241, 0.1));\n  border-color: var(--sidebar-hover-border, rgba(99, 102, 241, 0.2));\n  transform: translateY(-1px);\n}\n\n.sidebar-nav-icon {\n  width: var(--nav-icon-size);\n  height: var(--nav-icon-size);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--sidebar-text, #64748b);\n}\n\n.sidebar-nav-item:hover .sidebar-nav-icon {\n  color: var(--sidebar-text-hover, #4f46e5);\n}\n\n.sidebar-nav-icon .lucide-icon {\n  stroke: currentColor;\n  stroke-width: 2;\n}\n\n/* ==========================================\n * DIVIDER\n * ========================================== */\n\n.sidebar-divider {\n  width: calc(100% - 16px);\n  height: 1px;\n  margin: var(--space-sm) auto var(--space-md) auto;\n  background: var(--sidebar-border, rgba(148, 163, 184, 0.3));\n  border-radius: 1px;\n}\n\n/* Community list container - scrollable with badge space */\n.community-list-container {\n  flex: 1;\n  height: 0; /* Force flex to work properly */\n  overflow-y: auto;\n  scrollbar-width: thin;\n  scrollbar-color: var(--sidebar-border) transparent;\n  padding: 8px 8px 0px 4px; /* Space for online badges (top/right) */\n  margin: -8px -8px 0px -4px; /* Offset padding to maintain container size */\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n}\n\n.community-list-container::-webkit-scrollbar {\n  width: 6px;\n}\n\n.community-list-container::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.community-list-container::-webkit-scrollbar-thumb {\n  background: var(--sidebar-border);\n  border-radius: 3px;\n}\n\n.community-list-container::-webkit-scrollbar-thumb:hover {\n  background: var(--preview-text-muted);\n}\n\n/* Community item styling */\n.community-item {\n  width: var(--icon-size);\n  height: var(--icon-size);\n  min-width: var(--icon-size);\n  min-height: var(--icon-size);\n  max-width: var(--icon-size);\n  max-height: var(--icon-size);\n  border-radius: var(--icon-border-radius);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: visible;\n  user-select: none;\n  flex-shrink: 0;\n  border: 2px solid transparent;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n}\n\n.community-item.active {\n  border-color: var(--item-active-border);\n  box-shadow: 0 4px 12px var(--item-active-shadow), 0 0 0 1px var(--item-active-border);\n}\n\n.community-item:hover:not(.active) {\n  transform: scale(1.08) translateY(-1px);\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\n}\n\n/* Community item hover effects */\n.community-item:hover::after {\n  content: '';\n  position: absolute;\n  inset: -2px;\n  border-radius: 14px;\n  background: var(--item-hover-bg);\n  z-index: -1;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Community icon image */\n.community-icon-image {\n  width: var(--icon-image-size);\n  height: var(--icon-image-size);\n  object-fit: cover;\n  border-radius: 10px;\n  margin: 2px;\n  flex-shrink: 0;\n}\n\n/* Community icon emoji */\n.community-icon-emoji {\n  font-size: var(--icon-emoji-size);\n  line-height: 1;\n  width: var(--icon-emoji-size);\n  height: var(--icon-emoji-size);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n}\n\n/* User profile section styling - fixed at bottom */\n.user-profile-section {\n  margin-top: var(--space-md);\n  padding-top: var(--space-md);\n  border-top: 1px solid var(--sidebar-border, rgba(148, 163, 184, 0.2));\n  flex-shrink: 0;\n  height: var(--profile-height);\n  min-height: var(--profile-height);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n}\n\n.user-profile-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  user-select: none;\n  border: 2px solid transparent;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.user-profile-avatar:hover {\n  transform: scale(1.08) translateY(-1px);\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\n} ", "/*\n * Community Preview Cards & Tooltips\n * Extracted from InternalPluginHost.ts for better maintainability\n */\n\n/* Preview card styling - Portal pattern for document-level rendering */\n.community-preview {\n  position: fixed;\n  min-width: 220px;\n  max-width: 280px;\n  background: var(--preview-bg);\n  border: 1px solid var(--preview-border);\n  border-radius: 12px;\n  padding: 16px;\n  box-shadow: \n    0 20px 40px rgba(0, 0, 0, 0.15),\n    0 8px 16px rgba(0, 0, 0, 0.1);\n  z-index: 999999;\n  opacity: 0;\n  transform: translateX(-8px) scale(0.95);\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n  backdrop-filter: blur(12px);\n}\n\n.community-preview.show {\n  opacity: 1;\n  transform: translateX(0) scale(1);\n}\n\n.community-preview-header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.community-preview-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  flex-shrink: 0;\n}\n\n.community-preview-info h4 {\n  color: var(--preview-text);\n  font-weight: 600;\n  font-size: 16px;\n  margin: 0 0 4px 0;\n  line-height: 1.2;\n}\n\n.community-preview-info p {\n  color: var(--preview-text-muted);\n  font-size: 14px;\n  margin: 0;\n  line-height: 1.3;\n}\n\n.community-preview-stats {\n  display: flex;\n  gap: 16px;\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid var(--preview-border);\n}\n\n.community-preview-stat {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  color: var(--preview-text-muted);\n  font-size: 13px;\n} ", "/*\n * User Profile Menu & Account Switcher\n * Extracted from InternalPluginHost.ts for better maintainability\n */\n\n/* Profile menu styling - Portal pattern */\n.user-profile-menu {\n  position: fixed;\n  min-width: 280px;\n  max-width: 320px;\n  background: rgb(255, 255, 255);  /* Solid white background */\n  border: 1px solid rgba(148, 163, 184, 0.3);\n  border-radius: 12px;\n  padding: 16px;\n  box-shadow: \n    0 20px 40px rgba(0, 0, 0, 0.15),\n    0 8px 16px rgba(0, 0, 0, 0.1);\n  z-index: 999999;\n  opacity: 0;\n  transform: translateX(-8px) scale(0.95);\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n  backdrop-filter: blur(12px);\n  \n  /* Define CSS variables locally since menu is rendered outside .curia-community-nav scope */\n  --preview-bg: rgb(255, 255, 255);\n  --preview-border: rgba(148, 163, 184, 0.3);\n  --preview-text: #1f2937;  /* Dark gray for high contrast on white */\n  --preview-text-muted: #4b5563;  /* Darker muted text for better readability */\n  --item-hover-bg: rgba(249, 250, 251, 1);  /* Solid light gray hover */\n}\n\n/* Dark theme support for profile menu */\n[data-theme=\"dark\"] .user-profile-menu,\n.dark .user-profile-menu {\n  background: rgb(31, 41, 55);  /* Solid background - no transparency issues */\n  border: 1px solid rgba(75, 85, 99, 0.5);\n  \n  --preview-bg: rgb(31, 41, 55);\n  --preview-border: rgba(75, 85, 99, 0.5);\n  --preview-text: #ffffff;  /* Pure white for maximum contrast */\n  --preview-text-muted: #d1d5db;  /* Much lighter gray for better readability */\n  --item-hover-bg: rgba(55, 65, 81, 1);  /* Solid hover state */\n}\n\n.user-profile-menu.show {\n  opacity: 1;\n  transform: translateX(0) scale(1);\n  pointer-events: auto;\n}\n\n.profile-menu-header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 16px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--preview-border);\n}\n\n.profile-menu-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n}\n\n.profile-menu-info h4 {\n  color: var(--preview-text);\n  font-weight: 600;\n  font-size: 16px;\n  margin: 0 0 4px 0;\n  line-height: 1.2;\n}\n\n.profile-menu-info p {\n  color: var(--preview-text-muted);\n  font-size: 14px;\n  margin: 0;\n  line-height: 1.3;\n}\n\n.profile-menu-actions {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.profile-menu-action {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  border-radius: 8px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  color: var(--preview-text);\n  font-size: 14px;\n  text-align: left;\n  width: 100%;\n}\n\n.profile-menu-action:hover {\n  background: var(--item-hover-bg);\n}\n\n.profile-menu-action-icon {\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--preview-text-muted);\n}\n\n/* Account Switcher Styles */\n.profile-menu-accounts {\n  margin: 16px 0;\n  padding-top: 16px;\n  border-top: 1px solid var(--preview-border);\n}\n\n.profile-menu-section-title {\n  color: var(--preview-text-muted);\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 12px;\n  padding: 0 4px;\n}\n\n/* Session Management Styles */\n.profile-menu-sessions {\n  margin: 16px 0;\n  padding-top: 16px;\n}\n\n.profile-menu-section-label {\n  color: var(--preview-text-muted);\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 12px;\n  padding: 0 4px;\n}\n\n.profile-menu-session {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.profile-menu-session:hover {\n  background: var(--item-hover-bg);\n}\n\n.profile-session-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.profile-session-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.profile-session-name {\n  color: var(--preview-text);\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 2px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.profile-session-type {\n  color: var(--preview-text-muted);\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.profile-menu-account {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 10px 8px;\n  border-radius: 8px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  color: var(--preview-text);\n  font-size: 14px;\n  text-align: left;\n  width: 100%;\n  margin-bottom: 4px;\n}\n\n.profile-menu-account:hover {\n  background: var(--item-hover-bg);\n  transform: translateX(2px);\n}\n\n.profile-account-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n}\n\n.profile-account-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.profile-account-name {\n  color: var(--preview-text);\n  font-weight: 500;\n  font-size: 14px;\n  margin: 0 0 2px 0;\n  line-height: 1.2;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.profile-account-type {\n  color: var(--preview-text-muted);\n  font-size: 12px;\n  margin: 0;\n  line-height: 1.2;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n} ", "/*\n * Mobile Community Navigation Styles\n * Bottom navigation layout for screens < 768px\n */\n\n/* Hide desktop sidebar on mobile */\n@media (max-width: 767px) {\n  .curia-community-nav {\n    display: none !important;\n  }\n}\n\n/* Mobile bottom navigation */\n.curia-mobile-bottom-nav {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  background: linear-gradient(135deg, \n    var(--sidebar-bg-from, #f8fafc) 0%, \n    var(--sidebar-bg-to, #f1f5f9) 100%);\n  border-top: 1px solid var(--sidebar-border, rgba(148, 163, 184, 0.2));\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n  z-index: 1000;\n  backdrop-filter: blur(8px);\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Mobile bottom nav sections - 4 equal sections with edge positioning */\n.mobile-nav-section {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  padding: 8px 4px;\n  border-radius: 12px;\n  transition: all 0.2s ease;\n  position: relative;\n}\n\n/* First section (burger + community) - push to left edge */\n.mobile-nav-section:first-child {\n  justify-content: flex-start;\n  padding-left: 6px; /* Minimal margin to left edge */\n  flex: none;\n  width: auto;\n}\n\n/* Last section (profile) - push to right edge */\n.mobile-nav-section:last-child {\n  justify-content: flex-end;\n  padding-right: 6px; /* Minimal margin to right edge */\n  flex: none;\n  width: auto;\n}\n\n/* Middle sections (stubs) - evenly distribute */\n.mobile-nav-section:not(:first-child):not(:last-child) {\n  flex: 1;\n  justify-content: center;\n}\n\n.mobile-nav-section:hover:not(.inactive):not(:first-child) {\n  background: rgba(255, 255, 255, 0.1);\n  transform: scale(1.02);\n}\n\n/* Community burger menu (left section) - cohesive pill design */\n.mobile-community-burger {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px; /* More pill-like */\n  transition: all 0.2s ease;\n  \n  /* Subtle inset/impression effect */\n  background: linear-gradient(135deg, \n    var(--sidebar-bg-from) 0%, \n    var(--sidebar-bg-to) 100%);\n  border: 1px solid var(--sidebar-border);\n  box-shadow: \n    inset 0 1px 2px rgba(0, 0, 0, 0.05),\n    0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.mobile-nav-section:hover:not(.inactive) .mobile-community-burger {\n  background: linear-gradient(135deg, \n    var(--item-hover-bg) 0%, \n    var(--item-bg) 100%);\n  transform: scale(1.02);\n  box-shadow: \n    inset 0 1px 2px rgba(0, 0, 0, 0.1),\n    0 2px 6px rgba(0, 0, 0, 0.15);\n}\n\n.mobile-burger-icon {\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--preview-text, #1f2937);\n  font-size: 16px;\n  flex-shrink: 0;\n}\n\n.mobile-community-indicator {\n  width: 24px;\n  height: 24px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  flex-shrink: 0;\n}\n\n/* Inactive stub sections (search, messages, notifications) */\n.mobile-nav-section.inactive {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.mobile-stub-icon {\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--preview-text-muted);\n}\n\n/* Lucide icon styling within stub icons */\n.mobile-stub-icon .lucide-icon {\n  stroke: var(--preview-text-muted);\n  opacity: 0.7; /* Subtle appearance for inactive stubs */\n}\n\n/* Profile section (right) */\n.mobile-profile-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2px;\n}\n\n.mobile-profile-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  border: 2px solid transparent;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n}\n\n\n\n/* Iframe container adjustment for mobile nav */\n@media (max-width: 767px) {\n  .curia-iframe-container {\n    padding-bottom: 60px !important;\n  }\n}\n\n/* Mobile Community Picker Modal */\n.mobile-community-picker-overlay {\n  position: absolute; /* \uD83C\uDFAF Changed from fixed - respects embed boundaries */\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 10000;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n}\n\n.mobile-community-picker-backdrop {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(4px);\n  opacity: 0;\n  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.mobile-community-picker-content {\n  position: relative;\n  width: 100%;\n  max-height: 80vh;\n  background: var(--preview-bg);\n  border-radius: 20px 20px 0 0;\n  box-shadow: 0 -10px 40px rgba(0, 0, 0, 0.3);\n  transform: translateY(100%);\n  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Animation states */\n.mobile-community-picker-visible .mobile-community-picker-backdrop {\n  opacity: 1;\n}\n\n.mobile-community-picker-visible .mobile-community-picker-content {\n  transform: translateY(0);\n}\n\n/* Header */\n.mobile-community-picker-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 24px 16px;\n  border-bottom: 1px solid var(--preview-border);\n  flex-shrink: 0;\n}\n\n.mobile-community-picker-title {\n  font-size: 20px;\n  font-weight: 600;\n  color: var(--preview-text);\n  margin: 0;\n}\n\n.mobile-community-picker-close {\n  width: 32px;\n  height: 32px;\n  border: none;\n  background: transparent; /* Free floating, no background */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 22px; /* Better size alignment with title (20px) */\n  font-weight: 500; /* Slightly less bold for better harmony */\n  color: var(--preview-text-muted);\n  transition: all 0.2s ease;\n  margin-top: -1px; /* Subtle vertical adjustment for better alignment */\n}\n\n.mobile-community-picker-close:hover {\n  color: var(--preview-text);\n  transform: scale(1.1); /* Subtle scale instead of background change */\n}\n\n/* Lucide chevron icon styling in close button */\n.mobile-community-picker-close .lucide-icon {\n  stroke: var(--preview-text-muted);\n  transition: all 0.2s ease;\n}\n\n.mobile-community-picker-close:hover .lucide-icon {\n  stroke: var(--preview-text);\n}\n\n/* Grid container with scroll */\n.mobile-community-picker-grid-container {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px 24px;\n  -webkit-overflow-scrolling: touch;\n}\n\n.mobile-community-picker-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\n  gap: 20px;\n  padding-bottom: 16px;\n}\n\n/* Community items */\n.mobile-community-picker-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  padding: 8px;\n  border-radius: 12px;\n}\n\n.mobile-community-picker-item:hover {\n  background: rgba(59, 130, 246, 0.05);\n  transform: scale(1.02);\n}\n\n.mobile-community-picker-item.active {\n  background: rgba(59, 130, 246, 0.1);\n}\n\n.mobile-community-picker-item.active .mobile-community-picker-icon {\n  transform: scale(1.05);\n  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n}\n\n.mobile-community-picker-icon {\n  width: 56px;\n  height: 56px;\n  border-radius: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 8px;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.mobile-community-picker-name {\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--preview-text);\n  text-align: center;\n  max-width: 80px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* Plus button section */\n.mobile-community-picker-plus-section {\n  padding: 16px 24px 24px;\n  border-top: 1px solid var(--preview-border);\n  flex-shrink: 0;\n}\n\n.mobile-community-picker-plus {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  padding: 16px;\n  background: linear-gradient(135deg, \n    var(--sidebar-bg-from) 0%, \n    var(--sidebar-bg-to) 100%);\n  border: 2px dashed var(--sidebar-border);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.25s ease;\n}\n\n.mobile-community-picker-plus:hover {\n  border-color: rgba(59, 130, 246, 0.4);\n  background: rgba(59, 130, 246, 0.05);\n  transform: scale(1.02);\n}\n\n.mobile-community-picker-plus-icon {\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  background: var(--sidebar-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: var(--preview-text-muted);\n  transition: all 0.25s ease;\n}\n\n.mobile-community-picker-plus:hover .mobile-community-picker-plus-icon {\n  background: rgba(59, 130, 246, 0.2);\n  color: rgba(59, 130, 246, 0.8);\n}\n\n.mobile-community-picker-plus-text {\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--preview-text-muted);\n  transition: color 0.25s ease;\n}\n\n.mobile-community-picker-plus:hover .mobile-community-picker-plus-text {\n  color: #3b82f6;\n}\n\n/* Mobile Profile Drawer */\n.mobile-profile-drawer-overlay {\n  position: absolute; /* \uD83C\uDFAF Changed from fixed - respects embed boundaries */\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 10000;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n}\n\n.mobile-profile-drawer-backdrop {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(4px);\n  opacity: 0;\n  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.mobile-profile-drawer-content {\n  position: relative;\n  width: 100%;\n  max-height: 80vh;\n  background: var(--preview-bg);\n  border-radius: 20px 20px 0 0;\n  box-shadow: 0 -10px 40px rgba(0, 0, 0, 0.3);\n  transform: translateY(100%);\n  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Animation states */\n.mobile-profile-drawer-visible .mobile-profile-drawer-backdrop {\n  opacity: 1;\n}\n\n.mobile-profile-drawer-visible .mobile-profile-drawer-content {\n  transform: translateY(0);\n}\n\n/* Header */\n.mobile-profile-drawer-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 24px 16px;\n  border-bottom: 1px solid var(--preview-border);\n  flex-shrink: 0;\n}\n\n.mobile-profile-drawer-title {\n  font-size: 20px;\n  font-weight: 600;\n  color: var(--preview-text);\n  margin: 0;\n}\n\n.mobile-profile-drawer-close {\n  width: 32px;\n  height: 32px;\n  border: none;\n  background: transparent; /* Free floating, no background */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 22px; /* Better size alignment with title (20px) */\n  font-weight: 500; /* Slightly less bold for better harmony */\n  color: var(--preview-text-muted);\n  transition: all 0.2s ease;\n  margin-top: -1px; /* Subtle vertical adjustment for better alignment */\n}\n\n.mobile-profile-drawer-close:hover {\n  color: var(--preview-text);\n  transform: scale(1.1); /* Subtle scale instead of background change */\n}\n\n/* Lucide chevron icon styling in close button */\n.mobile-profile-drawer-close .lucide-icon {\n  stroke: var(--preview-text-muted);\n  transition: all 0.2s ease;\n}\n\n.mobile-profile-drawer-close:hover .lucide-icon {\n  stroke: var(--preview-text);\n}\n\n/* Profile section */\n.mobile-profile-drawer-profile {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 24px;\n  border-bottom: 1px solid var(--preview-border);\n}\n\n.mobile-profile-drawer-avatar {\n  width: 64px;\n  height: 64px;\n  border-radius: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.mobile-profile-drawer-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.mobile-profile-drawer-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--preview-text);\n  margin: 0 0 4px 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.mobile-profile-drawer-type {\n  font-size: 14px;\n  color: var(--preview-text-muted);\n  margin: 0;\n}\n\n/* Actions section */\n.mobile-profile-drawer-actions {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px 24px 24px;\n  -webkit-overflow-scrolling: touch;\n}\n\n.mobile-profile-drawer-section {\n  margin-bottom: 24px;\n}\n\n.mobile-profile-drawer-section:last-child {\n  margin-bottom: 0;\n}\n\n.mobile-profile-drawer-section-title {\n  font-size: 12px;\n  font-weight: 600;\n  color: var(--preview-text-muted);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 12px;\n  padding: 0 4px;\n}\n\n.mobile-profile-drawer-action {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px 16px;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin-bottom: 8px;\n}\n\n.mobile-profile-drawer-action:hover {\n  background: var(--item-hover-bg);\n  transform: translateX(2px);\n}\n\n.mobile-profile-drawer-action.destructive:hover {\n  background: rgba(239, 68, 68, 0.05);\n}\n\n.mobile-profile-drawer-action-icon {\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  flex-shrink: 0;\n}\n\n.mobile-profile-drawer-action-text {\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--preview-text);\n  flex: 1;\n}\n\n.mobile-profile-drawer-action.destructive .mobile-profile-drawer-action-text {\n  color: #ef4444;\n} ", "/*\n * Light Theme for Curia Community Navigation\n * Default theme with clean, bright appearance\n * Extended scope to include mobile components\n */\n\n.curia-community-nav,\n.curia-mobile-bottom-nav,\n.mobile-community-picker-overlay,\n.mobile-profile-drawer-overlay,\n.light.community-preview {\n  --sidebar-bg-from: #f8fafc;\n  --sidebar-bg-to: #f1f5f9;\n  --sidebar-border: rgba(148, 163, 184, 0.2);\n  --item-bg: rgba(255, 255, 255, 0.8);\n  --item-hover-bg: rgba(255, 255, 255, 0.95);\n  --item-active-bg: rgba(59, 130, 246, 0.1);\n  --item-active-border: rgba(59, 130, 246, 0.3);\n  --item-active-shadow: rgba(59, 130, 246, 0.2);\n  --preview-bg: rgba(255, 255, 255, 0.95);\n  --preview-border: rgba(148, 163, 184, 0.2);\n  --preview-text: #1f2937;\n  --preview-text-muted: #6b7280;\n} ", "/*\n * Dark Theme for Curia Community Navigation\n * Modern dark appearance with blue accents\n * Extended scope to include mobile components\n */\n\n[data-theme=\"dark\"] .curia-community-nav,\n[data-theme=\"dark\"] .curia-mobile-bottom-nav,\n[data-theme=\"dark\"] .mobile-community-picker-overlay,\n[data-theme=\"dark\"] .mobile-profile-drawer-overlay,\n.dark .curia-community-nav,\n.dark .curia-mobile-bottom-nav,\n.dark .mobile-community-picker-overlay,\n.dark .mobile-profile-drawer-overlay,\n.dark.community-preview {\n  --sidebar-bg-from: #1e293b;\n  --sidebar-bg-to: #0f172a;\n  --sidebar-border: rgba(71, 85, 105, 0.3);\n  --item-bg: rgba(30, 41, 59, 0.8);\n  --item-hover-bg: rgba(30, 41, 59, 0.95);\n  --item-active-bg: rgba(59, 130, 246, 0.2);\n  --item-active-border: rgba(59, 130, 246, 0.4);\n  --item-active-shadow: rgba(59, 130, 246, 0.3);\n  --preview-bg: rgba(30, 41, 59, 0.95);\n  --preview-border: rgba(71, 85, 105, 0.3);\n  --preview-text: #f1f5f9;\n  --preview-text-muted: #94a3b8;\n} ", "/**\n * Main styling module for Curia embed components\n * Handles CSS injection and provides utility functions\n */\n\nexport * from './utils';\n\n// Import CSS files as text strings (esbuild loader: '.css': 'text')\n// CRITICAL: Reset must come first to establish complete CSS isolation\nimport resetCSS from './reset.css';\nimport stylesCSS from './styles.css';\nimport sidebarCSS from './sidebar.css';\nimport previewCSS from './preview.css';\nimport profileMenuCSS from './profile-menu.css';\nimport mobileCSS from './mobile.css';\nimport lightThemeCSS from './themes/light.css';\nimport darkThemeCSS from './themes/dark.css';\n\n/**\n * Get all CSS content as a string\n */\nfunction getCSSContent(): string {\n  // Combine all CSS files in the correct order\n  // Reset MUST be first to ensure complete isolation\n  return [\n    resetCSS,       // \uD83C\uDFAF CRITICAL: Complete CSS reset and isolation - MUST BE FIRST\n    stylesCSS,      // Main CSS entry point\n    sidebarCSS,     // Base sidebar component styles\n    previewCSS,     // Community preview styles\n    profileMenuCSS, // Profile menu styles\n    mobileCSS,      // Mobile responsive styles\n    lightThemeCSS,  // Light theme (default)\n    darkThemeCSS    // Dark theme overrides\n  ].join('\\n\\n');\n}\n\n/**\n * Inject all CSS styles into the document head\n * Should be called once when initializing the embed\n */\nexport function injectStyles(): void {\n  // Check if styles are already injected\n  const existingStyles = document.head.querySelector('#curia-embed-styles');\n  if (existingStyles) {\n    return; // Already injected\n  }\n\n  const styleElement = document.createElement('style');\n  styleElement.id = 'curia-embed-styles';\n  styleElement.textContent = getCSSContent();\n  document.head.appendChild(styleElement);\n}\n\n/**\n * Remove injected styles from document\n * Useful for cleanup\n */\nexport function removeStyles(): void {\n  const existingStyles = document.head.querySelector('#curia-embed-styles');\n  if (existingStyles) {\n    existingStyles.remove();\n  }\n} ", "/**\n * CommunityItem Component\n * Renders individual community icons in the sidebar\n * \n * Extracted from InternalPluginHost.ts for better maintainability\n * Handles: logo display, gradient fallbacks, role badges, hover effects\n */\n\nimport { getGradientClass, getGradientStyle, getIconForCommunity } from '../../styling';\n\nexport interface UserCommunityMembership {\n  id: string;\n  name: string;\n  logoUrl: string | null;\n  userRole: 'member' | 'moderator' | 'admin' | 'owner';\n  isMember: boolean;\n}\n\nexport interface CommunityItemOptions {\n  community: UserCommunityMembership;\n  isActive: boolean;\n  hasIframeLoaded?: boolean; // Simple flag: true = iframe in memory, false = not loaded\n  onHover?: (community: UserCommunityMembership, element: HTMLElement) => void;\n  onHoverEnd?: () => void;\n  onClick?: (community: UserCommunityMembership) => void;\n}\n\nexport class CommunityItem {\n  private community: UserCommunityMembership;\n  private isActive: boolean;\n  private options: CommunityItemOptions;\n  private element: HTMLElement | null = null;\n  private hoverTimeout: NodeJS.Timeout | null = null;\n\n  constructor(options: CommunityItemOptions) {\n    this.community = options.community;\n    this.isActive = options.isActive;\n    this.options = options;\n  }\n\n  render(): HTMLElement {\n    const item = document.createElement('div');\n    item.className = `community-item ${this.isActive ? 'active' : ''}`;\n\n    // Create the beautiful background (logo or gradient + emoji)\n    if (this.community.logoUrl) {\n      this.addCommunityLogo(item);\n    } else {\n      this.addGradientFallback(item);\n    }\n\n    // Enhanced hover effects\n    this.addHoverEffects(item);\n\n    // Simple online indicator (tiny green dot if iframe loaded)\n    this.addOnlineIndicator(item);\n\n    // Click handler\n    if (this.options.onClick) {\n      item.addEventListener('click', () => {\n        this.options.onClick?.(this.community);\n      });\n    }\n\n    this.element = item;\n    return item;\n  }\n\n  private addCommunityLogo(item: HTMLElement): void {\n    const logo = document.createElement('img');\n    logo.src = this.community.logoUrl!;\n    logo.alt = this.community.name;\n    logo.className = 'community-icon-image';\n    \n    logo.onerror = () => {\n      // Fallback to gradient + emoji if image fails\n      item.removeChild(logo);\n      this.addGradientFallback(item);\n    };\n    \n    item.appendChild(logo);\n  }\n\n  private addGradientFallback(item: HTMLElement): void {\n    // Generate gradient class and icon using same logic as API\n    const gradientClass = getGradientClass(this.community.name);\n    const icon = getIconForCommunity(this.community.name);\n    \n    // Set gradient background\n    item.style.background = getGradientStyle(gradientClass);\n    \n    // Add emoji icon\n    const iconSpan = document.createElement('span');\n    iconSpan.textContent = icon;\n    iconSpan.className = 'community-icon-emoji';\n    item.appendChild(iconSpan);\n  }\n\n\n\n  private addHoverEffects(item: HTMLElement): void {\n    item.addEventListener('mouseenter', () => {\n      // Show preview card after slight delay (but not for active community)\n      if (!this.isActive && this.options.onHover) {\n        this.hoverTimeout = setTimeout(() => {\n          this.options.onHover?.(this.community, item);\n        }, 500);\n      }\n    });\n\n    item.addEventListener('mouseleave', () => {\n      // Clear timeout\n      if (this.hoverTimeout) {\n        clearTimeout(this.hoverTimeout);\n        this.hoverTimeout = null;\n      }\n      \n      // Notify parent about hover end\n      this.options.onHoverEnd?.();\n    });\n  }\n\n  private addOnlineIndicator(item: HTMLElement): void {\n    // Only show indicator if iframe is loaded\n    if (!this.options.hasIframeLoaded) {\n      return;\n    }\n\n    console.log(`[MULTI-IFRAME] [OnlineIndicator] Adding online dot for community: ${this.community.name}`);\n\n    // \u2705 Ensure parent has proper stacking context\n    item.style.position = 'relative';\n    item.style.zIndex = '10';\n    item.style.overflow = 'visible';\n\n    const indicator = document.createElement('div');\n    indicator.className = 'online-indicator';\n    indicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: -8px;\n      width: 16px;\n      height: 16px;\n      background: #10b981;\n      border: 2px solid var(--sidebar-bg-from, #f8fafc);\n      border-radius: 50%;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n      z-index: 20;\n      overflow: visible;\n    `;\n    \n    item.appendChild(indicator);\n  }\n\n  /**\n   * Update the active state of this community item\n   */\n  updateActiveState(isActive: boolean): void {\n    if (this.isActive === isActive) return;\n    \n    this.isActive = isActive;\n    \n    if (this.element) {\n      if (isActive) {\n        this.element.classList.add('active');\n      } else {\n        this.element.classList.remove('active');\n      }\n    }\n  }\n\n  /**\n   * Cleanup method for removing event listeners\n   */\n  destroy(): void {\n    if (this.hoverTimeout) {\n      clearTimeout(this.hoverTimeout);\n      this.hoverTimeout = null;\n    }\n    \n    this.element = null;\n  }\n} ", "/**\n * CommunityPreview Component\n * Handles hover preview cards for community items\n * \n * Extracted from InternalPluginHost.ts for better maintainability\n * Uses portal pattern for document-level rendering to avoid z-index issues\n */\n\nimport { getGradientClass, getGradientStyle, getIconForCommunity } from '../../styling';\nimport { UserCommunityMembership } from './CommunityItem';\n\nexport class CommunityPreview {\n  private community: UserCommunityMembership;\n  private triggerElement: HTMLElement;\n  private previewElement: HTMLElement | null = null;\n\n  constructor(community: UserCommunityMembership, triggerElement: HTMLElement) {\n    this.community = community;\n    this.triggerElement = triggerElement;\n  }\n\n  show(): HTMLElement {\n    const preview = document.createElement('div');\n    preview.className = 'community-preview';\n    \n    // \uD83C\uDFAF THEME FIX: Apply current theme class to preview card for CSS variable access\n    if (document.documentElement.classList.contains('dark')) {\n      preview.classList.add('dark');\n    } else {\n      preview.classList.add('light');\n    }\n    \n    // Position the preview card relative to trigger element\n    this.positionPreview(preview);\n    \n    // Generate same visual styling as the main icon\n    const gradientClass = getGradientClass(this.community.name);\n    const icon = getIconForCommunity(this.community.name);\n    \n    preview.innerHTML = `\n      <div class=\"community-preview-header\">\n        <div class=\"community-preview-icon\" style=\"background: ${getGradientStyle(gradientClass)}\">\n          ${this.community.logoUrl ? \n            `<img src=\"${this.community.logoUrl}\" alt=\"${this.community.name}\" style=\"width: 100%; height: 100%; object-fit: cover; border-radius: inherit;\">` :\n            `<span style=\"font-size: 18px;\">${icon}</span>`\n          }\n        </div>\n        <div class=\"community-preview-info\">\n          <h4>${this.community.name}</h4>\n          <p>Role: ${this.formatRole(this.community.userRole)}</p>\n        </div>\n      </div>\n      \n      <div class=\"community-preview-stats\">\n        <div class=\"community-preview-stat\">\n          <span>\uD83D\uDC65</span>\n          <span>Community</span>\n        </div>\n        <div class=\"community-preview-stat\">\n          <span>\u2728</span>\n          <span>${this.community.isMember ? 'Member' : 'Visitor'}</span>\n        </div>\n      </div>\n    `;\n\n    // Portal pattern - append to document.body to escape stacking context\n    document.body.appendChild(preview);\n    \n    // Trigger animation\n    requestAnimationFrame(() => {\n      preview.classList.add('show');\n    });\n\n    this.previewElement = preview;\n    return preview;\n  }\n\n  hide(): void {\n    if (this.previewElement) {\n      this.previewElement.classList.remove('show');\n      \n      // Clean up after animation\n      setTimeout(() => {\n        if (this.previewElement && document.body.contains(this.previewElement)) {\n          document.body.removeChild(this.previewElement);\n        }\n        this.previewElement = null;\n      }, 200);\n    }\n  }\n\n  private positionPreview(preview: HTMLElement): void {\n    // Get absolute position of trigger button\n    const rect = this.triggerElement.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const previewWidth = 280; // max-width from CSS\n    const spacing = 16; // spacing from trigger\n\n    // Position preview to the right of trigger with some spacing\n    let left = rect.right + spacing;\n    let top = rect.top;\n\n    // Adjust if preview would go off-screen horizontally\n    if (left + previewWidth > viewportWidth - spacing) {\n      // Position to the left of trigger instead\n      left = rect.left - previewWidth - spacing;\n    }\n\n    // Adjust if preview would go off-screen vertically\n    const previewHeight = 120; // estimated height\n    if (top + previewHeight > viewportHeight - spacing) {\n      top = viewportHeight - previewHeight - spacing;\n    }\n\n    // Ensure preview doesn't go above viewport\n    if (top < spacing) {\n      top = spacing;\n    }\n\n    preview.style.left = `${Math.max(spacing, left)}px`;\n    preview.style.top = `${Math.max(spacing, top)}px`;\n  }\n\n  private formatRole(role: string): string {\n    switch (role) {\n      case 'owner': return '\uD83D\uDC51 Owner';\n      case 'admin': return '\u26A1 Admin';\n      case 'moderator': return '\uD83D\uDEE1\uFE0F Moderator';\n      case 'member': return '\uD83D\uDC64 Member';\n      default: return '\uD83D\uDC64 Member';\n    }\n  }\n}\n\n/**\n * Preview Manager - Handles global preview state\n * Ensures only one preview is shown at a time\n */\nexport class CommunityPreviewManager {\n  private static instance: CommunityPreviewManager;\n  private currentPreview: CommunityPreview | null = null;\n\n  static getInstance(): CommunityPreviewManager {\n    if (!CommunityPreviewManager.instance) {\n      CommunityPreviewManager.instance = new CommunityPreviewManager();\n    }\n    return CommunityPreviewManager.instance;\n  }\n\n  showPreview(community: UserCommunityMembership, triggerElement: HTMLElement): void {\n    // Hide any existing preview\n    this.hidePreview();\n\n    // Create and show new preview\n    this.currentPreview = new CommunityPreview(community, triggerElement);\n    this.currentPreview.show();\n  }\n\n  hidePreview(): void {\n    if (this.currentPreview) {\n      this.currentPreview.hide();\n      this.currentPreview = null;\n    }\n  }\n} ", "/**\n * UserProfile Component\n * Renders the user profile section at the bottom of the sidebar\n * \n * Extracted from InternalPluginHost.ts for better maintainability\n * Handles: avatar display, identity indicators, profile menu interactions\n * Enhanced with SessionManager integration for multi-account support\n */\n\nimport { getGradientClass, getGradientStyle, getUserInitials, getIdentityIcon } from '../../styling';\nimport { sessionManager, SessionData } from '../../../SessionManager';\n\nexport interface UserProfile {\n  userId: string;\n  name: string;\n  profilePictureUrl: string | null;\n  identityType: 'ens' | 'universal_profile' | 'anonymous';\n  walletAddress: string | null;\n  ensDomain: string | null;\n  upAddress: string | null;\n  isAnonymous: boolean;\n}\n\nexport interface UserProfileOptions {\n  userProfile: UserProfile;\n  onMenuAction?: (action: string) => void;\n}\n\nexport class UserProfileComponent {\n  private userProfile: UserProfile;\n  private options: UserProfileOptions;\n  private element: HTMLElement | null = null;\n  private profileMenuElement: HTMLElement | null = null;\n  \n  // SessionManager integration\n  private sessionManager = sessionManager;\n  private sessionSubscription: (() => void) | null = null;\n  private allSessions: SessionData[] = [];\n\n  constructor(options: UserProfileOptions) {\n    this.userProfile = options.userProfile;\n    this.options = options;\n    \n    // Subscribe to session changes for reactive menu updates\n    this.sessionSubscription = this.sessionManager.subscribe((sessions, activeToken, activeSession) => {\n      this.allSessions = sessions;\n      this.refreshMenu();\n    });\n    \n    // Initial load of sessions\n    this.allSessions = this.sessionManager.getAllSessions();\n  }\n  \n  /**\n   * Refresh menu when sessions change\n   * \uD83C\uDFAF FIX: Enhanced logging and session data synchronization\n   */\n  private refreshMenu(): void {\n    if (this.profileMenuElement && this.profileMenuElement.classList.contains('show')) {\n      // Menu is currently open, update its content with fresh session data\n      console.log('[UserProfile] \uD83D\uDD27 Refreshing open menu with updated session data');\n      \n      // Update our session cache first\n      this.allSessions = this.sessionManager.getAllSessions();\n      console.log('[UserProfile] \uD83D\uDD27 Updated session cache, count:', this.allSessions.length);\n      \n      const headerHtml = this.createActiveSessionHeader();\n      const sessionsHtml = this.createAvailableSessions();\n      const actionsHtml = this.createMenuActions();\n      \n      this.profileMenuElement.innerHTML = headerHtml + sessionsHtml + actionsHtml;\n      \n      // Re-attach event handlers since innerHTML replaced the content\n      this.attachMenuHandlers(this.profileMenuElement);\n      \n      console.log('[UserProfile] \u2705 Menu content refreshed with correct session data');\n    } else {\n      // Menu is not open, but still update our session cache for next time\n      this.allSessions = this.sessionManager.getAllSessions();\n      console.log('[UserProfile] \uD83D\uDD27 Updated session cache (menu closed), count:', this.allSessions.length);\n    }\n  }\n\n  render(): HTMLElement {\n    const section = document.createElement('div');\n    section.className = 'user-profile-section';\n    \n    const avatar = document.createElement('div');\n    avatar.className = 'user-profile-avatar';\n\n    // Create avatar content (image or fallback)\n    if (this.userProfile.profilePictureUrl) {\n      this.addUserImage(avatar);\n    } else {\n      this.addUserAvatarFallback(avatar);\n    }\n\n    // Add identity type indicator\n    this.addIdentityIndicator(avatar);\n\n    // Profile menu interactions - click-based\n    this.setupMenuInteractions(avatar);\n\n    section.appendChild(avatar);\n    this.element = section;\n    return section;\n  }\n\n  private addUserImage(avatar: HTMLElement): void {\n    const img = document.createElement('img');\n    img.src = this.userProfile.profilePictureUrl!;\n    img.alt = this.userProfile.name;\n    img.style.cssText = `\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      border-radius: inherit;\n    `;\n    img.onerror = () => {\n      // Fallback to gradient + initials if image fails\n      avatar.removeChild(img);\n      this.addUserAvatarFallback(avatar);\n    };\n    avatar.appendChild(img);\n  }\n\n  private addUserAvatarFallback(avatar: HTMLElement): void {\n    const name = this.userProfile.name || 'User';\n    const gradientClass = getGradientClass(name);\n    \n    // Set gradient background\n    avatar.style.background = getGradientStyle(gradientClass);\n    \n    // Add initials\n    const initials = document.createElement('span');\n    initials.textContent = getUserInitials(name);\n    initials.style.cssText = `\n      color: white;\n      font-weight: 600;\n      font-size: 18px;\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Noto Sans\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\";\n    `;\n    avatar.appendChild(initials);\n  }\n\n  private addIdentityIndicator(avatar: HTMLElement): void {\n    const indicator = document.createElement('div');\n    indicator.style.cssText = `\n      position: absolute;\n      bottom: -2px;\n      right: -2px;\n      width: 18px;\n      height: 18px;\n      border: 2px solid var(--sidebar-bg-from, #f8fafc);\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 10px;\n      background: ${this.getIdentityColor()};\n    `;\n\n    indicator.textContent = getIdentityIcon(this.userProfile.identityType || 'anonymous');\n    avatar.appendChild(indicator);\n  }\n\n  private setupMenuInteractions(avatar: HTMLElement): void {\n    const showMenu = () => {\n      if (this.profileMenuElement) return; // Already open\n\n      this.profileMenuElement = this.createUserProfileMenu(avatar);\n      if (this.profileMenuElement) {\n        document.body.appendChild(this.profileMenuElement);\n        \n        requestAnimationFrame(() => {\n          this.profileMenuElement?.classList.add('show');\n        });\n      }\n    };\n\n    const hideMenu = () => {\n      if (this.profileMenuElement) {\n        this.profileMenuElement.classList.remove('show');\n        setTimeout(() => {\n          if (this.profileMenuElement && document.body.contains(this.profileMenuElement)) {\n            document.body.removeChild(this.profileMenuElement);\n          }\n          this.profileMenuElement = null;\n        }, 200);\n      }\n    };\n\n    // Click to toggle menu\n    avatar.addEventListener('click', (e) => {\n      e.stopPropagation();\n      if (this.profileMenuElement) {\n        hideMenu();\n      } else {\n        showMenu();\n      }\n    });\n\n    // Click outside to close menu\n    document.addEventListener('click', (e) => {\n      if (this.profileMenuElement && \n          !this.profileMenuElement.contains(e.target as Node) && \n          !avatar.contains(e.target as Node)) {\n        hideMenu();\n      }\n    });\n  }\n\n  private createUserProfileMenu(triggerElement: HTMLElement): HTMLElement {\n    const menu = document.createElement('div');\n    menu.className = 'user-profile-menu';\n    \n    // \uD83C\uDFAF THEME CLEANUP: No longer need manual theme detection/setting\n    // InternalPluginHost now sets document.documentElement classes properly\n    // CSS selectors will work automatically: .dark .user-profile-menu { }\n    \n    // Position menu relative to trigger element\n    this.positionMenu(menu, triggerElement);\n\n    // Build menu sections\n    const headerHtml = this.createActiveSessionHeader();\n    const sessionsHtml = this.createAvailableSessions();\n    const actionsHtml = this.createMenuActions();\n    \n    menu.innerHTML = headerHtml + sessionsHtml + actionsHtml;\n\n    // Enhanced click handlers for sessions and actions\n    this.attachMenuHandlers(menu);\n\n    return menu;\n  }\n\n  /**\n   * Create the active session header section\n   * \uD83C\uDFAF FIX: Always use SessionManager as source of truth for active session\n   */\n  private createActiveSessionHeader(): string {\n    const activeSession = this.sessionManager.getActiveSession();\n    console.log('[UserProfile] \uD83D\uDD27 Creating header for active session:', activeSession?.sessionToken, activeSession?.name);\n    \n    if (!activeSession) {\n      console.warn('[UserProfile] \u26A0\uFE0F No active session found, falling back to userProfile data');\n      // Fallback to static userProfile if no active session\n      const userName = this.userProfile.name || 'Anonymous User';\n      const hasProfileImage = !!this.userProfile.profilePictureUrl;\n      const gradientClass = this.getGradientClass(userName);\n      const gradientStyle = this.getGradientStyle(gradientClass);\n      \n      return `\n        <div class=\"profile-menu-header\">\n          <div class=\"profile-menu-avatar\" style=\"background: ${hasProfileImage ? 'transparent' : gradientStyle}\">\n            ${hasProfileImage ? \n              `<img src=\"${this.userProfile.profilePictureUrl}\" alt=\"${userName}\" style=\"width: 100%; height: 100%; object-fit: cover; border-radius: inherit;\">` :\n              `<span style=\"color: white; font-weight: 600; font-size: 18px;\">${this.getUserInitials(userName)}</span>`\n            }\n          </div>\n          <div class=\"profile-menu-info\">\n            <h4>${userName}</h4>\n            <p>${this.getIdentityLabel()} \u2022 Active (Fallback)</p>\n          </div>\n        </div>\n      `;\n    }\n    \n    // Use active session data - this should always be the source of truth\n    const userName = activeSession.name || 'Anonymous User';\n    const hasProfileImage = !!activeSession.profileImageUrl;\n    const gradientClass = this.getGradientClass(userName);\n    const gradientStyle = this.getGradientStyle(gradientClass);\n    \n    console.log('[UserProfile] \u2705 Using active session data for header:', {\n      token: activeSession.sessionToken,\n      name: userName,\n      identityType: activeSession.identityType,\n      hasImage: hasProfileImage\n    });\n    \n    return `\n      <div class=\"profile-menu-header\">\n        <div class=\"profile-menu-avatar\" style=\"background: ${hasProfileImage ? 'transparent' : gradientStyle}\">\n          ${hasProfileImage ? \n            `<img src=\"${activeSession.profileImageUrl}\" alt=\"${userName}\" style=\"width: 100%; height: 100%; object-fit: cover; border-radius: inherit;\">` :\n            `<span style=\"color: white; font-weight: 600; font-size: 18px;\">${this.getUserInitials(userName)}</span>`\n          }\n        </div>\n        <div class=\"profile-menu-info\">\n          <h4>${userName}</h4>\n          <p>${this.getIdentityTypeLabel(activeSession.identityType)} \u2022 Active</p>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create the available sessions section\n   * \uD83C\uDFAF FIX: Ensure proper filtering and deduplication with active session priority\n   */\n  private createAvailableSessions(): string {\n    const activeToken = this.sessionManager.getActiveToken();\n    const activeSession = this.sessionManager.getActiveSession();\n    console.log('[UserProfile] \uD83D\uDD27 Creating available sessions list (active token:', activeToken, ')');\n    console.log('[UserProfile] \uD83D\uDD27 All sessions count:', this.allSessions.length);\n    \n    // 1. Filter out active session (it's shown in header)\n    let inactiveSessions = this.allSessions.filter(session => {\n      const isActive = session.sessionToken === activeToken;\n      if (isActive) {\n        console.log('[UserProfile] \uD83D\uDD27 Filtering out active session:', session.sessionToken, session.name);\n      }\n      return !isActive;\n    });\n    \n    console.log('[UserProfile] \uD83D\uDD27 Inactive sessions count:', inactiveSessions.length);\n    \n    // 2. \uD83C\uDFAF NEW: If active session is anonymous, hide ALL other anonymous sessions\n    if (activeSession?.identityType === 'anonymous') {\n      const beforeCount = inactiveSessions.length;\n      inactiveSessions = inactiveSessions.filter(session => {\n        const isAnonymous = session.identityType === 'anonymous';\n        if (isAnonymous) {\n          console.log('[UserProfile] \uD83C\uDFAF Hiding anonymous session (active is anonymous):', session.sessionToken);\n        }\n        return !isAnonymous;\n      });\n      console.log('[UserProfile] \uD83C\uDFAF Anonymous session filtering: removed', beforeCount - inactiveSessions.length, 'sessions');\n    }\n    \n    // 3. \uD83C\uDFAF Deduplicate by actual identity (display-only filtering)\n    // Note: deduplication now properly handles active session priority\n    const uniqueSessions = this.deduplicateSessionsByIdentity(inactiveSessions);\n    \n    console.log('[UserProfile] \uD83D\uDD27 Unique sessions after deduplication:', uniqueSessions.length);\n    \n    if (uniqueSessions.length === 0) {\n      console.log('[UserProfile] \uD83D\uDD27 No available sessions to show');\n      return ''; // No available sessions section\n    }\n    \n    const sessionsHtml = uniqueSessions.map(session => {\n      const sessionName = session.name || 'Unknown User';\n      const hasImage = !!session.profileImageUrl;\n      const gradientClass = this.getGradientClass(sessionName);\n      const gradientStyle = this.getGradientStyle(gradientClass);\n      \n      return `\n        <div class=\"profile-menu-session\" data-action=\"switch-session\" data-token=\"${session.sessionToken}\">\n          <div class=\"profile-session-avatar\" style=\"background: ${hasImage ? 'transparent' : gradientStyle}\">\n            ${hasImage ? \n              `<img src=\"${session.profileImageUrl}\" alt=\"${sessionName}\" style=\"width: 100%; height: 100%; object-fit: cover; border-radius: inherit;\">` :\n              `<span style=\"color: white; font-weight: 600; font-size: 12px;\">${this.getUserInitials(sessionName)}</span>`\n            }\n          </div>\n          <div class=\"profile-session-info\">\n            <div class=\"profile-session-name\">${sessionName}</div>\n            <div class=\"profile-session-type\">${this.getIdentityTypeLabel(session.identityType)}</div>\n          </div>\n        </div>\n      `;\n    }).join('');\n    \n    return `\n      <div class=\"profile-menu-sessions\">\n        <div class=\"profile-menu-section-label\">Available Accounts</div>\n        ${sessionsHtml}\n      </div>\n    `;\n  }\n\n  /**\n   * Get unique identity key for session deduplication\n   * \uD83C\uDFAF FIX: Anonymous sessions are treated as one identity (no wallet differentiation)\n   */\n  private getIdentityKey(session: SessionData): string {\n    switch (session.identityType) {\n      case 'ens':\n        return `ens:${session.ensName}`;           // e.g., \"ens:vitalik.eth\" (unique per ENS name)\n      case 'universal_profile':\n        return `up:${session.upAddress}`;          // e.g., \"up:0x123...\" (unique per UP address)\n      case 'anonymous':\n        return 'anonymous';                        // \uD83C\uDFAF ALL anonymous sessions = same identity\n      default:\n        return `user:${session.userId}`;           // Fallback to userId\n    }\n  }\n\n  /**\n   * Deduplicate sessions by actual identity, keeping most recent for each unique identity\n   * This is display-only filtering - all sessions remain in storage\n   * \uD83C\uDFAF FIX: Prioritize currently active session over lastAccessedAt\n   */\n  private deduplicateSessionsByIdentity(sessions: SessionData[]): SessionData[] {\n    const identityMap = new Map<string, SessionData>();\n    const activeToken = this.sessionManager.getActiveToken();\n    \n    for (const session of sessions) {\n      const identityKey = this.getIdentityKey(session);\n      const existing = identityMap.get(identityKey);\n      \n      if (!existing) {\n        // First session for this identity\n        identityMap.set(identityKey, session);\n      } else {\n        // Decide which session to keep for this identity\n        let shouldReplace = false;\n        \n        // \uD83C\uDFAF PRIORITY 1: Always keep the currently active session\n        if (session.sessionToken === activeToken) {\n          shouldReplace = true;\n          console.log('[UserProfile] \uD83C\uDFAF Keeping active session for identity:', identityKey, session.sessionToken);\n        } \n        // \uD83C\uDFAF PRIORITY 2: Don't replace if existing is the active session\n        else if (existing.sessionToken === activeToken) {\n          shouldReplace = false;\n          console.log('[UserProfile] \uD83C\uDFAF Preserving active session for identity:', identityKey, existing.sessionToken);\n        }\n        // \uD83C\uDFAF PRIORITY 3: Fall back to lastAccessedAt for non-active sessions\n        else if (session.lastAccessedAt > existing.lastAccessedAt) {\n          shouldReplace = true;\n        }\n        \n        if (shouldReplace) {\n          identityMap.set(identityKey, session);\n        }\n      }\n    }\n    \n    return Array.from(identityMap.values());\n  }\n\n  // \uD83C\uDFAF REMOVED detectDarkTheme() method - no longer needed!\n  // InternalPluginHost now handles document theme classes properly\n  // CSS selectors automatically work: .dark .user-profile-menu { }\n\n  /**\n   * Create the menu actions section  \n   */\n  private createMenuActions(): string {\n    return `\n      <div class=\"profile-menu-actions\">\n        <button class=\"profile-menu-action\" data-action=\"add-session\">\n          <div class=\"profile-menu-action-icon\">\u2795</div>\n          <span>Add Another Account</span>\n        </button>\n        <button class=\"profile-menu-action\" data-action=\"sign-out\">\n          <div class=\"profile-menu-action-icon\">\uD83D\uDEAA</div>\n          <span>Sign Out</span>\n        </button>\n      </div>\n    `;\n  }\n\n  /**\n   * Get identity type label for display\n   */\n  private getIdentityTypeLabel(identityType: 'ens' | 'universal_profile' | 'anonymous'): string {\n    switch (identityType) {\n      case 'ens':\n        return 'ENS';\n      case 'universal_profile':\n        return 'Universal Profile';\n      case 'anonymous':\n        return 'Guest';\n      default:\n        return 'User';\n    }\n  }\n\n  /**\n   * Attach enhanced click handlers for menu interactions\n   */\n  private attachMenuHandlers(menu: HTMLElement): void {\n    menu.addEventListener('click', (e) => {\n      const target = e.target as HTMLElement;\n      const actionElement = target.closest('[data-action]') as HTMLElement;\n      \n      if (!actionElement) return;\n      \n      const action = actionElement.getAttribute('data-action');\n      const token = actionElement.getAttribute('data-token');\n      \n      if (action === 'switch-session' && token) {\n        // Handle session switching directly\n        this.handleSessionSwitch(token);\n      } else if (action && this.options.onMenuAction) {\n        // Handle other actions through parent callback\n        this.options.onMenuAction(action);\n      }\n    });\n  }\n\n  /**\n   * Handle session switching\n   * \uD83D\uDE80 FIX: Delegate to parent via callback instead of direct SessionManager call\n   */\n  private async handleSessionSwitch(sessionToken: string): Promise<void> {\n    try {\n      console.log('[UserProfileComponent] Delegating session switch to parent:', sessionToken);\n      \n      // Delegate to parent using existing callback pattern with token encoded in action\n      if (this.options.onMenuAction) {\n        this.options.onMenuAction(`switch-session:${sessionToken}`);\n      } else {\n        console.warn('[UserProfileComponent] No onMenuAction callback available for session switch');\n      }\n      \n      console.log('[UserProfileComponent] Session switch delegated successfully');\n    } catch (error) {\n      console.error('[UserProfileComponent] Failed to delegate session switch:', error);\n    }\n  }\n\n  private positionMenu(menu: HTMLElement, triggerElement: HTMLElement): void {\n    const rect = triggerElement.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const menuWidth = 320;\n    const spacing = 8;\n    \n    // Position menu ABOVE the button using BOTTOM positioning\n    let left = rect.right + spacing;\n    let bottom = viewportHeight - rect.top + spacing;\n\n    // Adjust if menu would go off-screen horizontally\n    if (left + menuWidth > viewportWidth - spacing) {\n      left = rect.left - menuWidth - spacing;\n    }\n    \n    if (left < spacing) {\n      left = spacing;\n    }\n\n    menu.style.left = `${left}px`;\n    menu.style.bottom = `${bottom}px`;\n  }\n\n  private getIdentityColor(): string {\n    switch (this.userProfile.identityType) {\n      case 'ens': return 'linear-gradient(135deg, #3b82f6, #1d4ed8)';\n      case 'universal_profile': return 'linear-gradient(135deg, #ec4899, #be185d)';\n      case 'anonymous': return 'linear-gradient(135deg, #6b7280, #4b5563)';\n      default: return 'linear-gradient(135deg, #6b7280, #4b5563)';\n    }\n  }\n\n  private getIdentityLabel(): string {\n    switch (this.userProfile.identityType) {\n      case 'ens':\n        return this.userProfile.ensDomain ? `ENS: ${this.userProfile.ensDomain}` : 'ENS Domain';\n      case 'universal_profile':\n        return this.userProfile.upAddress ? `UP: ${this.userProfile.upAddress.slice(0, 6)}...${this.userProfile.upAddress.slice(-4)}` : 'Universal Profile';\n      case 'anonymous':\n        return 'Anonymous Session';\n      default:\n        return 'User Account';\n    }\n  }\n\n  private getGradientClass(name: string): string {\n    const gradients = [\n      'gradient-pink-purple',\n      'gradient-blue-cyan', \n      'gradient-emerald-teal',\n      'gradient-orange-pink',\n      'gradient-purple-blue',\n      'gradient-cyan-emerald'\n    ];\n    \n    const hash = name.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    return gradients[hash % gradients.length];\n  }\n\n  private getGradientStyle(gradientClass: string): string {\n    const gradientMap: Record<string, string> = {\n      'gradient-pink-purple': 'linear-gradient(135deg, #ec4899, #8b5cf6)',\n      'gradient-blue-cyan': 'linear-gradient(135deg, #3b82f6, #06b6d4)',\n      'gradient-emerald-teal': 'linear-gradient(135deg, #10b981, #14b8a6)',\n      'gradient-orange-pink': 'linear-gradient(135deg, #f97316, #ec4899)',\n      'gradient-purple-blue': 'linear-gradient(135deg, #8b5cf6, #3b82f6)',\n      'gradient-cyan-emerald': 'linear-gradient(135deg, #06b6d4, #10b981)'\n    };\n    \n    return gradientMap[gradientClass] || gradientMap['gradient-blue-cyan'];\n  }\n\n  private getUserInitials(name: string): string {\n    return name\n      .split(' ')\n      .map(word => word.charAt(0))\n      .join('')\n      .substring(0, 2)\n      .toUpperCase();\n  }\n\n  /**\n   * Cleanup method for removing event listeners and DOM elements\n   */\n  destroy(): void {\n    // Cleanup session subscription\n    if (this.sessionSubscription) {\n      this.sessionSubscription();\n      this.sessionSubscription = null;\n    }\n    \n    // Cleanup DOM elements\n    if (this.profileMenuElement) {\n      this.profileMenuElement.remove();\n      this.profileMenuElement = null;\n    }\n    this.element = null;\n  }\n} ", "/**\n * MobileBottomNav Component\n * Bottom navigation bar for mobile devices\n * \n * Displays burger menu + community indicator, messages stub, notifications stub, and profile menu\n */\n\nimport { UserCommunityMembership } from '../sidebar/CommunityItem';\nimport { UserProfile } from '../profile/UserProfile';\nimport { getGradientStyle, getGradientClass, getIconForCommunity, getIconHTML } from '../../styling';\nimport { MessageRouter } from '../../services/messaging/MessageRouter';\n\nexport interface MobileBottomNavOptions {\n  communities: UserCommunityMembership[];\n  currentCommunityId: string;\n  userProfile: UserProfile;\n  onCommunityMenuClick: () => void;\n  onProfileMenuClick: () => void;\n  messageRouter?: MessageRouter;\n}\n\nexport class MobileBottomNav {\n  private communities: UserCommunityMembership[];\n  private currentCommunityId: string;\n  private userProfile: UserProfile;\n  private options: MobileBottomNavOptions;\n  private element: HTMLElement | null = null;\n  private messageRouter: MessageRouter | null = null;  // \uD83C\uDD95 NEW - MessageRouter for mobile actions\n\n  constructor(options: MobileBottomNavOptions) {\n    this.communities = options.communities;\n    this.currentCommunityId = options.currentCommunityId;\n    this.userProfile = options.userProfile;\n    this.options = options;\n    this.messageRouter = options.messageRouter || null;  // \uD83C\uDD95 NEW - Store MessageRouter reference\n  }\n\n  render(): HTMLElement {\n    const bottomNav = document.createElement('div');\n    bottomNav.className = 'curia-mobile-bottom-nav';\n\n    // 1. Community burger menu (left)\n    const communitySection = this.renderCommunityBurger();\n    bottomNav.appendChild(communitySection);\n\n    // 2. Search stub (center-left)\n    const searchSection = this.renderSearchStub();\n    bottomNav.appendChild(searchSection);\n\n    // 3. Messages stub (center)\n    const messagesSection = this.renderMessagesStub();\n    bottomNav.appendChild(messagesSection);\n\n    // 4. Notifications stub (center-right)\n    const notificationsSection = this.renderNotificationsStub();\n    bottomNav.appendChild(notificationsSection);\n\n    // 5. Profile menu (right)\n    const profileSection = this.renderProfileMenu();\n    bottomNav.appendChild(profileSection);\n\n    this.element = bottomNav;\n    return bottomNav;\n  }\n\n  private renderCommunityBurger(): HTMLElement {\n    const currentCommunity = this.communities.find(c => c.id === this.currentCommunityId);\n    \n    const section = document.createElement('div');\n    section.className = 'mobile-nav-section';\n    \n    const burger = document.createElement('div');\n    burger.className = 'mobile-community-burger';\n    \n    // Expand/collapse icon (more cohesive than hamburger)\n    const burgerIcon = document.createElement('div');\n    burgerIcon.className = 'mobile-burger-icon';\n    burgerIcon.innerHTML = '\u2303'; // Up chevron - suggests expandable menu\n    \n    // Community indicator (small version of current community)\n    const indicator = document.createElement('div');\n    indicator.className = 'mobile-community-indicator';\n    \n    if (currentCommunity?.logoUrl) {\n      const img = document.createElement('img');\n      img.src = currentCommunity.logoUrl;\n      img.alt = currentCommunity.name;\n      img.style.cssText = `\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        border-radius: inherit;\n      `;\n      indicator.appendChild(img);\n    } else if (currentCommunity) {\n      // Gradient fallback\n      const gradientClass = getGradientClass(currentCommunity.name);\n      indicator.style.background = getGradientStyle(gradientClass);\n      \n      const icon = document.createElement('span');\n      icon.textContent = getIconForCommunity(currentCommunity.name);\n      indicator.appendChild(icon);\n    }\n    \n    burger.appendChild(burgerIcon);\n    burger.appendChild(indicator);\n    section.appendChild(burger);\n    \n    // Click handler to open community picker\n    section.addEventListener('click', () => {\n      this.options.onCommunityMenuClick();\n    });\n    \n    return section;\n  }\n\n  private renderSearchStub(): HTMLElement {\n    const section = document.createElement('div');\n    section.className = 'mobile-nav-section'; // \uD83C\uDD95 REMOVED 'inactive' - make it functional\n    \n    const icon = document.createElement('div');\n    icon.className = 'mobile-stub-icon';\n    icon.innerHTML = getIconHTML('search', { size: 20 }); // Beautiful Lucide search icon\n    \n    section.appendChild(icon);\n    \n    // \uD83C\uDD95 NEW - Add touch-friendly event handlers for mobile\n    const handleSearchAction = async (event: Event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      if (!this.messageRouter) {\n        console.warn('[MobileBottomNav] Search clicked but no MessageRouter available');\n        return;\n      }\n      \n      try {\n        console.log('[MobileBottomNav] Mobile search triggered');\n        this.messageRouter.sendSidebarAction('search');\n      } catch (error) {\n        console.error('[MobileBottomNav] Failed to execute search action:', error);\n      }\n    };\n    \n    // Add both touch and click events for maximum compatibility\n    section.addEventListener('touchstart', handleSearchAction);\n    section.addEventListener('click', handleSearchAction);\n    \n    return section;\n  }\n\n  private renderMessagesStub(): HTMLElement {\n    const section = document.createElement('div');\n    section.className = 'mobile-nav-section'; // \uD83C\uDD95 REMOVED 'inactive' - make it functional\n    \n    const icon = document.createElement('div');\n    icon.className = 'mobile-stub-icon';\n    icon.innerHTML = getIconHTML('messages', { size: 20 }); // Beautiful Lucide message square icon\n    \n    section.appendChild(icon);\n    \n    // \uD83C\uDD95 NEW - Add touch-friendly event handlers for mobile\n    const handleMessagesAction = async (event: Event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      if (!this.messageRouter) {\n        console.warn('[MobileBottomNav] Messages clicked but no MessageRouter available');\n        return;\n      }\n      \n      try {\n        console.log('[MobileBottomNav] Mobile messages triggered');\n        this.messageRouter.sendSidebarAction('messages');\n      } catch (error) {\n        console.error('[MobileBottomNav] Failed to execute messages action:', error);\n      }\n    };\n    \n    // Add both touch and click events for maximum compatibility\n    section.addEventListener('touchstart', handleMessagesAction);\n    section.addEventListener('click', handleMessagesAction);\n    \n    return section;\n  }\n\n  private renderNotificationsStub(): HTMLElement {\n    const section = document.createElement('div');\n    section.className = 'mobile-nav-section'; // \uD83C\uDD95 REMOVED 'inactive' - make it functional\n    \n    const icon = document.createElement('div');\n    icon.className = 'mobile-stub-icon';\n    icon.innerHTML = getIconHTML('notifications', { size: 20 }); // Beautiful Lucide bell icon\n    \n    section.appendChild(icon);\n    \n    // \uD83C\uDD95 NEW - Add touch-friendly event handlers for mobile\n    const handleNotificationsAction = async (event: Event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      if (!this.messageRouter) {\n        console.warn('[MobileBottomNav] Notifications clicked but no MessageRouter available');\n        return;\n      }\n      \n      try {\n        console.log('[MobileBottomNav] Mobile notifications triggered');\n        this.messageRouter.sendSidebarAction('notifications');\n      } catch (error) {\n        console.error('[MobileBottomNav] Failed to execute notifications action:', error);\n      }\n    };\n    \n    // Add both touch and click events for maximum compatibility\n    section.addEventListener('touchstart', handleNotificationsAction);\n    section.addEventListener('click', handleNotificationsAction);\n    \n    return section;\n  }\n\n  private renderProfileMenu(): HTMLElement {\n    const section = document.createElement('div');\n    section.className = 'mobile-nav-section';\n    \n    const profileSection = document.createElement('div');\n    profileSection.className = 'mobile-profile-section';\n    \n    // Profile avatar\n    const avatar = document.createElement('div');\n    avatar.className = 'mobile-profile-avatar';\n    \n    if (this.userProfile.profilePictureUrl) {\n      const img = document.createElement('img');\n      img.src = this.userProfile.profilePictureUrl;\n      img.alt = this.userProfile.name;\n      img.style.cssText = `\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        border-radius: inherit;\n      `;\n      avatar.appendChild(img);\n    } else {\n      // Gradient fallback with initials\n      const name = this.userProfile.name || 'User';\n      const gradientClass = getGradientClass(name);\n      avatar.style.background = getGradientStyle(gradientClass);\n      \n      const initials = document.createElement('span');\n      initials.textContent = this.getUserInitials(name);\n      initials.style.cssText = `\n        color: white;\n        font-weight: 600;\n        font-size: 12px;\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Noto Sans\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\";\n      `;\n      avatar.appendChild(initials);\n    }\n    \n    profileSection.appendChild(avatar);\n    section.appendChild(profileSection);\n    \n    // Click handler for profile menu\n    section.addEventListener('click', () => {\n      this.options.onProfileMenuClick();\n    });\n    \n    return section;\n  }\n\n  private getUserInitials(name: string): string {\n    if (!name) return '?';\n    \n    const words = name.trim().split(/\\s+/);\n    if (words.length === 1) {\n      return words[0].substring(0, 2).toUpperCase();\n    }\n    \n    return words\n      .slice(0, 2)\n      .map(word => word.charAt(0).toUpperCase())\n      .join('');\n  }\n\n  /**\n   * Update the active community display\n   */\n  updateActiveCommunity(communityId: string): void {\n    this.currentCommunityId = communityId;\n    \n    if (this.element) {\n      // Re-render community burger section (first child)\n      const burgerSection = this.element.children[0];\n      if (burgerSection) {\n        const newSection = this.renderCommunityBurger();\n        burgerSection.replaceWith(newSection);\n      }\n    }\n  }\n\n  /**\n   * Update communities list\n   */\n  updateCommunities(communities: UserCommunityMembership[]): void {\n    this.communities = communities;\n    this.updateActiveCommunity(this.currentCommunityId);\n  }\n\n  /**\n   * Cleanup\n   */\n  destroy(): void {\n    this.element = null;\n  }\n} ", "/**\n * MobileCommunityPicker Component\n * Full-screen modal for community selection on mobile devices\n * \n * Features:\n * - Slide-up animation from bottom\n * - Grid layout with touch-friendly community icons\n * - Dark backdrop with blur effect\n * - Dismiss on backdrop click or close button\n */\n\nimport { UserCommunityMembership } from '../sidebar/CommunityItem';\nimport { getGradientStyle, getGradientClass, getIconForCommunity, getIconHTML } from '../../styling';\n\nexport interface MobileCommunityPickerOptions {\n  communities: UserCommunityMembership[];\n  currentCommunityId: string;\n  onCommunitySelect: (community: UserCommunityMembership) => void;\n  onClose: () => void;\n  onPlusButtonClick?: () => void; // Same callback as desktop\n  embedContainer?: HTMLElement; // \uD83C\uDFAF Container for boundary-respecting modals\n}\n\nexport class MobileCommunityPicker {\n  private communities: UserCommunityMembership[];\n  private currentCommunityId: string;\n  private options: MobileCommunityPickerOptions;\n  private embedContainer: HTMLElement; // \uD83C\uDFAF Container for boundary-respecting modals\n  private element: HTMLElement | null = null;\n  private isVisible: boolean = false;\n\n  constructor(options: MobileCommunityPickerOptions) {\n    this.communities = options.communities;\n    this.currentCommunityId = options.currentCommunityId;\n    this.options = options;\n    this.embedContainer = options.embedContainer || document.body; // \uD83C\uDFAF Fallback to document.body for backward compatibility\n  }\n\n  show(): void {\n    if (this.isVisible) return;\n    \n    this.isVisible = true;\n    const modal = this.render();\n    this.embedContainer.appendChild(modal); // \uD83C\uDFAF Respect embed boundaries - no more hijacking!\n    \n    // Trigger animation after DOM insertion\n    requestAnimationFrame(() => {\n      modal.classList.add('mobile-community-picker-visible');\n    });\n  }\n\n  hide(): void {\n    if (!this.isVisible || !this.element) return;\n    \n    this.isVisible = false;\n    this.element.classList.remove('mobile-community-picker-visible');\n    \n    // Remove from DOM after animation completes\n    setTimeout(() => {\n      if (this.element && this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = null;\n    }, 300); // Match CSS animation duration\n  }\n\n  private render(): HTMLElement {\n    const modal = document.createElement('div');\n    modal.className = 'mobile-community-picker-overlay';\n    \n    // Backdrop - clicking dismisses modal\n    const backdrop = document.createElement('div');\n    backdrop.className = 'mobile-community-picker-backdrop';\n    backdrop.addEventListener('click', () => {\n      this.options.onClose();\n    });\n    \n    // Modal content\n    const content = document.createElement('div');\n    content.className = 'mobile-community-picker-content';\n    \n    // Prevent content clicks from dismissing modal\n    content.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    // Header with title and close button\n    const header = this.renderHeader();\n    content.appendChild(header);\n    \n    // Communities grid\n    const grid = this.renderCommunitiesGrid();\n    content.appendChild(grid);\n    \n    // Plus button for discovery\n    const plusSection = this.renderPlusButton();\n    content.appendChild(plusSection);\n    \n    modal.appendChild(backdrop);\n    modal.appendChild(content);\n    \n    this.element = modal;\n    return modal;\n  }\n\n  private renderHeader(): HTMLElement {\n    const header = document.createElement('div');\n    header.className = 'mobile-community-picker-header';\n    \n    const title = document.createElement('h2');\n    title.className = 'mobile-community-picker-title';\n    title.textContent = 'Choose Community';\n    \n    const closeButton = document.createElement('button');\n    closeButton.className = 'mobile-community-picker-close';\n    closeButton.innerHTML = getIconHTML('chevronDown', { size: 24 }); // Beautiful Lucide chevron down\n    closeButton.addEventListener('click', () => {\n      this.options.onClose();\n    });\n    \n    header.appendChild(title);\n    header.appendChild(closeButton);\n    \n    return header;\n  }\n\n  private renderCommunitiesGrid(): HTMLElement {\n    const gridContainer = document.createElement('div');\n    gridContainer.className = 'mobile-community-picker-grid-container';\n    \n    const grid = document.createElement('div');\n    grid.className = 'mobile-community-picker-grid';\n    \n    this.communities.forEach(community => {\n      const item = this.renderCommunityItem(community);\n      grid.appendChild(item);\n    });\n    \n    gridContainer.appendChild(grid);\n    return gridContainer;\n  }\n\n  private renderCommunityItem(community: UserCommunityMembership): HTMLElement {\n    const item = document.createElement('div');\n    item.className = 'mobile-community-picker-item';\n    \n    if (community.id === this.currentCommunityId) {\n      item.classList.add('active');\n    }\n    \n    // Community icon (larger for touch)\n    const icon = document.createElement('div');\n    icon.className = 'mobile-community-picker-icon';\n    \n    if (community.logoUrl) {\n      const img = document.createElement('img');\n      img.src = community.logoUrl;\n      img.alt = community.name;\n      img.style.cssText = `\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        border-radius: inherit;\n      `;\n      icon.appendChild(img);\n    } else {\n      // Gradient fallback\n      const gradientClass = getGradientClass(community.name);\n      icon.style.background = getGradientStyle(gradientClass);\n      \n      const iconSpan = document.createElement('span');\n      iconSpan.textContent = getIconForCommunity(community.name);\n      iconSpan.style.cssText = `\n        color: white;\n        font-size: 24px;\n        font-weight: 600;\n      `;\n      icon.appendChild(iconSpan);\n    }\n    \n    // Community name\n    const name = document.createElement('div');\n    name.className = 'mobile-community-picker-name';\n    name.textContent = community.name;\n    \n    item.appendChild(icon);\n    item.appendChild(name);\n    \n    // Click handler\n    item.addEventListener('click', () => {\n      this.options.onCommunitySelect(community);\n    });\n    \n    return item;\n  }\n\n  private renderPlusButton(): HTMLElement {\n    const section = document.createElement('div');\n    section.className = 'mobile-community-picker-plus-section';\n    \n    const plusButton = document.createElement('div');\n    plusButton.className = 'mobile-community-picker-plus';\n    \n    const plusIcon = document.createElement('div');\n    plusIcon.className = 'mobile-community-picker-plus-icon';\n    plusIcon.textContent = '+';\n    \n    const plusText = document.createElement('div');\n    plusText.className = 'mobile-community-picker-plus-text';\n    plusText.textContent = 'Discover Communities';\n    \n    plusButton.appendChild(plusIcon);\n    plusButton.appendChild(plusText);\n    \n    // Click handler (same as desktop)\n    plusButton.addEventListener('click', () => {\n      console.log('[MobileCommunityPicker] Plus button clicked - community discovery');\n      if (this.options.onPlusButtonClick) {\n        this.options.onPlusButtonClick();\n      }\n    });\n    \n    section.appendChild(plusButton);\n    return section;\n  }\n\n  /**\n   * Update communities and current selection\n   */\n  updateCommunities(communities: UserCommunityMembership[], currentCommunityId: string): void {\n    this.communities = communities;\n    this.currentCommunityId = currentCommunityId;\n    \n    // Re-render if modal is visible\n    if (this.isVisible && this.element) {\n      const gridContainer = this.element.querySelector('.mobile-community-picker-grid-container');\n      if (gridContainer) {\n        const newGrid = this.renderCommunitiesGrid();\n        gridContainer.replaceWith(newGrid);\n      }\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  destroy(): void {\n    this.hide();\n  }\n} ", "/**\n * MobileProfileDrawer Component\n * Full-screen drawer for user profile management on mobile devices\n * \n * Features:\n * - Slide-up animation from bottom\n * - Session management and account switching\n * - Dark backdrop with blur effect\n * - Dismiss on backdrop click or close button\n */\n\nimport { UserProfile } from '../profile/UserProfile';\nimport { getGradientStyle, getGradientClass, getIconHTML } from '../../styling';\nimport { sessionManager, SessionData } from '../../../SessionManager';\n\nexport interface MobileProfileDrawerOptions {\n  userProfile: UserProfile;\n  onMenuAction: (action: string) => void;\n  onClose: () => void;\n  embedContainer?: HTMLElement; // \uD83C\uDFAF Container for boundary-respecting modals\n}\n\nexport class MobileProfileDrawer {\n  private userProfile: UserProfile;\n  private options: MobileProfileDrawerOptions;\n  private embedContainer: HTMLElement; // \uD83C\uDFAF Container for boundary-respecting modals\n  private element: HTMLElement | null = null;\n  private isVisible: boolean = false;\n  \n  // SessionManager integration (same as desktop)\n  private sessionManager = sessionManager;\n  private sessionSubscription: (() => void) | null = null;\n  private allSessions: SessionData[] = [];\n\n  constructor(options: MobileProfileDrawerOptions) {\n    this.userProfile = options.userProfile;\n    this.options = options;\n    this.embedContainer = options.embedContainer || document.body; // \uD83C\uDFAF Fallback to document.body for backward compatibility\n    \n    // Subscribe to session changes for reactive menu updates (same as desktop)\n    this.sessionSubscription = this.sessionManager.subscribe((sessions, activeToken, activeSession) => {\n      this.allSessions = sessions;\n      this.refreshDrawer();\n    });\n    \n    // Initial load of sessions\n    this.allSessions = this.sessionManager.getAllSessions();\n  }\n\n  show(): void {\n    if (this.isVisible) return;\n    \n    this.isVisible = true;\n    const modal = this.render();\n    this.embedContainer.appendChild(modal); // \uD83C\uDFAF Respect embed boundaries - no more hijacking!\n    \n    // Trigger animation after DOM insertion\n    requestAnimationFrame(() => {\n      modal.classList.add('mobile-profile-drawer-visible');\n    });\n  }\n\n  hide(): void {\n    if (!this.isVisible || !this.element) return;\n    \n    this.isVisible = false;\n    this.element.classList.remove('mobile-profile-drawer-visible');\n    \n    // Remove from DOM after animation completes\n    setTimeout(() => {\n      if (this.element && this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = null;\n    }, 300); // Match CSS animation duration\n  }\n\n  /**\n   * Refresh drawer when sessions change (same as desktop)\n   */\n  private refreshDrawer(): void {\n    if (this.isVisible && this.element) {\n      // Re-render profile section with updated session data\n      const profileSection = this.element.querySelector('.mobile-profile-drawer-profile');\n      if (profileSection) {\n        const newProfile = this.renderProfileSection();\n        profileSection.replaceWith(newProfile);\n      }\n      \n      // Re-render actions section with updated session data  \n      const actionsSection = this.element.querySelector('.mobile-profile-drawer-actions');\n      if (actionsSection) {\n        const newActions = this.renderActions();\n        actionsSection.replaceWith(newActions);\n      }\n    }\n  }\n\n  private render(): HTMLElement {\n    const modal = document.createElement('div');\n    modal.className = 'mobile-profile-drawer-overlay';\n    \n    // Backdrop - clicking dismisses modal\n    const backdrop = document.createElement('div');\n    backdrop.className = 'mobile-profile-drawer-backdrop';\n    backdrop.addEventListener('click', () => {\n      this.options.onClose();\n    });\n    \n    // Modal content\n    const content = document.createElement('div');\n    content.className = 'mobile-profile-drawer-content';\n    \n    // Prevent content clicks from dismissing modal\n    content.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    // Header with title and close button\n    const header = this.renderHeader();\n    content.appendChild(header);\n    \n    // Profile section\n    const profile = this.renderProfileSection();\n    content.appendChild(profile);\n    \n    // Actions section\n    const actions = this.renderActions();\n    content.appendChild(actions);\n    \n    modal.appendChild(backdrop);\n    modal.appendChild(content);\n    \n    this.element = modal;\n    return modal;\n  }\n\n  private renderHeader(): HTMLElement {\n    const header = document.createElement('div');\n    header.className = 'mobile-profile-drawer-header';\n    \n    const title = document.createElement('h2');\n    title.className = 'mobile-profile-drawer-title';\n    title.textContent = 'Profile';\n    \n    const closeButton = document.createElement('button');\n    closeButton.className = 'mobile-profile-drawer-close';\n    closeButton.innerHTML = getIconHTML('chevronDown', { size: 24 }); // Beautiful Lucide chevron down\n    closeButton.addEventListener('click', () => {\n      this.options.onClose();\n    });\n    \n    header.appendChild(title);\n    header.appendChild(closeButton);\n    \n    return header;\n  }\n\n  private renderProfileSection(): HTMLElement {\n    const section = document.createElement('div');\n    section.className = 'mobile-profile-drawer-profile';\n    \n    // Get current active session from SessionManager (same as desktop)\n    const activeSession = this.sessionManager.getActiveSession();\n    const userName = activeSession?.name || this.userProfile.name || 'Unknown User';\n    const profileImageUrl = activeSession?.profileImageUrl || this.userProfile.profilePictureUrl;\n    const identityType = activeSession?.identityType || this.userProfile.identityType || 'anonymous';\n    \n    // Profile avatar\n    const avatar = document.createElement('div');\n    avatar.className = 'mobile-profile-drawer-avatar';\n    \n    if (profileImageUrl) {\n      const img = document.createElement('img');\n      img.src = profileImageUrl;\n      img.alt = userName;\n      img.style.cssText = `\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        border-radius: inherit;\n      `;\n      avatar.appendChild(img);\n    } else {\n      // Gradient fallback with initials\n      const gradientClass = getGradientClass(userName);\n      avatar.style.background = getGradientStyle(gradientClass);\n      \n      const initials = document.createElement('span');\n      initials.textContent = this.getUserInitials(userName);\n      initials.style.cssText = `\n        color: white;\n        font-weight: 600;\n        font-size: 24px;\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Noto Sans\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\";\n      `;\n      avatar.appendChild(initials);\n    }\n    \n    // Profile info\n    const info = document.createElement('div');\n    info.className = 'mobile-profile-drawer-info';\n    \n    const name = document.createElement('h3');\n    name.className = 'mobile-profile-drawer-name';\n    name.textContent = userName;\n    \n    const type = document.createElement('p');\n    type.className = 'mobile-profile-drawer-type';\n    type.textContent = this.getIdentityTypeLabel(identityType) + ' \u2022 Active';\n    \n    info.appendChild(name);\n    info.appendChild(type);\n    \n    section.appendChild(avatar);\n    section.appendChild(info);\n    \n    return section;\n  }\n\n  private renderActions(): HTMLElement {\n    const actions = document.createElement('div');\n    actions.className = 'mobile-profile-drawer-actions';\n    \n    // Available Sessions section (same as desktop)\n    const activeToken = this.sessionManager.getActiveToken();\n    const inactiveSessions = this.allSessions.filter(session => \n      session.sessionToken !== activeToken\n    );\n    \n    if (inactiveSessions.length > 0) {\n      const sessionSection = document.createElement('div');\n      sessionSection.className = 'mobile-profile-drawer-section';\n      \n      const sessionTitle = document.createElement('div');\n      sessionTitle.className = 'mobile-profile-drawer-section-title';\n      sessionTitle.textContent = 'Available Accounts';\n      sessionSection.appendChild(sessionTitle);\n      \n      // Render each inactive session\n      inactiveSessions.forEach(session => {\n        const sessionItem = this.renderSessionItem(session);\n        sessionSection.appendChild(sessionItem);\n      });\n      \n      actions.appendChild(sessionSection);\n    }\n    \n    // Actions section (same as desktop)\n    const actionsSection = document.createElement('div');\n    actionsSection.className = 'mobile-profile-drawer-section';\n    \n    const actionsTitle = document.createElement('div');\n    actionsTitle.className = 'mobile-profile-drawer-section-title';\n    actionsTitle.textContent = 'Actions';\n    actionsSection.appendChild(actionsTitle);\n    \n    // Add Another Account (same action as desktop)\n    const addAccount = this.renderAction({\n      icon: '\u2795',\n      text: 'Add Another Account',\n      action: 'add-session'\n    });\n    actionsSection.appendChild(addAccount);\n    \n    // Settings (same action as desktop)\n    const settings = this.renderAction({\n      icon: '\u2699\uFE0F',\n      text: 'Settings',\n      action: 'settings'\n    });\n    actionsSection.appendChild(settings);\n    \n    // Sign Out (same action as desktop)\n    const signOut = this.renderAction({\n      icon: '\uD83D\uDEAA',\n      text: 'Sign Out',\n      action: 'sign-out',\n      destructive: true\n    });\n    actionsSection.appendChild(signOut);\n    \n    actions.appendChild(actionsSection);\n    \n    return actions;\n  }\n\n  private renderSessionItem(session: SessionData): HTMLElement {\n    const item = document.createElement('div');\n    item.className = 'mobile-profile-drawer-action';\n    \n    // Avatar\n    const avatar = document.createElement('div');\n    avatar.className = 'mobile-profile-drawer-action-icon';\n    avatar.style.cssText = `\n      width: 32px;\n      height: 32px;\n      border-radius: 8px;\n      overflow: hidden;\n    `;\n    \n    if (session.profileImageUrl) {\n      const img = document.createElement('img');\n      img.src = session.profileImageUrl;\n      img.alt = session.name || 'User';\n      img.style.cssText = `\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        border-radius: inherit;\n      `;\n      avatar.appendChild(img);\n    } else {\n      // Gradient fallback\n      const name = session.name || 'User';\n      const gradientClass = getGradientClass(name);\n      avatar.style.background = getGradientStyle(gradientClass);\n      \n      const initials = document.createElement('span');\n      initials.textContent = this.getUserInitials(name);\n      initials.style.cssText = `\n        color: white;\n        font-weight: 600;\n        font-size: 12px;\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Noto Sans\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\";\n      `;\n      avatar.appendChild(initials);\n    }\n    \n    // Session info\n    const info = document.createElement('div');\n    info.style.cssText = 'flex: 1; min-width: 0;';\n    \n    const name = document.createElement('div');\n    name.className = 'mobile-profile-drawer-action-text';\n    name.textContent = session.name || 'Unknown User';\n    name.style.cssText = 'margin-bottom: 2px; font-size: 14px;';\n    \n    const type = document.createElement('div');\n    type.style.cssText = 'font-size: 12px; color: var(--preview-text-muted); font-weight: normal;';\n    type.textContent = this.getIdentityTypeLabel(session.identityType);\n    \n    info.appendChild(name);\n    info.appendChild(type);\n    \n    item.appendChild(avatar);\n    item.appendChild(info);\n    \n    // Click handler for session switching (same as desktop)\n    item.addEventListener('click', () => {\n      this.handleSessionSwitch(session.sessionToken);\n    });\n    \n    return item;\n  }\n\n  private renderAction(config: {\n    icon: string;\n    text: string;\n    action: string;\n    destructive?: boolean;\n  }): HTMLElement {\n    const action = document.createElement('div');\n    action.className = `mobile-profile-drawer-action${config.destructive ? ' destructive' : ''}`;\n    \n    const icon = document.createElement('div');\n    icon.className = 'mobile-profile-drawer-action-icon';\n    icon.textContent = config.icon;\n    \n    const text = document.createElement('div');\n    text.className = 'mobile-profile-drawer-action-text';\n    text.textContent = config.text;\n    \n    action.appendChild(icon);\n    action.appendChild(text);\n    \n    // Click handler\n    action.addEventListener('click', () => {\n      this.options.onMenuAction(config.action);\n    });\n    \n    return action;\n  }\n\n  private getUserInitials(name: string): string {\n    if (!name) return '?';\n    \n    const words = name.trim().split(/\\s+/);\n    if (words.length === 1) {\n      return words[0].substring(0, 2).toUpperCase();\n    }\n    \n    return words\n      .slice(0, 2)\n      .map(word => word.charAt(0).toUpperCase())\n      .join('');\n  }\n\n  /**\n   * Get identity type label for display (same as desktop)\n   */\n  private getIdentityTypeLabel(identityType: 'ens' | 'universal_profile' | 'anonymous'): string {\n    switch (identityType) {\n      case 'ens':\n        return 'ENS';\n      case 'universal_profile':\n        return 'Universal Profile';\n      case 'anonymous':\n        return 'Guest';\n      default:\n        return 'User';\n    }\n  }\n\n  /**\n   * Handle session switching (same as desktop)\n   * \uD83D\uDE80 FIX: Delegate to parent via callback instead of direct SessionManager call\n   */\n  private async handleSessionSwitch(sessionToken: string): Promise<void> {\n    try {\n      console.log('[MobileProfileDrawer] Delegating session switch to parent:', sessionToken);\n      \n      // Delegate to parent using existing callback pattern with token encoded in action\n      this.options.onMenuAction(`switch-session:${sessionToken}`);\n      \n      console.log('[MobileProfileDrawer] Session switch delegated successfully');\n    } catch (error) {\n      console.error('[MobileProfileDrawer] Failed to delegate session switch:', error);\n    }\n  }\n\n  /**\n   * Update user profile information\n   */\n  updateUserProfile(userProfile: UserProfile): void {\n    this.userProfile = userProfile;\n    \n    // Re-render if drawer is visible\n    if (this.isVisible && this.element) {\n      const profileSection = this.element.querySelector('.mobile-profile-drawer-profile');\n      if (profileSection) {\n        const newProfile = this.renderProfileSection();\n        profileSection.replaceWith(newProfile);\n      }\n    }\n  }\n\n  /**\n   * Cleanup (same as desktop)\n   */\n  destroy(): void {\n    // Cleanup session subscription\n    if (this.sessionSubscription) {\n      this.sessionSubscription();\n      this.sessionSubscription = null;\n    }\n    \n    this.hide();\n  }\n} ", "/**\n * Responsive utilities for mobile/desktop detection\n */\n\nexport function isMobileViewport(): boolean {\n  return window.innerWidth < 768;\n}\n\nexport function isDesktopViewport(): boolean {\n  return window.innerWidth >= 768;\n}\n\nexport function addResizeListener(callback: (isMobile: boolean) => void): () => void {\n  const handler = () => callback(isMobileViewport());\n  window.addEventListener('resize', handler);\n  \n  // Return cleanup function\n  return () => window.removeEventListener('resize', handler);\n}\n\n// Breakpoint constants\nexport const MOBILE_BREAKPOINT = 768; // px\nexport const DESKTOP_MIN_WIDTH = 768; // px ", "/**\n * CommunitySidebar Component\n * Main sidebar component that orchestrates community items and user profile\n * \n * Extracted from CommunityNavigationUI class for better maintainability\n * Composes CommunityItem and UserProfile components\n */\n\nimport { CommunityItem, UserCommunityMembership } from './CommunityItem';\nimport { CommunityPreviewManager } from './CommunityPreview';\nimport { UserProfileComponent, UserProfile } from '../profile/UserProfile';\nimport { MobileBottomNav } from '../mobile/MobileBottomNav';\nimport { MobileCommunityPicker } from '../mobile/MobileCommunityPicker';\nimport { MobileProfileDrawer } from '../mobile/MobileProfileDrawer';\nimport { injectStyles } from '../../styling';\nimport { getIconHTML } from '../../styling/utils/icons';\nimport { isMobileViewport, addResizeListener } from '../../utils/responsive';\nimport { MessageRouter } from '../../services/messaging/MessageRouter';  // \uD83C\uDD95 NEW - Import MessageRouter\n\nexport interface CommunitySidebarOptions {\n  communities: UserCommunityMembership[];\n  currentCommunityId: string;\n  userProfile: UserProfile | null;\n  hostServiceUrl: string; // \uD83C\uDFAF Host service URL for absolute asset paths\n  onCommunitySelect?: (community: UserCommunityMembership) => void;\n  onMenuAction?: (action: string) => void;\n  getIframeStatus?: (communityId: string) => boolean; // Simple function to check if iframe is loaded\n  onPlusButtonClick?: () => void; // Callback for plus button click (community discovery)\n  embedContainer?: HTMLElement; // \uD83C\uDFAF Container for modal boundaries - no more hijacking!\n  messageRouter?: MessageRouter;  // \uD83C\uDD95 NEW - MessageRouter for sidebar actions\n}\n\nexport class CommunitySidebar {\n  private communities: UserCommunityMembership[];\n  private currentCommunityId: string;\n  private userProfile: UserProfile | null;\n  private hostServiceUrl: string; // \uD83C\uDFAF Host service URL for absolute asset paths\n  private options: CommunitySidebarOptions;\n  private embedContainer: HTMLElement | null = null; // \uD83C\uDFAF Reference to embed container for boundary respect\n  private messageRouter: MessageRouter | null = null;  // \uD83C\uDD95 NEW - MessageRouter for sidebar actions\n  \n  private container: HTMLElement | null = null;\n  private communityItems: CommunityItem[] = [];\n  private userProfileComponent: UserProfileComponent | null = null;\n  private previewManager: CommunityPreviewManager;\n  \n  // Mobile-specific properties\n  private mobileBottomNav: MobileBottomNav | null = null;\n  private mobileCommunityPicker: MobileCommunityPicker | null = null;\n  private mobileProfileDrawer: MobileProfileDrawer | null = null;\n  private isMobile: boolean = false;\n  private resizeCleanup: (() => void) | null = null;\n\n  constructor(options: CommunitySidebarOptions) {\n    this.communities = options.communities;\n    this.currentCommunityId = options.currentCommunityId;\n    this.userProfile = options.userProfile;\n    this.hostServiceUrl = options.hostServiceUrl; // \uD83C\uDFAF Store host service URL\n    this.options = options;\n    this.embedContainer = options.embedContainer || null; // \uD83C\uDFAF Store embed container reference\n    this.messageRouter = options.messageRouter || null;  // \uD83C\uDD95 NEW - Store MessageRouter reference\n    this.previewManager = CommunityPreviewManager.getInstance();\n    \n    // Initialize mobile state\n    this.isMobile = isMobileViewport();\n    \n    // Set up responsive listener\n    this.resizeCleanup = addResizeListener((isMobile) => {\n      if (this.isMobile !== isMobile) {\n        this.isMobile = isMobile;\n        this.handleViewportChange();\n      }\n    });\n  }\n\n  render(): HTMLElement {\n    // Inject CSS styles from proper CSS files!\n    injectStyles();\n    \n    if (this.isMobile) {\n      return this.renderMobile();\n    } else {\n      return this.renderDesktop();\n    }\n  }\n\n  private renderDesktop(): HTMLElement {\n    const nav = document.createElement('div');\n    nav.className = 'curia-community-nav';\n    \n    // \uD83C\uDFA8 Add logo section at the top\n    const logoSection = this.renderLogoSection();\n    nav.appendChild(logoSection);\n    \n    // \uD83D\uDE80 Add navigation items section (search, messages, notifications)\n    const navItemsSection = this.renderNavigationItems();\n    nav.appendChild(navItemsSection);\n    \n    // \u2796 Add divider\n    const divider = this.renderDivider();\n    nav.appendChild(divider);\n    \n    // \uD83C\uDFE0 Create scrollable community list container\n    const communityListContainer = document.createElement('div');\n    communityListContainer.className = 'community-list-container';\n    \n    // Add communities to scrollable container\n    this.renderCommunityItems(communityListContainer);\n    \n    nav.appendChild(communityListContainer);\n\n    // Add user profile section at the bottom (fixed)\n    if (this.userProfile) {\n      const userSection = this.renderUserProfile();\n      nav.appendChild(userSection);\n    }\n    \n    this.container = nav;\n    return nav;\n  }\n\n  private renderMobile(): HTMLElement {\n    // Create wrapper container for mobile layout\n    const wrapper = document.createElement('div');\n    wrapper.className = 'curia-mobile-wrapper';\n    \n    if (this.userProfile) {\n      // Create mobile community picker modal\n      this.mobileCommunityPicker = new MobileCommunityPicker({\n        communities: this.communities,\n        currentCommunityId: this.currentCommunityId,\n        onCommunitySelect: (community) => {\n          console.log('[CommunitySidebar] Community selected:', community.name);\n          // Hide modal first\n          if (this.mobileCommunityPicker) {\n            this.mobileCommunityPicker.hide();\n          }\n          // Then trigger community selection\n          if (this.options.onCommunitySelect) {\n            this.options.onCommunitySelect(community);\n          }\n        },\n        onClose: () => {\n          console.log('[CommunitySidebar] Mobile community picker closed');\n          if (this.mobileCommunityPicker) {\n            this.mobileCommunityPicker.hide();\n          }\n        },\n        onPlusButtonClick: () => {\n          console.log('[CommunitySidebar] Mobile plus button clicked - same as desktop');\n          // Same callback as desktop\n          if (this.options.onPlusButtonClick) {\n            this.options.onPlusButtonClick();\n          }\n        },\n        embedContainer: this.embedContainer || undefined // \uD83C\uDFAF Pass embed container for boundary respect (null \u2192 undefined)\n      });\n\n      // Create mobile profile drawer\n      this.mobileProfileDrawer = new MobileProfileDrawer({\n        userProfile: this.userProfile,\n        onMenuAction: (action) => {\n          console.log('[CommunitySidebar] Profile action:', action);\n          // Hide drawer first\n          if (this.mobileProfileDrawer) {\n            this.mobileProfileDrawer.hide();\n          }\n          // Then trigger action\n          if (this.options.onMenuAction) {\n            this.options.onMenuAction(action);\n          }\n        },\n        onClose: () => {\n          console.log('[CommunitySidebar] Mobile profile drawer closed');\n          if (this.mobileProfileDrawer) {\n            this.mobileProfileDrawer.hide();\n          }\n        },\n        embedContainer: this.embedContainer || undefined // \uD83C\uDFAF Pass embed container for boundary respect (null \u2192 undefined)\n      });\n\n      // Create mobile bottom navigation\n      this.mobileBottomNav = new MobileBottomNav({\n        communities: this.communities,\n        currentCommunityId: this.currentCommunityId,\n        userProfile: this.userProfile,\n        onCommunityMenuClick: () => {\n          console.log('[CommunitySidebar] Mobile community menu clicked - showing picker');\n          if (this.mobileCommunityPicker) {\n            this.mobileCommunityPicker.show();\n          }\n        },\n        onProfileMenuClick: () => {\n          console.log('[CommunitySidebar] Mobile profile menu clicked - showing drawer');\n          if (this.mobileProfileDrawer) {\n            this.mobileProfileDrawer.show();\n          }\n        },\n        messageRouter: this.messageRouter || undefined  // \uD83C\uDD95 NEW - Pass MessageRouter for mobile functionality (null \u2192 undefined)\n      });\n      \n      const bottomNavElement = this.mobileBottomNav.render();\n      wrapper.appendChild(bottomNavElement);\n    }\n    \n    this.container = wrapper; \n    return wrapper;\n  }\n\n  private renderCommunityItems(container: HTMLElement): void {\n    // Clear existing items\n    this.communityItems.forEach(item => item.destroy());\n    this.communityItems = [];\n\n    this.communities.forEach(community => {\n      const communityItem = new CommunityItem({\n        community,\n        isActive: community.id === this.currentCommunityId,\n        hasIframeLoaded: this.options.getIframeStatus ? this.options.getIframeStatus(community.id) : false,\n        onHover: (community, element) => {\n          this.previewManager.showPreview(community, element);\n        },\n        onHoverEnd: () => {\n          this.previewManager.hidePreview();\n        },\n        onClick: (community) => {\n          if (this.options.onCommunitySelect) {\n            this.options.onCommunitySelect(community);\n          }\n          this.updateActiveCommunity(community.id);\n        }\n      });\n\n      const itemElement = communityItem.render();\n      container.appendChild(itemElement);\n      this.communityItems.push(communityItem);\n    });\n    \n    // Add plus icon placeholder for discovering/creating communities\n    this.addPlusIconPlaceholder(container);\n  }\n\n  /**\n   * Add subtle plus icon placeholder for community discovery/creation\n   */\n  private addPlusIconPlaceholder(container: HTMLElement): void {\n    const plusIcon = document.createElement('div');\n    plusIcon.className = 'community-item plus-icon-placeholder';\n    \n    // Subtle styling for the plus icon\n    plusIcon.style.cssText = `\n      background: rgba(148, 163, 184, 0.1);\n      border: 2px dashed rgba(148, 163, 184, 0.3);\n      color: rgba(148, 163, 184, 0.7);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 24px;\n      transition: all 0.25s ease;\n      cursor: pointer;\n    `;\n    \n    plusIcon.innerHTML = '+';\n    \n    // Hover effect\n    plusIcon.addEventListener('mouseenter', () => {\n      plusIcon.style.borderColor = 'rgba(59, 130, 246, 0.4)';\n      plusIcon.style.backgroundColor = 'rgba(59, 130, 246, 0.05)';\n      plusIcon.style.color = 'rgba(59, 130, 246, 0.8)';\n      plusIcon.style.transform = 'scale(1.08) translateY(-1px)';\n    });\n    \n    plusIcon.addEventListener('mouseleave', () => {\n      plusIcon.style.borderColor = 'rgba(148, 163, 184, 0.3)';\n      plusIcon.style.backgroundColor = 'rgba(148, 163, 184, 0.1)';\n      plusIcon.style.color = 'rgba(148, 163, 184, 0.7)';\n      plusIcon.style.transform = '';\n    });\n    \n    // Click handler for community discovery\n    plusIcon.addEventListener('click', () => {\n      console.log('[CommunitySidebar] Plus icon clicked - opening community discovery');\n      if (this.options.onPlusButtonClick) {\n        this.options.onPlusButtonClick();\n      }\n    });\n    \n    container.appendChild(plusIcon);\n  }\n\n  private renderUserProfile(): HTMLElement {\n    if (!this.userProfile) {\n      throw new Error('Cannot render user profile: userProfile is null');\n    }\n\n    this.userProfileComponent = new UserProfileComponent({\n      userProfile: this.userProfile,\n      onMenuAction: (action) => {\n        if (this.options.onMenuAction) {\n          this.options.onMenuAction(action);\n        }\n      }\n    });\n\n    return this.userProfileComponent.render();\n  }\n\n  /**\n   * Handle viewport changes between mobile and desktop\n   */\n  private handleViewportChange(): void {\n    // Force re-render when viewport changes\n    if (this.container && this.container.parentNode) {\n      const parent = this.container.parentNode;\n      const newElement = this.render();\n      parent.replaceChild(newElement, this.container);\n    }\n  }\n\n  /**\n   * Update which community is currently active\n   */\n  updateActiveCommunity(communityId: string): void {\n    if (this.currentCommunityId === communityId) return;\n\n    this.currentCommunityId = communityId;\n\n    if (this.isMobile) {\n      // Update mobile bottom nav\n      if (this.mobileBottomNav) {\n        this.mobileBottomNav.updateActiveCommunity(communityId);\n      }\n      // Update mobile community picker\n      if (this.mobileCommunityPicker) {\n        this.mobileCommunityPicker.updateCommunities(this.communities, communityId);\n      }\n    } else {\n      // Update desktop community items\n      this.communityItems.forEach(item => {\n        const isActive = item['community'].id === communityId; // Access private property\n        item.updateActiveState(isActive);\n      });\n    }\n  }\n\n  /**\n   * Update the community list with new data\n   */\n  updateCommunities(communities: UserCommunityMembership[]): void {\n    this.communities = communities;\n    \n    if (this.isMobile) {\n      // Update mobile bottom nav\n      if (this.mobileBottomNav) {\n        this.mobileBottomNav.updateCommunities(communities);\n      }\n      // Update mobile community picker\n      if (this.mobileCommunityPicker) {\n        this.mobileCommunityPicker.updateCommunities(communities, this.currentCommunityId);\n      }\n    } else {\n      // Update desktop sidebar\n      if (this.container) {\n        const communityListContainer = this.container.querySelector('.community-list-container');\n        if (communityListContainer) {\n          // Clear existing items\n          communityListContainer.innerHTML = '';\n          this.renderCommunityItems(communityListContainer as HTMLElement);\n        }\n      }\n    }\n  }\n\n  /**\n   * Update online indicators after iframe status changes\n   */\n  updateOnlineIndicators(): void {\n    console.log(`[MULTI-IFRAME] [CommunitySidebar] Refreshing online indicators for ${this.communityItems.length} communities`);\n    \n    // Simple approach: re-render the community list to update indicators\n    if (this.container) {\n      const communityListContainer = this.container.querySelector('.community-list-container');\n      if (communityListContainer) {\n        communityListContainer.innerHTML = '';\n        this.renderCommunityItems(communityListContainer as HTMLElement);\n      }\n    }\n  }\n\n  /**\n   * Update user profile information\n   */\n  updateUserProfile(userProfile: UserProfile): void {\n    this.userProfile = userProfile;\n    \n    if (this.isMobile) {\n      // Update mobile profile drawer\n      if (this.mobileProfileDrawer) {\n        this.mobileProfileDrawer.updateUserProfile(userProfile);\n      }\n    } else {\n      // Update desktop profile component\n      if (this.container && this.userProfileComponent) {\n        // Remove old profile component\n        const oldProfileElement = this.container.querySelector('.user-profile-section');\n        if (oldProfileElement) {\n          oldProfileElement.remove();\n        }\n        \n        // Add new profile component\n        const userSection = this.renderUserProfile();\n        this.container.appendChild(userSection);\n      }\n    }\n  }\n\n\n\n  /**\n   * Update the embed container reference for mobile component boundaries\n   * Called after embedContainer is created in InternalPluginHost\n   */\n  updateEmbedContainer(embedContainer: HTMLElement): void {\n    console.log('[CommunitySidebar] Updating embed container reference for mobile boundaries');\n    this.embedContainer = embedContainer;\n    \n    // Update existing mobile components with the new container reference\n    if (this.mobileCommunityPicker) {\n      (this.mobileCommunityPicker as any).embedContainer = embedContainer;\n    }\n    \n    if (this.mobileProfileDrawer) {\n      (this.mobileProfileDrawer as any).embedContainer = embedContainer;\n    }\n  }\n\n  /**\n   * Cleanup method for removing event listeners and DOM elements  \n   */\n  destroy(): void {\n    // Cleanup community items\n    this.communityItems.forEach(item => item.destroy());\n    this.communityItems = [];\n\n    // Cleanup user profile component\n    if (this.userProfileComponent) {\n      this.userProfileComponent.destroy();\n      this.userProfileComponent = null;\n    }\n\n    // Cleanup mobile bottom nav\n    if (this.mobileBottomNav) {\n      this.mobileBottomNav.destroy();\n      this.mobileBottomNav = null;\n    }\n\n    // Cleanup mobile community picker\n    if (this.mobileCommunityPicker) {\n      this.mobileCommunityPicker.destroy();\n      this.mobileCommunityPicker = null;\n    }\n\n    // Cleanup mobile profile drawer\n    if (this.mobileProfileDrawer) {\n      this.mobileProfileDrawer.destroy();\n      this.mobileProfileDrawer = null;\n    }\n\n    // Cleanup resize listener\n    if (this.resizeCleanup) {\n      this.resizeCleanup();\n      this.resizeCleanup = null;\n    }\n\n    // Hide any open preview\n    this.previewManager.hidePreview();\n\n    this.container = null;\n  }\n\n  /**\n   * Render the Curia logo section at the top of the sidebar\n   */\n  private renderLogoSection(): HTMLElement {\n    const logoSection = document.createElement('div');\n    logoSection.className = 'sidebar-logo-section';\n    \n    const logoImg = document.createElement('img');\n    logoImg.src = `${this.hostServiceUrl}/curia.webp`; // \uD83C\uDFA8 Using absolute URL to host service\n    logoImg.alt = 'Curia';\n    logoImg.className = 'sidebar-logo-img';\n    \n    logoSection.appendChild(logoImg);\n    return logoSection;\n  }\n\n  /**\n   * Render navigation items (search, messages, notifications)\n   */\n  private renderNavigationItems(): HTMLElement {\n    const navSection = document.createElement('div');\n    navSection.className = 'sidebar-nav-section';\n    \n    // \uD83D\uDD0D Search\n    const searchItem = this.createNavItem('search', 'Search');\n    navSection.appendChild(searchItem);\n    \n    // \uD83D\uDCAC Messages (Direct Messages)\n    const messagesItem = this.createNavItem('messages', 'Direct Messages');\n    navSection.appendChild(messagesItem);\n    \n    // \uD83D\uDD14 Notifications\n    const notificationsItem = this.createNavItem('notifications', 'Notifications');\n    navSection.appendChild(notificationsItem);\n    \n    return navSection;\n  }\n\n  /**\n   * Create a navigation item with icon and hover functionality\n   */\n  private createNavItem(iconName: 'search' | 'messages' | 'notifications', label: string): HTMLElement {\n    const item = document.createElement('div');\n    item.className = 'sidebar-nav-item';\n    item.title = label;\n    \n    const iconContainer = document.createElement('div');\n    iconContainer.className = 'sidebar-nav-icon';\n    iconContainer.innerHTML = getIconHTML(iconName, { size: 20 });\n    \n    item.appendChild(iconContainer);\n    \n    // Add click handler to send sidebar action\n    item.addEventListener('click', async () => {\n      await this.handleNavItemClick(iconName, label);\n    });\n    \n    return item;\n  }\n\n  /**\n   * Handle navigation item clicks by sending sidebar actions\n   */\n  private async handleNavItemClick(iconName: 'search' | 'messages' | 'notifications', label: string): Promise<void> {\n    if (!this.messageRouter) {\n      console.warn(`[CommunitySidebar] ${label} clicked but no MessageRouter available`);\n      return;\n    }\n\n    try {\n      console.log(`[CommunitySidebar] Triggering ${iconName} action in forum`);\n      \n      // Send appropriate sidebar action based on icon\n      switch (iconName) {\n        case 'search':\n          this.messageRouter.sendSidebarAction('search');\n          break;\n        case 'messages':\n          this.messageRouter.sendSidebarAction('messages');\n          break;\n        case 'notifications':\n          this.messageRouter.sendSidebarAction('notifications');\n          break;\n        default:\n          console.warn(`[CommunitySidebar] Unknown nav item: ${iconName}`);\n      }\n    } catch (error) {\n      console.error(`[CommunitySidebar] Failed to execute ${label} action:`, error);\n    }\n  }\n\n  /**\n   * Render divider between nav items and community list\n   */\n  private renderDivider(): HTMLElement {\n    const divider = document.createElement('div');\n    divider.className = 'sidebar-divider';\n    return divider;\n  }\n} ", "/**\n * AuthenticationService\n * Handles all authentication flows, session management, and user data fetching\n * \n * Extracted from InternalPluginHost for better separation of concerns\n * Responsibilities:\n * - Initialize auth phase and create auth iframe\n * - Handle auth completion and session establishment\n * - Fetch user communities and profile data\n * - Handle session switching and cross-tab synchronization\n * - Manage sign-out and session cleanup\n */\n\nimport { sessionManager } from '../../../SessionManager';\nimport { ApiProxyClient } from '@curia_/iframe-api-proxy';\n\nexport interface InternalAuthContext {\n  userId: string;\n  communityId: string;\n  sessionToken?: string;\n  externalParams?: Record<string, string>;\n  parentUrl?: string;\n}\n\nexport interface UserCommunityMembership {\n  id: string;\n  name: string;\n  logoUrl: string | null;\n  userRole: 'member' | 'moderator' | 'admin' | 'owner';\n  isMember: boolean;\n}\n\nexport interface UserProfile {\n  userId: string;\n  name: string;\n  profilePictureUrl: string | null;\n  identityType: 'ens' | 'universal_profile' | 'anonymous';\n  walletAddress: string | null;\n  ensDomain: string | null;\n  upAddress: string | null;\n  isAnonymous: boolean;\n}\n\nexport interface AuthConfig {\n  theme?: string;\n  backgroundColor?: string;\n  community?: string;\n  mode?: string;\n  parentUrl?: string;\n  externalParams?: Record<string, string>;\n  width?: string;\n  height?: string;\n  borderRadius?: string;\n}\n\nexport interface AuthenticationCallbacks {\n  onAuthComplete?: (authData: any, context: InternalAuthContext) => Promise<void>;\n  onSessionSwitch?: (profile: UserProfile) => Promise<void>;\n  onSignOut?: () => void;\n  onCrossTabSessionUpdate?: () => void;\n}\n\nexport class AuthenticationService {\n  private hostServiceUrl: string;\n  private authContext: InternalAuthContext | null = null;\n  private callbacks: AuthenticationCallbacks;\n  private sessionListener?: (event: MessageEvent) => void;\n  private crossTabListener?: (event: Event) => void;\n  private sessionManagerSubscription?: () => void;\n  private lastActiveSessionToken: string | null = null;\n  private apiProxy: ApiProxyClient | null = null;  // \uD83C\uDD95 NEW - For CSP-compliant API calls\n\n  constructor(\n    hostServiceUrl: string, \n    callbacks: AuthenticationCallbacks = {},\n    apiProxy?: ApiProxyClient  // \uD83C\uDD95 NEW - Optional API proxy for CSP compliance\n  ) {\n    this.hostServiceUrl = hostServiceUrl;\n    this.callbacks = callbacks;\n    this.apiProxy = apiProxy || null;  // \uD83C\uDD95 NEW - Store the API proxy instance\n    \n    // Subscribe to SessionManager changes to trigger session switching\n    this.setupSessionManagerSubscription();\n    \n    console.log('[AuthenticationService] Initialized');\n  }\n\n  /**\n   * Get current authentication context\n   */\n  getAuthContext(): InternalAuthContext | null {\n    return this.authContext;\n  }\n\n  /**\n   * Make API call with multi-phase retry strategy optimized for fast user experience\n   * Phase 1: Every 50ms for first 500ms (10 attempts) - iframe usually ready quickly\n   * Phase 2: Every 100ms for next 500ms (4 attempts) - reasonable fallback  \n   * Phase 3: Every 200ms for next 1000ms (4 attempts) - persistence for edge cases\n   * Phase 4: Final attempt at 3000ms (1 attempt) - last chance\n   */\n  private async makeApiCallWithRetry(\n    method: 'getUserCommunities' | 'getUserProfile', \n    params: any\n  ): Promise<any> {\n    if (!this.apiProxy || !this.authContext) {\n      throw new Error('API proxy or auth context not available');\n    }\n\n    // Define retry schedule: [delay_ms, phase_name]\n    const retrySchedule: Array<[number, string]> = [\n      // Phase 1: Aggressive early attempts (every 50ms for 500ms)\n      [0, 'Phase1'], [50, 'Phase1'], [100, 'Phase1'], [150, 'Phase1'], [200, 'Phase1'],\n      [250, 'Phase1'], [300, 'Phase1'], [350, 'Phase1'], [400, 'Phase1'], [450, 'Phase1'],\n      // Phase 2: Moderate fallback (every 100ms for next 500ms) \n      [600, 'Phase2'], [700, 'Phase2'], [800, 'Phase2'], [900, 'Phase2'],\n      // Phase 3: Patient persistence (every 200ms for next 1000ms)\n      [1200, 'Phase3'], [1400, 'Phase3'], [1600, 'Phase3'], [1800, 'Phase3'],\n      // Phase 4: Final attempt\n      [3000, 'Phase4']\n    ];\n\n    console.log(`[AuthenticationService] \uD83D\uDD04 Starting multi-phase API proxy calls for ${method} (${retrySchedule.length} attempts over 3s)`);\n    \n    const startTime = Date.now();\n    let lastError: Error | null = null;\n\n    for (let i = 0; i < retrySchedule.length; i++) {\n      const [targetDelay, phase] = retrySchedule[i];\n      const attempt = i + 1;\n      \n      // Wait for the target delay from start time\n      const elapsed = Date.now() - startTime;\n      const waitTime = Math.max(0, targetDelay - elapsed);\n      \n      if (waitTime > 0) {\n        await new Promise(resolve => setTimeout(resolve, waitTime));\n      }\n\n      try {\n        const actualElapsed = Date.now() - startTime;\n        console.log(`[AuthenticationService] \uD83C\uDFAF ${phase} attempt ${attempt}/${retrySchedule.length} for ${method} (${actualElapsed}ms elapsed)`);\n        \n        // Prepare request data for internal API call (no signing needed for same-process calls)\n        const requestData = {\n          method,\n          userId: this.authContext.userId,\n          communityId: this.authContext.communityId,\n          params\n        };\n\n        console.log(`[AuthenticationService] \uD83D\uDD04 Making internal API call for ${method} (no signature required)`);\n\n        const response = await this.apiProxy.makeApiRequest(requestData);\n\n        if (response.success) {\n          const successTime = Date.now() - startTime;\n          console.log(`[AuthenticationService] \u2705 API proxy SUCCESS for ${method} on ${phase} attempt ${attempt} (${successTime}ms total)`);\n          return response;\n        } else {\n          throw new Error(response.error || `API request failed for ${method}`);\n        }\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error));\n        \n        if (attempt === retrySchedule.length) {\n          const totalTime = Date.now() - startTime;\n          console.log(`[AuthenticationService] \u274C API proxy FINAL FAILURE for ${method} after ${retrySchedule.length} attempts (${totalTime}ms total):`, lastError.message);\n          break;\n        }\n\n        // Log failure but continue (no explicit delay - handled by schedule)\n        const failTime = Date.now() - startTime;\n        console.log(`[AuthenticationService] \u23F3 ${phase} attempt ${attempt} failed for ${method} (${failTime}ms elapsed):`, lastError.message);\n      }\n    }\n\n    throw lastError || new Error(`API proxy failed after ${retrySchedule.length} attempts for ${method}`);\n  }\n\n  /**\n   * Create and configure auth iframe\n   */\n  createAuthIframe(config: AuthConfig, container: HTMLElement): HTMLIFrameElement {\n    console.log('[AuthenticationService] Creating auth iframe');\n    \n    // Build auth iframe URL with theme and community parameters\n    const authUrl = new URL(`${this.hostServiceUrl}/embed`);\n    authUrl.searchParams.set('theme', config.theme || 'light');\n    \n    if (config.backgroundColor) {\n      authUrl.searchParams.set('background_color', config.backgroundColor);\n    }\n    if (config.community) {\n      authUrl.searchParams.set('community', config.community);\n      console.log('[AuthenticationService] Adding community parameter:', config.community);\n    }\n    if (config.mode) {\n      authUrl.searchParams.set('mode', config.mode);\n      console.log('[AuthenticationService] Adding mode parameter:', config.mode);\n    }\n    \n    // Add parent URL to auth iframe\n    if (config.parentUrl) {\n      const encodedParentUrl = encodeURIComponent(config.parentUrl);\n      authUrl.searchParams.set('cg_parent_url', encodedParentUrl);\n      console.log('[AuthenticationService] Adding parent URL:', config.parentUrl);\n    }\n    \n    // Add external parameters from parent page\n    if (config.externalParams) {\n      console.log('[AuthenticationService] Adding external parameters:', config.externalParams);\n      for (const [key, value] of Object.entries(config.externalParams)) {\n        authUrl.searchParams.set(key, value);\n      }\n    }\n    \n    // Create auth iframe\n    const iframe = document.createElement('iframe');\n    iframe.src = authUrl.toString();\n    iframe.style.width = config.width || '100%';\n    iframe.style.height = config.height || '700px';\n    iframe.style.border = 'none';\n    iframe.style.borderRadius = config.borderRadius || '8px';\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox');\n    iframe.setAttribute('allow', this.getIframePermissions());\n    \n    console.log('[AuthenticationService] Auth iframe created with theme:', config.theme);\n    return iframe;\n  }\n\n  /**\n   * Handle authentication completion from iframe\n   */\n  async handleAuthCompletion(authData: any): Promise<void> {\n    console.log('[AuthenticationService] Auth completion received:', authData);\n    \n    // Store auth context including external parameters and parent URL\n    this.authContext = {\n      userId: authData.userId,\n      communityId: authData.communityId,\n      sessionToken: authData.sessionToken,\n      externalParams: authData.externalParams,\n      parentUrl: authData.parentUrl\n    };\n    \n    console.log('[AuthenticationService] Auth context set:', this.authContext);\n    \n    // Notify parent about auth completion\n    if (this.callbacks.onAuthComplete) {\n      await this.callbacks.onAuthComplete(authData, this.authContext);\n    }\n  }\n\n  /**\n   * Fetch user's community memberships\n   * Direct API call (will work on non-CSP sites, may fail on strict CSP sites)\n   */\n  async fetchUserCommunities(): Promise<UserCommunityMembership[]> {\n    try {\n      console.log('[AuthenticationService] Fetching user communities...');\n      \n      if (!this.authContext?.sessionToken) {\n        console.log('[AuthenticationService] No session token available');\n        return [];\n      }\n\n      // \uD83C\uDFAF API PROXY ONLY: No fallback to direct fetch for cleaner testing\n      if (this.apiProxy && this.authContext) {\n        try {\n          console.log('[AuthenticationService] Using API proxy with retry logic for communities');\n          const proxyResponse = await this.makeApiCallWithRetry('getUserCommunities', {\n            sessionToken: this.authContext.sessionToken\n          });\n\n          if (proxyResponse.data?.userCommunities) {\n            console.log('[AuthenticationService] API proxy success:', proxyResponse.data.userCommunities.length, 'communities');\n            return proxyResponse.data.userCommunities.map((community: any) => ({\n              id: community.id,\n              name: community.name,\n              logoUrl: community.logoUrl || null,\n              userRole: community.userRole || 'member',\n              isMember: community.isMember\n            }));\n          }\n        } catch (proxyError) {\n          console.log('[AuthenticationService] \uD83D\uDEAB API proxy failed after all retries for communities:', proxyError);\n          \n          // \uD83C\uDFAF DEBUGGING: Log specific iframe availability issues\n          if (proxyError instanceof Error && proxyError.message.includes('Active iframe content window not available')) {\n            console.log('[AuthenticationService] \uD83D\uDD27 IFRAME ISSUE: API proxy iframe contentWindow not available - check iframe loading timing');\n          }\n          \n          console.log('[AuthenticationService] \uD83D\uDEAB Giving up on community fetch - returning empty list');\n          return [];\n        }\n      }\n\n      console.log('[AuthenticationService] \uD83D\uDEAB No API proxy available - returning empty communities');\n      return [];\n    } catch (error) {\n      console.error('[AuthenticationService] Error fetching user communities:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Fetch user profile information\n   * Direct API call (will work on non-CSP sites, may fail on strict CSP sites)\n   */\n  async fetchUserProfile(): Promise<UserProfile | null> {\n    try {\n      if (!this.authContext?.sessionToken) {\n        console.log('[AuthenticationService] No session token for user profile fetch');\n        return null;\n      }\n\n      // \uD83C\uDFAF API PROXY ONLY: No fallback to direct fetch for cleaner testing\n      if (this.apiProxy && this.authContext) {\n        try {\n          console.log('[AuthenticationService] Using API proxy with retry logic for profile');\n          const proxyResponse = await this.makeApiCallWithRetry('getUserProfile', {\n            sessionToken: this.authContext.sessionToken\n          });\n\n          if (proxyResponse.data?.user) {\n            console.log('[AuthenticationService] API proxy profile success');\n            return {\n              userId: proxyResponse.data.user.user_id,\n              name: proxyResponse.data.user.name,\n              profilePictureUrl: proxyResponse.data.user.profile_picture_url || null,\n              identityType: proxyResponse.data.user.identity_type || 'anonymous',\n              walletAddress: proxyResponse.data.user.wallet_address || null,\n              ensDomain: proxyResponse.data.user.ens_domain || null,\n              upAddress: proxyResponse.data.user.up_address || null,\n              isAnonymous: proxyResponse.data.user.is_anonymous\n            };\n          }\n        } catch (proxyError) {\n          console.log('[AuthenticationService] \uD83D\uDEAB API proxy failed after all retries for profile:', proxyError);\n          console.log('[AuthenticationService] \uD83D\uDEAB Giving up on profile fetch - returning null');\n          return null;\n        }\n      }\n\n      console.log('[AuthenticationService] \uD83D\uDEAB No API proxy available - returning null profile');\n      return null;\n    } catch (error) {\n      console.error('[AuthenticationService] Error fetching user profile:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Handle session switching (e.g., from account switcher)\n   */\n  async handleSessionSwitch(): Promise<void> {\n    console.log('[AuthenticationService] Handling session switch');\n    \n    try {\n      // Get the new active session\n      const activeSession = sessionManager.getActiveSession();\n      if (!activeSession) {\n        console.log('[AuthenticationService] No active session after switch');\n        if (this.callbacks.onSignOut) {\n          this.callbacks.onSignOut();\n        }\n        return;\n      }\n\n      // Update user profile from session\n      const userProfile: UserProfile = {\n        userId: activeSession.userId,\n        name: activeSession.name || 'Anonymous User',\n        profilePictureUrl: activeSession.profileImageUrl || null,\n        identityType: activeSession.identityType,\n        walletAddress: activeSession.walletAddress || null,\n        ensDomain: activeSession.ensName || null,\n        upAddress: activeSession.upAddress || null,\n        isAnonymous: activeSession.identityType === 'anonymous',\n      };\n\n      // Notify parent about session switch\n      if (this.callbacks.onSessionSwitch) {\n        await this.callbacks.onSessionSwitch(userProfile);\n      }\n\n      console.log('[AuthenticationService] Session switch completed');\n      \n    } catch (error) {\n      console.error('[AuthenticationService] Failed to handle session switch:', error);\n    }\n  }\n\n  /**\n   * Sign out current user\n   */\n  async signOut(): Promise<void> {\n    console.log('[AuthenticationService] Signing out user');\n    \n    // Clear auth context\n    this.authContext = null;\n    \n    // Clear session using SessionManager\n    try {\n      await sessionManager.removeActiveSession();\n      console.log('[AuthenticationService] Session cleared via SessionManager');\n    } catch (error) {\n      console.error('[AuthenticationService] Failed to clear session:', error);\n    }\n    \n    // Notify parent\n    if (this.callbacks.onSignOut) {\n      this.callbacks.onSignOut();\n    }\n  }\n\n  /**\n   * Subscribe to SessionManager changes to handle session switching\n   * Only triggers when the ACTIVE SESSION actually changes (not just any session data)\n   */\n  private setupSessionManagerSubscription(): void {\n    this.sessionManagerSubscription = sessionManager.subscribe((sessions, activeToken, activeSession) => {\n      // Only trigger handleSessionSwitch if:\n      // 1. We have an auth context (i.e., we're in an active embed, not just initializing)\n      // 2. The active session token has actually changed (not just session data updates)\n      if (this.authContext && activeToken !== this.lastActiveSessionToken) {\n        console.log('[AuthenticationService] Active session changed from', this.lastActiveSessionToken, 'to', activeToken);\n        console.log('[AuthenticationService] Triggering session switch (full reload)');\n        \n        // Update tracked token BEFORE triggering reload (since reload destroys this instance)\n        this.lastActiveSessionToken = activeToken;\n        \n        this.handleSessionSwitch();\n      } else if (activeToken !== this.lastActiveSessionToken) {\n        // Update tracked token even if we don't have auth context yet (initialization)\n        console.log('[AuthenticationService] Active session token updated (no auth context yet):', activeToken);\n        this.lastActiveSessionToken = activeToken;\n      }\n    });\n  }\n\n  /**\n   * Setup cross-tab session synchronization\n   */\n  setupCrossTabSessionListener(): void {\n    // Listen for session changes from other tabs\n    this.sessionListener = (event: MessageEvent) => {\n      if (event.data?.type === 'session-updated') {\n        console.log('[AuthenticationService] Cross-tab session update detected');\n        if (this.callbacks.onCrossTabSessionUpdate) {\n          this.callbacks.onCrossTabSessionUpdate();\n        }\n      }\n    };\n\n    window.addEventListener('message', this.sessionListener);\n    \n    // Listen for specific SessionManager cross-tab events (not all storage changes)\n    const crossTabListener = (event: Event) => {\n      // Only respond to SessionManager's specific cross-tab events\n      if (event instanceof CustomEvent && event.type === 'curia-session-change') {\n        console.log('[AuthenticationService] Cross-tab session change detected via custom event');\n        if (this.callbacks.onCrossTabSessionUpdate) {\n          this.callbacks.onCrossTabSessionUpdate();\n        }\n      }\n    };\n    \n    // Store reference for cleanup\n    this.crossTabListener = crossTabListener;\n    window.addEventListener('curia-session-change', crossTabListener);\n    \n    console.log('[AuthenticationService] Cross-tab session listener setup (using custom events)');\n  }\n\n  /**\n   * Get iframe permissions string\n   */\n  private getIframePermissions(): string {\n    return 'camera; microphone; geolocation; clipboard-write; clipboard-read; payment; autoplay; fullscreen';\n  }\n\n  /**\n   * Update the active community context for API requests\n   */\n  updateCommunityContext(communityId: string): void {\n    if (!this.authContext) {\n      console.error('[AuthenticationService] Cannot update community context - no auth context available');\n      return;\n    }\n\n    const previousCommunityId = this.authContext.communityId;\n    this.authContext.communityId = communityId;\n    \n    console.log(`[MULTI-IFRAME] [AuthenticationService] Community context updated:`);\n    console.log(`[MULTI-IFRAME] [AuthenticationService]   Previous: ${previousCommunityId}`);\n    console.log(`[MULTI-IFRAME] [AuthenticationService]   New: ${communityId}`);\n    console.log(`[MULTI-IFRAME] [AuthenticationService] API requests will now use community: ${communityId}`);\n  }\n\n  /**\n   * Clean up listeners and resources\n   */\n  destroy(): void {\n    if (this.sessionListener) {\n      window.removeEventListener('message', this.sessionListener);\n      this.sessionListener = undefined;\n    }\n    \n    if (this.crossTabListener) {\n      window.removeEventListener('curia-session-change', this.crossTabListener);\n      this.crossTabListener = undefined;\n    }\n    \n    if (this.sessionManagerSubscription) {\n      this.sessionManagerSubscription();\n      this.sessionManagerSubscription = undefined;\n    }\n    \n    this.authContext = null;\n    console.log('[AuthenticationService] Destroyed and cleaned up listeners');\n  }\n} ", "/**\n * FrontendSignatureValidator - Browser-compatible signature validation\n * \n * Validates cryptographic signatures created by CgPluginLibHost using Web Crypto API.\n * This runs in the browser (frontend) and validates signatures BEFORE data transformation.\n * \n * Key features:\n * - RSA-PKCS1-v1_5 with SHA-256 (matches CgPluginLibHost exactly)\n * - Identical data normalization (timestamp + recursive key sorting + JSON.stringify)\n * - Web Crypto API (browser-native, no Node.js dependencies)\n * - PEM key import with proper format handling\n * - Comprehensive error handling and logging\n */\n\n/**\n * Interface for data that can be signature-validated\n */\nexport interface SignableData {\n  method: string;\n  iframeUid?: string;\n  requestId?: string;\n  params?: any;\n  timestamp?: number;\n  [key: string]: any;\n}\n\n/**\n * Browser-compatible signature validation service\n */\nexport class FrontendSignatureValidator {\n  private publicKey: CryptoKey | null = null;\n  private publicKeyPem: string;\n  private isInitialized: boolean = false;\n\n  /**\n   * Initialize the validator with a PEM-formatted public key\n   * \n   * @param publicKeyPem - RSA public key in PEM format\n   */\n  constructor(publicKeyPem: string) {\n    this.publicKeyPem = publicKeyPem;\n  }\n\n  /**\n   * Initialize the validator by importing the public key\n   * This is called automatically on first validation attempt\n   */\n  public async initialize(): Promise<void> {\n    if (this.isInitialized) {\n      return;\n    }\n\n    try {\n      console.log('[FrontendSignatureValidator] Initializing with public key...');\n      \n      this.publicKey = await this.importPublicKey();\n      this.isInitialized = true;\n      \n      console.log('[FrontendSignatureValidator] \u2705 Initialized successfully');\n    } catch (error) {\n      console.error('[FrontendSignatureValidator] \u274C Initialization failed:', error);\n      throw new Error(`Failed to initialize signature validator: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Validate a cryptographic signature against the provided data\n   * \n   * @param data - The original data that was signed\n   * @param signature - Base64-encoded signature to validate\n   * @returns Promise<boolean> - Whether the signature is valid\n   */\n  public async validateSignature(data: SignableData, signature: string): Promise<boolean> {\n    try {\n      // Ensure validator is initialized\n      if (!this.isInitialized) {\n        await this.initialize();\n      }\n\n      if (!this.publicKey) {\n        throw new Error('Public key not available after initialization');\n      }\n\n      console.log('[FrontendSignatureValidator] \uD83D\uDD10 Validating signature for data:', {\n        method: data.method,\n        hasTimestamp: !!data.timestamp,\n        dataKeys: Object.keys(data)\n      });\n\n      // \uD83D\uDD0D SPECIAL DEBUG for getUserFriends method\n      if (data.method === 'getUserFriends') {\n        console.log('[FrontendSignatureValidator] \uD83D\uDD0D DEBUG getUserFriends - Original data:', JSON.stringify(data, null, 2));\n      }\n\n      // Step 1: Normalize data exactly like CgPluginLibHost does\n      const normalizedData = this.normalizeSignedData(data);\n      \n      // \uD83D\uDD0D DEBUG: Log normalized data and serialization\n      console.log('[FrontendSignatureValidator] \uD83D\uDD0D DEBUG - Normalized data:', JSON.stringify(normalizedData, null, 2));\n      const serializedData = JSON.stringify(normalizedData);\n      console.log('[FrontendSignatureValidator] \uD83D\uDD0D DEBUG - Serialized data:', serializedData);\n      console.log('[FrontendSignatureValidator] \uD83D\uDD0D DEBUG - Serialized length:', serializedData.length);\n      \n      // \uD83D\uDD0D EXTRA DEBUG for getUserFriends\n      if (data.method === 'getUserFriends') {\n        console.log('[FrontendSignatureValidator] \uD83D\uDD0D DEBUG getUserFriends - Normalized data:', JSON.stringify(normalizedData, null, 2));\n        console.log('[FrontendSignatureValidator] \uD83D\uDD0D DEBUG getUserFriends - Serialized for validation:', serializedData);\n      }\n      \n      // Step 2: Convert normalized data to bytes for verification\n      const dataBuffer = new TextEncoder().encode(serializedData);\n      \n      // Step 3: Decode base64 signature to bytes\n      const signatureBuffer = this.base64ToArrayBuffer(signature);\n      \n      // Step 4: Verify signature using Web Crypto API  \n      // TODO: We need to detect the algorithm used (ECDSA vs RSA)\n      // For now, let's try RSA first (original behavior)\n      const signatureAlgorithm = {\n        name: 'RSASSA-PKCS1-v1_5',\n      };\n      \n      // \uD83D\uDD0D DEBUG algorithm being used\n      console.log('[FrontendSignatureValidator] \uD83D\uDD0D Using signature algorithm:', JSON.stringify(signatureAlgorithm, null, 2));\n      \n      const isValid = await crypto.subtle.verify(\n        signatureAlgorithm,\n        this.publicKey,\n        signatureBuffer,\n        dataBuffer\n      );\n\n      console.log(`[FrontendSignatureValidator] ${isValid ? '\u2705' : '\u274C'} Signature validation result: ${isValid}`);\n      \n      return isValid;\n    } catch (error) {\n      console.error('[FrontendSignatureValidator] \u274C Signature validation error:', error);\n      return false; // Invalid signature on any error\n    }\n  }\n\n  /**\n   * Import RSA public key from PEM format using Web Crypto API\n   */\n  private async importPublicKey(): Promise<CryptoKey> {\n    try {\n      // Extract base64 content from PEM format\n      const pemHeader = '-----BEGIN PUBLIC KEY-----';\n      const pemFooter = '-----END PUBLIC KEY-----';\n      const pemContents = this.publicKeyPem\n        .replace(pemHeader, '')\n        .replace(pemFooter, '')\n        .replace(/\\s/g, ''); // Remove all whitespace including newlines\n\n      if (!pemContents) {\n        throw new Error('Invalid PEM format: No key content found');\n      }\n\n      // Convert base64 to ArrayBuffer\n      const binaryData = atob(pemContents);\n      const bytes = new Uint8Array(binaryData.length);\n      for (let i = 0; i < binaryData.length; i++) {\n        bytes[i] = binaryData.charCodeAt(i);\n      }\n\n      // Import key using Web Crypto API\n      const publicKey = await crypto.subtle.importKey(\n        'spki', // Subject Public Key Info format\n        bytes.buffer,\n        {\n          name: 'RSASSA-PKCS1-v1_5', // \u2705 CONFIRMED from CgPluginLibHost\n          hash: 'SHA-256',            // \u2705 CONFIRMED from CgPluginLibHost\n        },\n        false, // Not extractable\n        ['verify'] // Only for signature verification\n      );\n\n      return publicKey;\n    } catch (error) {\n      throw new Error(`Failed to import public key: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Normalize data for signing exactly like CgPluginLibHost does\n   * \n   * CRITICAL: This must match CgPluginLibHost.prepareDataForSigning() exactly!\n   * \n   * Process:\n   * 1. Add timestamp if not present (\u26A0\uFE0F Frontend receives already-signed data with timestamp)\n   * 2. Sort object keys recursively \n   * 3. Return normalized object (JSON.stringify happens in validateSignature)\n   */\n  private normalizeSignedData(data: SignableData): any {\n    // \u26A0\uFE0F IMPORTANT: Frontend validation receives data that was already signed.\n    // The timestamp was added during signing, so we DON'T add a new Date.now()\n    // We only add timestamp if somehow missing (edge case)\n    const dataWithTimestamp = {\n      ...data,\n      timestamp: data.timestamp || Date.now(), // Only add if missing\n    };\n\n    // Sort object keys recursively for consistent serialization\n    return this.sortObjectKeys(dataWithTimestamp);\n  }\n\n  /**\n   * Recursively sort object keys for consistent serialization\n   * \n   * \u2705 EXACT COPY of CgPluginLibHost.sortObjectKeys() method\n   */\n  private sortObjectKeys(obj: any): any {\n    if (obj === null || typeof obj !== 'object') {\n      return obj;\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(item => this.sortObjectKeys(item));\n    }\n\n    const sorted: any = {};\n    Object.keys(obj)\n      .sort()\n      .forEach(key => {\n        sorted[key] = this.sortObjectKeys(obj[key]);\n      });\n\n    return sorted;\n  }\n\n  /**\n   * Convert base64 string to ArrayBuffer for Web Crypto API\n   */\n  private base64ToArrayBuffer(base64: string): ArrayBuffer {\n    try {\n      const binaryString = atob(base64);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes.buffer;\n    } catch (error) {\n      throw new Error(`Invalid base64 signature format: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Static factory method to create validator from environment variable\n   * \n   * @returns FrontendSignatureValidator instance\n   * @throws Error if NEXT_PUBLIC_CURIA_PUBKEY is not configured\n   */\n  public static fromEnvironment(): FrontendSignatureValidator {\n    const publicKey = process.env.NEXT_PUBLIC_CURIA_PUBKEY;\n    \n    if (!publicKey) {\n      throw new Error('NEXT_PUBLIC_CURIA_PUBKEY environment variable is required for signature validation');\n    }\n\n    return new FrontendSignatureValidator(publicKey);\n  }\n\n  /**\n   * Static factory method to create validator from public key parameter\n   * \n   * @param publicKey - RSA public key in PEM format\n   * @returns FrontendSignatureValidator instance\n   */\n  public static fromPublicKey(publicKey: string): FrontendSignatureValidator {\n    if (!publicKey) {\n      throw new Error('Public key is required for signature validation');\n    }\n\n    return new FrontendSignatureValidator(publicKey);\n  }\n\n  /**\n   * Check if validator is ready for use\n   */\n  public isReady(): boolean {\n    return this.isInitialized && this.publicKey !== null;\n  }\n} ", "/**\n * MessageRouter Service\n * Handles all iframe messaging, API routing, and inter-frame communication\n * \n * Extracted from InternalPluginHost for better separation of concerns\n * Responsibilities:\n * - Set up message listeners for iframe communication\n * - Route API requests from iframe to host service via proxy\n * - Handle authentication completion messages\n * - Send responses and errors back to iframes\n * - Manage message routing between multiple embed instances\n */\n\nimport { ApiProxyClient } from '@curia_/iframe-api-proxy';\nimport { InternalAuthContext } from '../auth/AuthenticationService';\nimport { FrontendSignatureValidator } from '../signature';\n\nexport enum InternalMessageType {\n  API_REQUEST = 'api_request',\n  API_RESPONSE = 'api_response',\n  INIT = 'init',\n  ERROR = 'error',\n  SIDEBAR_ACTION = 'sidebar_action'  // \uD83C\uDD95 NEW - For sending sidebar actions to forum\n}\n\nexport interface InternalPluginMessage {\n  type: InternalMessageType;\n  iframeUid: string;\n  requestId: string;\n  method?: string;\n  params?: any;\n  data?: any;\n  error?: string;\n  signature?: string;\n  timestamp?: number; // \u2705 Add timestamp field to match signed data\n}\n\n/**\n * Extends InternalPluginMessage for sidebar actions\n */\ninterface SidebarActionMessage extends InternalPluginMessage {\n  type: InternalMessageType.SIDEBAR_ACTION;\n  action: 'search' | 'messages' | 'notifications';\n  payload?: any;\n}\n\nexport interface MessageRouterCallbacks {\n  onAuthComplete?: (data: any) => Promise<void>;\n  onForumInit?: () => void;\n  getAuthContext?: () => InternalAuthContext | null;\n  onCommunitySwitchRequest?: (communityId: string, options?: any) => Promise<any>;\n  onCommunityDiscoveryComplete?: (data: any) => Promise<void>;\n  onAddSessionComplete?: (data: any) => Promise<void>;\n  onApiProxyReady?: (iframeWindow: Window) => void;\n  getActiveIframe?: () => HTMLIFrameElement | null;  // \uD83C\uDD95 NEW - Get currently active iframe\n}\n\nexport class MessageRouter {\n  private apiProxy: ApiProxyClient;\n  private callbacks: MessageRouterCallbacks;\n  private messageListener?: (event: MessageEvent) => void;\n  private myUid: string;\n  private signatureValidator: FrontendSignatureValidator;\n\n  constructor(\n    myUid: string,\n    apiProxy: ApiProxyClient,\n    callbacks: MessageRouterCallbacks = {},\n    publicKey?: string\n  ) {\n    // Use the shared API proxy client (don't create a new one!)\n    this.apiProxy = apiProxy;\n    this.myUid = myUid;\n    this.callbacks = callbacks;\n    \n    // Initialize signature validator for frontend validation\n    if (publicKey) {\n      // Use provided public key (for embed script)\n      this.signatureValidator = FrontendSignatureValidator.fromPublicKey(publicKey);\n    } else {\n      // Use environment variable (for Next.js components)\n      this.signatureValidator = FrontendSignatureValidator.fromEnvironment();\n    }\n    \n    console.log('[MessageRouter] Initialized with shared API proxy client and signature validator');\n  }\n\n  /**\n   * Set up message listener for all plugin communication\n   */\n  setupMessageListener(): void {\n    // Store listener reference for proper cleanup\n    this.messageListener = (event: MessageEvent) => {\n      this.handleMessage(event);\n    };\n    \n    window.addEventListener('message', this.messageListener);\n    console.log('[MessageRouter] Message listener attached for UID:', this.myUid);\n  }\n\n  /**\n   * Handle all incoming messages\n   */\n  private async handleMessage(event: MessageEvent): Promise<void> {\n    if (!event.data || typeof event.data !== 'object') {\n      return;\n    }\n\n    // Handle auth completion from embed iframe\n    if (event.data.type === 'curia-auth-complete') {\n      if (this.callbacks.onAuthComplete) {\n        await this.callbacks.onAuthComplete(event.data);\n      }\n      return;\n    }\n\n    // Handle community discovery completion from embed iframe\n    if (event.data.type === 'curia-community-discovery-complete') {\n      if (this.callbacks.onCommunityDiscoveryComplete) {\n        await this.callbacks.onCommunityDiscoveryComplete(event.data);\n      }\n      return;\n    }\n\n    // Handle add session completion from embed iframe\n    if (event.data.type === 'curia-add-session-complete') {\n      if (this.callbacks.onAddSessionComplete) {\n        await this.callbacks.onAddSessionComplete(event.data);\n      }\n      return;\n    }\n\n    // Handle API proxy ready notification from iframe\n    if (event.data.type === 'curia-api-proxy-ready') {\n      console.log('[MessageRouter] API proxy ready notification received');\n      if (this.callbacks.onApiProxyReady) {\n        this.callbacks.onApiProxyReady(event.source as Window);\n      }\n      return;\n    }\n\n    // Handle API requests from forum\n    const message = event.data as InternalPluginMessage;\n    if (message.type === InternalMessageType.API_REQUEST) {\n      await this.handleApiRequest(message, event.source as Window);\n      return;\n    }\n\n    // Handle other message types\n    if (message.type === InternalMessageType.INIT) {\n      console.log('[MessageRouter] Forum initialized');\n      if (this.callbacks.onForumInit) {\n        this.callbacks.onForumInit();\n      }\n      return;\n    }\n  }\n\n  /**\n   * Handle API requests from forum iframe\n   */\n  private async handleApiRequest(message: InternalPluginMessage, source: Window): Promise<void> {\n    try {\n      console.log('[MessageRouter] API request:', message.method, message.params);\n      \n      // Get auth context from callback\n      const authContext = this.callbacks.getAuthContext?.();\n      if (!authContext) {\n        throw new Error('No authentication context available');\n      }\n\n      // Instance-based UID filtering - only handle our own messages\n      if (message.iframeUid !== this.myUid) {\n        // Silently ignore messages from other embed instances\n        return;\n      }\n\n      // Validate method is provided and supported\n      if (!message.method || !this.isMethodSupported(message.method)) {\n        throw new Error(`Unknown API method: ${message.method}`);\n      }\n\n      // \uD83D\uDD10 FRONTEND SIGNATURE VALIDATION: Validate iframe request before transformation\n      if (message.signature) {\n        console.log('[MessageRouter] \uD83D\uDD10 Validating signature (frontend Web Crypto API)');\n        \n        // \uD83D\uDD0D SPECIAL DEBUG for getUserFriends method\n        if (message.method === 'getUserFriends') {\n          console.log('[MessageRouter] \uD83D\uDD0D DEBUG getUserFriends - Full message:', JSON.stringify(message, null, 2));\n          console.log('[MessageRouter] \uD83D\uDD0D DEBUG getUserFriends - Params structure:', {\n            params: message.params,\n            paramsType: typeof message.params,\n            paramsKeys: message.params ? Object.keys(message.params) : 'no params'\n          });\n        }\n        \n        try {\n          // Reconstruct original signed data (what CgPluginLib actually signed)\n          const originalSignedData: any = {\n            method: message.method,\n            iframeUid: message.iframeUid,\n            requestId: message.requestId,\n            timestamp: message.timestamp // \u2705 Use timestamp from message\n          };\n          \n          // Only include params if it exists and is not undefined (matches signing behavior)\n          if (message.params !== undefined) {\n            originalSignedData.params = message.params;\n          }\n\n          // \uD83D\uDD0D DEBUG: Log exactly what we're validating\n          console.log('[MessageRouter] \uD83D\uDD0D DEBUG - Message received:', JSON.stringify(message, null, 2));\n          console.log('[MessageRouter] \uD83D\uDD0D DEBUG - Data for validation:', JSON.stringify(originalSignedData, null, 2));\n          console.log('[MessageRouter] \uD83D\uDD0D DEBUG - Signature length:', message.signature?.length);\n\n          // \uD83D\uDD0D EXTRA DEBUG for getUserFriends\n          if (message.method === 'getUserFriends') {\n            console.log('[MessageRouter] \uD83D\uDD0D DEBUG getUserFriends - About to validate signature with data:', JSON.stringify(originalSignedData, null, 2));\n          }\n\n          // Validate signature using browser-native Web Crypto API\n          const isValid = await this.signatureValidator.validateSignature(originalSignedData, message.signature);\n          \n          if (!isValid) {\n            // \uD83D\uDD0D EXTRA DEBUG for getUserFriends failures\n            if (message.method === 'getUserFriends') {\n              console.error('[MessageRouter] \u274C getUserFriends signature validation FAILED');\n              console.error('[MessageRouter] \u274C Failed data:', JSON.stringify(originalSignedData, null, 2));\n              console.error('[MessageRouter] \u274C Failed signature:', message.signature);\n            }\n            throw new Error('Invalid signature - request rejected');\n          }\n          \n          console.log('[MessageRouter] \u2705 Frontend signature validation passed');\n          \n          // \uD83D\uDD0D SUCCESS DEBUG for getUserFriends\n          if (message.method === 'getUserFriends') {\n            console.log('[MessageRouter] \uD83C\uDF89 getUserFriends signature validation PASSED!');\n          }\n        } catch (error) {\n          console.error('[MessageRouter] \u274C Frontend signature validation failed:', error);\n          \n          // \uD83D\uDD0D EXTRA DEBUG for getUserFriends failures\n          if (message.method === 'getUserFriends') {\n            console.error('[MessageRouter] \u274C getUserFriends signature validation ERROR:', error);\n          }\n          \n          this.sendError(source, message, `Signature validation failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n          return;\n        }\n      } else {\n        // No signature means this should be an internal call, but iframe requests should always have signatures\n        console.warn('[MessageRouter] \u26A0\uFE0F No signature provided for iframe request - this might be a security issue');\n      }\n\n      // Handle community switching requests locally (not via API proxy)\n      if (message.method === 'switchCommunity') {\n        console.log('[MessageRouter] Handling community switch request:', message.params);\n        \n        if (!this.callbacks.onCommunitySwitchRequest) {\n          throw new Error('Community switching not supported - no callback registered');\n        }\n\n        const { communityId, options } = message.params;\n        if (!communityId) {\n          throw new Error('Missing communityId parameter for community switch');\n        }\n\n        const switchResult = await this.callbacks.onCommunitySwitchRequest(communityId, options);\n        this.sendResponse(source, message, switchResult);\n        return;\n      }\n\n      // Use API proxy client to make request (bypasses CSP restrictions)\n      console.log('[MessageRouter] Making API request via proxy:', message.method);\n      console.log('[MessageRouter] Auth context:', {\n        communityId: authContext.communityId,\n        userId: authContext.userId\n      });\n      console.log('[MessageRouter] Signature present:', !!message.signature);\n      console.log(`[MULTI-IFRAME] [MessageRouter] API request \"${message.method}\" using community context: ${authContext.communityId}`);\n      \n      const result = await this.apiProxy.makeApiRequest({\n        method: message.method as any,\n        params: message.params,\n        communityId: authContext.communityId,\n        userId: authContext.userId,\n        signature: message.signature\n      });\n\n      console.log('[MessageRouter] API proxy response:', result);\n      \n      if (result.success) {\n        // Send successful response\n        this.sendResponse(source, message, result.data);\n      } else {\n        throw new Error(result.error || 'API request failed');\n      }\n      \n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      console.error('[MessageRouter] API error:', errorMessage);\n      this.sendError(source, message, errorMessage);\n    }\n  }\n\n  /**\n   * Send successful response to forum\n   */\n  private sendResponse(source: Window, originalMessage: InternalPluginMessage, data: any): void {\n    const response: InternalPluginMessage = {\n      type: InternalMessageType.API_RESPONSE,\n      iframeUid: originalMessage.iframeUid,\n      requestId: originalMessage.requestId,\n      data: data\n    };\n    \n    source.postMessage(response, '*');\n    console.log('[MessageRouter] Response sent for request:', originalMessage.requestId);\n  }\n\n  /**\n   * Send error response to forum\n   */\n  private sendError(source: Window, originalMessage: InternalPluginMessage, error: string): void {\n    const response: InternalPluginMessage = {\n      type: InternalMessageType.API_RESPONSE,\n      iframeUid: originalMessage.iframeUid,\n      requestId: originalMessage.requestId,\n      error: error\n    };\n    \n    source.postMessage(response, '*');\n    console.log('[MessageRouter] Error response sent for request:', originalMessage.requestId, error);\n  }\n\n  /**\n   * Check if API method is supported\n   */\n  private isMethodSupported(method: string): boolean {\n    const supportedMethods = [\n      'getUserInfo',\n      'getUserFriends', \n      'getContextData',\n      'getCommunityInfo',\n      'giveRole',\n      'switchCommunity',\n      'getUserCommunities',  // \uD83C\uDFAF For fetchUserCommunities() - bypasses CSP\n      'getUserProfile',      // \uD83C\uDFAF For fetchUserProfile() - bypasses CSP\n      'getIrcCredentials'    // \uD83C\uDFAF For IRC chat functionality - handled directly by PluginHost\n    ];\n    \n    return supportedMethods.includes(method);\n  }\n\n  /**\n   * Send a message to an iframe\n   */\n  sendMessageToIframe(iframe: HTMLIFrameElement, message: InternalPluginMessage): void {\n    if (iframe.contentWindow) {\n      iframe.contentWindow.postMessage(message, '*');\n      console.log('[MessageRouter] Message sent to iframe:', message.type, message.requestId);\n    }\n  }\n\n  /**\n   * Send a sidebar action to the currently active iframe\n   */\n  sendSidebarAction(action: 'search' | 'messages' | 'notifications', payload?: any): void {\n    // Get the currently active iframe from callback\n    const activeIframe = this.callbacks.getActiveIframe?.();\n    if (!activeIframe) {\n      console.warn('[MessageRouter] No active iframe available for sidebar action:', action);\n      return;\n    }\n\n    // Create sidebar action message\n    const message: SidebarActionMessage = {\n      type: InternalMessageType.SIDEBAR_ACTION,\n      action,\n      payload,\n      iframeUid: this.myUid,\n      requestId: `sidebar_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n\n    // Send to active iframe\n    this.sendMessageToIframe(activeIframe, message);\n    console.log(`[MessageRouter] Sidebar action sent: ${action}`, payload);\n  }\n\n  /**\n   * Update the unique identifier for this embed instance\n   */\n  updateUid(newUid: string): void {\n    this.myUid = newUid;\n    console.log('[MessageRouter] UID updated to:', newUid);\n  }\n\n  /**\n   * Clean up message listeners and resources\n   */\n  destroy(): void {\n    if (this.messageListener) {\n      window.removeEventListener('message', this.messageListener);\n      this.messageListener = undefined;\n      console.log('[MessageRouter] Message listener removed');\n    }\n  }\n} ", "/**\n * IframeManager Service\n * Handles iframe lifecycle, creation, URL building, and DOM management\n * \n * Extracted from InternalPluginHost for better separation of concerns\n * Responsibilities:\n * - Create and configure auth iframes\n * - Create and configure forum iframes\n * - Generate unique iframe UIDs\n * - Handle iframe URL building with parameters\n * - Manage iframe permissions and security attributes\n * - Clean up iframe-related DOM elements\n * - Handle iframe switching between auth and forum phases\n */\n\nimport { ApiProxyClient } from '@curia_/iframe-api-proxy';\nimport { InternalAuthContext } from '../auth/AuthenticationService';\nimport { EmbedConfig } from '../../types/EmbedTypes';\n\nexport interface IframeManagerCallbacks {\n  onIframeSwitch?: (iframe: HTMLIFrameElement, type: 'auth' | 'forum') => void;\n}\n\nexport class IframeManager {\n  private hostServiceUrl: string;\n  private forumUrl: string;\n  private apiProxy: ApiProxyClient;\n  private callbacks: IframeManagerCallbacks;\n  private currentIframe: HTMLIFrameElement | null = null;\n  private myUid: string;\n\n  constructor(\n    hostServiceUrl: string,\n    forumUrl: string,\n    apiProxy: ApiProxyClient,\n    callbacks: IframeManagerCallbacks = {}\n  ) {\n    this.hostServiceUrl = hostServiceUrl;\n    this.forumUrl = forumUrl;\n    this.apiProxy = apiProxy;\n    this.callbacks = callbacks;\n    this.myUid = this.generateIframeUid();\n  }\n\n  /**\n   * Get the current iframe UID\n   */\n  getUid(): string {\n    return this.myUid;\n  }\n\n  /**\n   * Get the currently active iframe\n   */\n  getCurrentIframe(): HTMLIFrameElement | null {\n    return this.currentIframe;\n  }\n\n  /**\n   * Generate unique iframe UID\n   */\n  private generateIframeUid(): string {\n    const timestamp = Date.now().toString(36).toUpperCase();\n    const random = Math.random().toString(36).substring(2, 8).toUpperCase();\n    return `${timestamp}${random}`.substring(0, 10);\n  }\n\n  /**\n   * Create auth iframe with proper configuration\n   */\n  createAuthIframe(config: EmbedConfig): HTMLIFrameElement {\n    console.log('[IframeManager] Creating auth iframe');\n    \n    // Build auth iframe URL\n    const authUrl = new URL(`${this.hostServiceUrl}/embed`);\n    \n    // Theme resolution - consistent with forum iframe\n    let resolvedTheme = config.theme || 'light';\n    if (resolvedTheme === 'auto') {\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        resolvedTheme = 'dark';\n      } else {\n        resolvedTheme = 'light';\n      }\n      console.log('[IframeManager] Resolved auto theme to:', resolvedTheme);\n    }\n    \n    authUrl.searchParams.set('theme', resolvedTheme);\n    \n    if (config.backgroundColor) {\n      authUrl.searchParams.set('background_color', config.backgroundColor);\n    }\n    if (config.community) {\n      authUrl.searchParams.set('community', config.community);\n    }\n    if (config.mode) {\n      authUrl.searchParams.set('mode', config.mode);\n    }\n    \n    // Add parent URL to auth iframe\n    if (config.parentUrl) {\n      const encodedParentUrl = encodeURIComponent(config.parentUrl);\n      authUrl.searchParams.set('cg_parent_url', encodedParentUrl);\n    }\n    \n    // Add external parameters from parent page\n    if (config.externalParams) {\n      for (const [key, value] of Object.entries(config.externalParams)) {\n        authUrl.searchParams.set(key, value);\n      }\n    }\n    \n    // Create iframe\n    const iframe = document.createElement('iframe');\n    iframe.src = authUrl.toString();\n    iframe.style.width = config.width || '100%';\n    iframe.style.height = config.height || '700px';\n    iframe.style.border = 'none';\n    iframe.style.borderRadius = config.borderRadius || '8px';\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox');\n    iframe.setAttribute('allow', this.getIframePermissions());\n    \n    this.currentIframe = iframe;\n    \n    // \uD83C\uDFAF CRITICAL FIX: Set auth iframe as active iframe for API proxy during auth phase\n    this.apiProxy.setActiveIframe(iframe);\n    console.log('[IframeManager] API proxy client configured for auth iframe:', {\n      iframeSrc: iframe.src,\n      hasContentWindow: !!iframe.contentWindow\n    });\n    \n    // Notify callback\n    if (this.callbacks.onIframeSwitch) {\n      this.callbacks.onIframeSwitch(iframe, 'auth');\n    }\n    \n    console.log('[IframeManager] Auth iframe created');\n    return iframe;\n  }\n\n  /**\n   * Create forum iframe with auth context and configuration\n   */\n  createForumIframe(\n    config: EmbedConfig,\n    authContext: InternalAuthContext,\n    targetContainer: HTMLElement\n  ): HTMLIFrameElement {\n    console.log('[IframeManager] Creating forum iframe');\n    \n    // Build forum URL with parameters\n    const forumUrl = new URL(this.forumUrl);\n    forumUrl.searchParams.set('mod', 'standalone');\n    \n    // Theme resolution\n    let resolvedTheme = config.theme || 'light';\n    if (resolvedTheme === 'auto') {\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        resolvedTheme = 'dark';\n      } else {\n        resolvedTheme = 'light';\n      }\n      console.log('[IframeManager] Resolved auto theme to:', resolvedTheme);\n    }\n    \n    forumUrl.searchParams.set('cg_theme', resolvedTheme);\n    if (config.backgroundColor) {\n      forumUrl.searchParams.set('cg_bg_color', config.backgroundColor);\n    }\n    forumUrl.searchParams.set('iframeUid', this.myUid);\n    \n    // Add parent URL parameter ONLY if community is pre-specified\n    if (config.community && config.parentUrl) {\n      const encodedParentUrl = encodeURIComponent(config.parentUrl);\n      forumUrl.searchParams.set('cg_parent_url', encodedParentUrl);\n      console.log('[IframeManager] Adding parent URL (community pre-specified):', config.parentUrl);\n    }\n    \n    // Add external parameters to forum URL\n    if (authContext.externalParams) {\n      console.log('[IframeManager] Adding external parameters to forum iframe:', authContext.externalParams);\n      for (const [key, value] of Object.entries(authContext.externalParams)) {\n        forumUrl.searchParams.set(key, value);\n      }\n    }\n    \n    console.log('[IframeManager] Forum URL:', forumUrl.toString());\n    \n    // Create forum iframe - use 100% to fill the properly-sized container\n    const iframe = document.createElement('iframe');\n    iframe.src = forumUrl.toString();\n    iframe.style.width = '100%';\n    iframe.style.height = '100%';\n    iframe.style.border = 'none';\n    iframe.style.margin = '0';\n    iframe.style.padding = '0';\n    iframe.style.display = 'block';\n    iframe.style.verticalAlign = 'top';\n    // Only apply border radius to right side since sidebar is always present on left\n    const borderRadius = config.borderRadius || '8px';\n    iframe.style.borderRadius = `0 ${borderRadius} ${borderRadius} 0`;\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox');\n    iframe.setAttribute('allow', this.getIframePermissions());\n    \n    console.log('[IframeManager] Forum iframe set to fill container (100% x 100%)');\n    \n    // Add iframe to container\n    targetContainer.appendChild(iframe);\n    this.currentIframe = iframe;\n    \n    // Set forum iframe as active iframe for API proxy\n    this.apiProxy.setActiveIframe(iframe);\n    console.log('[IframeManager] API proxy client configured for forum iframe:', {\n      iframeSrc: iframe.src,\n      hasContentWindow: !!iframe.contentWindow\n    });\n    \n    // Notify callback\n    if (this.callbacks.onIframeSwitch) {\n      this.callbacks.onIframeSwitch(iframe, 'forum');\n    }\n    \n    console.log('[IframeManager] Forum iframe created and added to container');\n    return iframe;\n  }\n\n  /**\n   * Reload the current iframe (useful for session switches)\n   */\n  reloadCurrentIframe(): void {\n    if (this.currentIframe) {\n      console.log('[IframeManager] Reloading current iframe');\n      const currentSrc = this.currentIframe.src;\n      this.currentIframe.src = currentSrc;\n    }\n  }\n\n  /**\n   * Update iframe with new URL parameters\n   */\n  updateIframeUrl(iframe: HTMLIFrameElement, newParams: Record<string, string>): void {\n    const url = new URL(iframe.src);\n    \n    // Add new parameters\n    for (const [key, value] of Object.entries(newParams)) {\n      url.searchParams.set(key, value);\n    }\n    \n    iframe.src = url.toString();\n    console.log('[IframeManager] Updated iframe URL with new parameters');\n  }\n\n  /**\n   * Clean up iframe-related portal elements\n   */\n  cleanupPortalElements(): void {\n    console.log('[IframeManager] Cleaning up iframe portal elements');\n    \n    // Clean up portal elements (community previews, user profile menu)\n    const portals = document.querySelectorAll('.community-preview, .user-profile-menu');\n    portals.forEach(portal => {\n      console.log('[IframeManager] Removing portal element:', portal.className);\n      portal.remove();\n    });\n    \n    console.log('[IframeManager] Portal elements cleanup complete');\n  }\n\n  /**\n   * Remove current iframe and clean up references\n   */\n  removeCurrentIframe(): void {\n    if (this.currentIframe) {\n      console.log('[IframeManager] Removing current iframe');\n      \n      // Remove from DOM\n      if (this.currentIframe.parentNode) {\n        this.currentIframe.parentNode.removeChild(this.currentIframe);\n      }\n      \n      // Clear reference\n      this.currentIframe = null;\n      \n      console.log('[IframeManager] Current iframe removed');\n    }\n  }\n\n  /**\n   * Get iframe permissions string for security attributes\n   */\n  private getIframePermissions(): string {\n    return [\n      'clipboard-write *',\n      'clipboard-read *', \n      'fullscreen *',\n      'web-share *',\n      'autoplay *',\n      'picture-in-picture *',\n      'payment *',\n      'encrypted-media *',\n      'storage-access *',\n      'camera *',\n      'microphone *',\n      'geolocation *'\n    ].join('; ');\n  }\n\n  /**\n   * Regenerate UID (useful for new sessions)\n   */\n  regenerateUid(): string {\n    this.myUid = this.generateIframeUid();\n    console.log('[IframeManager] Generated new UID:', this.myUid);\n    return this.myUid;\n  }\n\n  /**\n   * Clean up resources and references\n   */\n  destroy(): void {\n    console.log('[IframeManager] Destroying iframe manager');\n    \n    // Clean up portal elements\n    this.cleanupPortalElements();\n    \n    // Remove current iframe\n    this.removeCurrentIframe();\n    \n    console.log('[IframeManager] Iframe manager destroyed');\n  }\n} ", "/**\n * Embed Script Entry Point\n * \n * This is the main entry point for the embed.js bundle.\n * It imports the actual TypeScript classes and creates a self-contained script.\n */\n\nimport { EmbedConfig } from './types/EmbedTypes';\nimport { parseEmbedConfig } from './core/EmbedConfig';\nimport { InternalPluginHost } from './plugin-host/InternalPluginHost';\n\n// Use global interface from EmbedTypes (avoids circular import issues)\n// window.curiaEmbed will be InternalPluginHost but typed as any\n\n// Get environment values (injected at build time via esbuild define)\ndeclare const CURIA_HOST_URL: string;\ndeclare const CURIA_FORUM_URL: string;\ndeclare const CURIA_PUBLIC_KEY: string;\n\n// Capture script element during initial execution when document.currentScript works\nconst EMBED_SCRIPT_ELEMENT = document.currentScript as HTMLScriptElement;\n\n// Validate that we have the script element\nif (!EMBED_SCRIPT_ELEMENT) {\n  console.error('[Embed] Failed to capture script element during initialization');\n}\n\n/**\n * Extract curia_* parameters from parent page URL\n * Converts curia_highlight=comment-123 to ext_highlight=comment-123\n */\nfunction extractCuriaParameters(): Record<string, string> {\n  const params = new URLSearchParams(window.location.search);\n  const curiaParams: Record<string, string> = {};\n  \n  console.log('[Embed] Checking parent page URL for curia_* parameters:', window.location.search);\n  \n  for (const [key, value] of params) {\n    if (key.startsWith('curia_')) {\n      const cleanKey = key.substring(6); // Remove 'curia_' prefix\n      const externalKey = `ext_${cleanKey}`; // Add 'ext_' prefix\n      curiaParams[externalKey] = value;\n      console.log(`[Embed] Found curia parameter: ${key}=${value} \u2192 ${externalKey}=${value}`);\n    }\n  }\n  \n  return curiaParams;\n}\n\n/**\n * Strip curia_* parameters from parent page URL\n * Preserves all other query parameters but removes our internal curia_* params\n */\nfunction stripCuriaParameters(url: string): string {\n  try {\n    const urlObj = new URL(url);\n    \n    // Collect all curia_* parameter keys to delete\n    const keysToDelete: string[] = [];\n    for (const [key] of urlObj.searchParams) {\n      if (key.startsWith('curia_')) {\n        keysToDelete.push(key);\n      }\n    }\n    \n    // Delete all curia_* parameters\n    for (const key of keysToDelete) {\n      urlObj.searchParams.delete(key);\n    }\n    \n    if (keysToDelete.length > 0) {\n      console.log('[Embed] Stripped curia_* parameters:', keysToDelete);\n    }\n    \n    return urlObj.toString();\n  } catch (error) {\n    console.warn('[Embed] Failed to parse parent URL, using original:', url);\n    return url;\n  }\n}\n\n// Main embed initialization function\nfunction initializeEmbed() {\n  console.log('[Embed] Initializing Curia embed script...');\n\n  try {\n    // Capture parent page URL and strip curia_* parameters to prevent recursion\n    const rawParentUrl = window.location.href;\n    const parentUrl = stripCuriaParameters(rawParentUrl);\n    console.log('[Embed] Raw parent page URL:', rawParentUrl);\n    console.log('[Embed] Clean parent page URL (curia_* stripped):', parentUrl);\n    \n    // Extract external parameters from parent page URL\n    const externalParams = extractCuriaParameters();\n    \n    // Parse configuration from script attributes using captured script element\n    // If capture failed, parseEmbedConfig will try document.currentScript as fallback\n    const config = parseEmbedConfig(EMBED_SCRIPT_ELEMENT);\n    \n    // Add parent URL to config\n    config.parentUrl = parentUrl;\n    \n    // Add external parameters to config\n    if (Object.keys(externalParams).length > 0) {\n      config.externalParams = externalParams;\n      console.log('[Embed] External parameters added to config:', externalParams);\n    }\n    \n    console.log('[Embed] Final parsed config:', config);\n\n    // Find or create target container\n    const containerId = config.container || 'curia-forum';\n    let container = document.getElementById(containerId);\n    \n    if (!container) {\n      console.log(`[Embed] Container \"${containerId}\" not found, creating it`);\n      container = document.createElement('div');\n      container.id = containerId;\n      \n      // Try to insert next to script element, otherwise append to body\n      if (EMBED_SCRIPT_ELEMENT?.parentNode) {\n        EMBED_SCRIPT_ELEMENT.parentNode.insertBefore(container, EMBED_SCRIPT_ELEMENT.nextSibling);\n      } else {\n        console.warn('[Embed] No script element available, appending container to body');\n        document.body.appendChild(container);\n      }\n    }\n\n    // Clean up any existing embed instance\n    if (window.curiaEmbed) {\n      console.log('[Embed] Cleaning up existing embed instance');\n      window.curiaEmbed.destroy();\n      delete window.curiaEmbed;\n    }\n\n    // Create new embed instance using the real TypeScript class\n    console.log('[Embed] Creating InternalPluginHost instance');\n    const embedInstance = new InternalPluginHost(\n      container,\n      config,\n      CURIA_HOST_URL,\n      CURIA_FORUM_URL,\n      CURIA_PUBLIC_KEY\n    );\n\n    // Store global reference for cleanup\n    window.curiaEmbed = embedInstance;\n    \n    console.log('[Embed] Embed initialized successfully');\n    \n  } catch (error) {\n    console.error('[Embed] Failed to initialize embed:', error);\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initializeEmbed);\n} else {\n  // DOM already loaded, initialize immediately\n  initializeEmbed();\n} "],
  "mappings": "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",
  "names": ["MessageType", "ProxyErrorType", "ApiProxyClient", "userName", "hasProfileImage", "gradientClass", "gradientStyle", "name", "community"]
}
