{
  "version": 3,
  "sources": ["../node_modules/@curia_/iframe-api-proxy/src/types/ApiTypes.ts", "../node_modules/@curia_/iframe-api-proxy/src/types/MessageTypes.ts", "../node_modules/@curia_/iframe-api-proxy/src/types/ProxyTypes.ts", "../node_modules/@curia_/iframe-api-proxy/src/client/ApiProxyClient.ts", "../node_modules/@curia_/iframe-api-proxy/src/server/ApiProxyServer.ts", "../node_modules/@curia_/iframe-api-proxy/src/index.ts", "../src/lib/embed/core/EmbedConfig.ts", "../src/lib/embed/plugin-host/InternalPluginHost.ts", "../src/lib/SessionManager.ts", "../src/lib/embed/styling/utils/gradients.ts", "../src/lib/embed/styling/utils/icons.ts", "../src/lib/embed/components/sidebar/CommunityItem.ts", "../src/lib/embed/components/sidebar/CommunityPreview.ts", "../src/lib/embed/components/profile/UserProfile.ts", "../src/lib/embed/components/sidebar/CommunitySidebar.ts", "../src/lib/embed/services/auth/AuthenticationService.ts", "../src/lib/embed/services/messaging/MessageRouter.ts", "../src/lib/embed/services/iframe/IframeManager.ts", "../src/lib/embed/embed-entry.ts"],
  "sourcesContent": [null, null, null, null, null, null, "/**\n * Embed Configuration Module\n * \n * Handles parsing configuration from script data attributes\n */\n\nimport { EmbedConfig } from '../types/EmbedTypes';\n\n/**\n * Parse configuration from script data attributes\n */\nexport function parseEmbedConfig(scriptElement?: HTMLScriptElement): EmbedConfig {\n  // Get the script element - either passed in or from document.currentScript\n  const script = scriptElement || (document.currentScript as HTMLScriptElement);\n  if (!script) {\n    throw new Error('[Curia] Could not find script element');\n  }\n\n  // Read configuration from data attributes\n  const config: EmbedConfig = {\n    community: script.getAttribute('data-community') || null,\n    theme: (script.getAttribute('data-theme') as 'light' | 'dark' | 'auto') || 'light',\n    backgroundColor: script.getAttribute('data-background-color') || undefined,\n    borderRadius: script.getAttribute('data-border-radius') || undefined,\n    container: script.getAttribute('data-container') || null,\n    height: script.getAttribute('data-height') || '600px',\n    width: script.getAttribute('data-width') || '100%',\n    mode: (script.getAttribute('data-mode') as 'full' | 'auth-only') || 'full'\n  };\n\n  console.log('[Curia] Parsed embed config:', config);\n  console.log('[Curia] Dimensions parsed:', {\n    width: config.width,\n    height: config.height,\n    widthSource: script.getAttribute('data-width') ? 'data-width' : 'default',\n    heightSource: script.getAttribute('data-height') ? 'data-height' : 'default'\n  });\n  return config;\n}\n\n/**\n * Validate embed configuration\n */\nexport function validateEmbedConfig(config: EmbedConfig): void {\n  // Validate theme\n  if (config.theme !== 'light' && config.theme !== 'dark' && config.theme !== 'auto') {\n    console.warn('[Curia] Invalid theme, using light:', config.theme);\n    config.theme = 'light';\n  }\n\n  // Validate background color (if provided)\n  if (config.backgroundColor && !config.backgroundColor.match(/^#[0-9A-Fa-f]{6}$/)) {\n    console.warn('[Curia] Invalid background color format, removing:', config.backgroundColor);\n    config.backgroundColor = undefined;\n  }\n\n  // Validate height format\n  if (config.height && !config.height.match(/^\\d+(px|%|vh|em|rem)$/)) {\n    console.warn('[Curia] Invalid height format, using 600px:', config.height);\n    config.height = '600px';\n  }\n\n  // Validate width format\n  if (config.width && !config.width.match(/^\\d+(px|%|vw|em|rem)$/)) {\n    console.warn('[Curia] Invalid width format, using 100%:', config.width);\n    config.width = '100%';\n  }\n}\n\n/**\n * Generate embed script configuration JavaScript\n */\nexport function generateConfigCode(config: EmbedConfig): string {\n  return `\n  // Get the script element that loaded this code\n  const script = document.currentScript;\n  if (!script) {\n    console.error('[Curia] Could not find script element');\n    return;\n  }\n\n  // Read configuration from data attributes\n  const config = {\n    community: script.getAttribute('data-community') || null,\n    theme: script.getAttribute('data-theme') || 'light',\n    backgroundColor: script.getAttribute('data-background-color') || undefined,\n    borderRadius: script.getAttribute('data-border-radius') || undefined,\n    container: script.getAttribute('data-container') || null,\n    height: script.getAttribute('data-height') || '600px',\n    width: script.getAttribute('data-width') || '100%'\n  };\n\n  console.log('[Curia] Initializing embed with config:', config);\n  `;\n} ", "/**\n * Internal Plugin Host - Self-contained plugin hosting within embed script\n * \n * This class embeds all ClientPluginHost functionality directly into the embed script,\n * making it completely self-contained so customers don't need to implement any logic.\n * \n * Updated to use SessionManager instead of localStorage for session management.\n * \n * Responsibilities:\n * 1. Handle auth completion from embed iframe\n * 2. Manage iframe switching (auth \u2192 forum)\n * 3. Route API requests from forum to host service\n * 4. Maintain auth context throughout session\n */\n\nimport { EmbedConfig } from '../types/EmbedTypes';\nimport { ApiProxyClient } from '@curia_/iframe-api-proxy';\nimport { sessionManager } from '../../SessionManager';\nimport { CommunitySidebar } from '../components';\nimport {\n  AuthenticationService,\n  AuthenticationCallbacks,\n  InternalAuthContext,\n  UserCommunityMembership,\n  UserProfile,\n  MessageRouter,\n  MessageRouterCallbacks,\n  IframeManager,\n  IframeManagerCallbacks\n} from '../services';\n\n// Interface definitions moved to services - imported above\n\nenum InternalMessageType {\n  API_REQUEST = 'api_request',\n  API_RESPONSE = 'api_response',\n  INIT = 'init',\n  ERROR = 'error'\n}\n\n/**\n * Internal plugin message interface\n */\ninterface InternalPluginMessage {\n  type: InternalMessageType;\n  iframeUid: string;\n  requestId: string;\n  method?: string;\n  params?: any;\n  data?: any;\n  error?: string;\n}\n\n/**\n * Get iframe permissions for forum functionality\n */\nfunction getIframePermissions(): string {\n  return [\n    'clipboard-write *',\n    'clipboard-read *', \n    'fullscreen *',\n    'web-share *',\n    'autoplay *',\n    'picture-in-picture *',\n    'payment *',\n    'encrypted-media *',\n    'storage-access *',\n    'camera *',\n    'microphone *',\n    'geolocation *'\n  ].join('; ');\n}\n\n/**\n * Internal Plugin Host - Lean orchestrator using service layer architecture\n * \n * Responsibilities:\n * - Coordinate between services\n * - Manage overall embed lifecycle\n * - Handle UI component composition\n * - Orchestrate phase transitions (auth \u2192 forum)\n */\nexport class InternalPluginHost {\n  private container: HTMLElement;\n  private config: EmbedConfig;\n  \n  // Service Layer - Injected Dependencies\n  private authService: AuthenticationService;\n  private messageRouter: MessageRouter;\n  private iframeManager: IframeManager;\n  private apiProxy: ApiProxyClient;\n  \n  // UI State\n  private communitySidebar: CommunitySidebar | null = null;\n  private embedContainer: HTMLElement | null = null;\n  \n  // Discovery Modal State\n  private discoveryModal: HTMLElement | null = null;\n  private discoveryIframe: HTMLIFrameElement | null = null;\n  \n  // Multi-iframe community switching\n  private communityIframes: Map<string, HTMLIFrameElement> = new Map();\n  private activeCommunityId: string | null = null;\n  \n  // Community polling for sidebar refresh (covers both initial load and switchCommunity joins)\n  private communityPollingTimer: NodeJS.Timeout | null = null;\n  private lastKnownCommunities: UserCommunityMembership[] = [];\n  \n  // Cross-tab update throttling\n  private lastCrossTabReload: number = 0;\n  private readonly CROSS_TAB_RELOAD_THROTTLE = 2000; // 2 seconds\n\n  constructor(container: HTMLElement, config: EmbedConfig, hostServiceUrl: string, forumUrl: string) {\n    this.container = container;\n    this.config = config;\n    \n    // Initialize API proxy\n    this.apiProxy = new ApiProxyClient({\n      debug: true,\n      defaultTimeout: 10000,\n      maxRetries: 3\n    });\n    \n    // Initialize services with dependency injection\n    // Note: Create IframeManager first to get UID for MessageRouter\n    this.iframeManager = new IframeManager(\n      hostServiceUrl,\n      forumUrl,\n      this.apiProxy,\n      {\n        onIframeSwitch: this.onIframeSwitch.bind(this)\n      }\n    );\n    \n    this.authService = new AuthenticationService(hostServiceUrl, {\n      onAuthComplete: this.onAuthComplete.bind(this),\n      onSessionSwitch: this.onSessionSwitch.bind(this),\n      onSignOut: this.onSignOut.bind(this),\n      onCrossTabSessionUpdate: this.onCrossTabUpdate.bind(this)\n    });\n    \n    this.messageRouter = new MessageRouter(\n      this.iframeManager.getUid(),\n      this.apiProxy, // Share the same ApiProxyClient instance!\n      {\n        onAuthComplete: this.onMessageAuthComplete.bind(this),\n        onForumInit: this.onForumInit.bind(this),\n        getAuthContext: () => this.authService.getAuthContext(),\n        onCommunitySwitchRequest: this.handleCommunitySwitchRequest.bind(this),\n        onCommunityDiscoveryComplete: this.handleCommunityDiscoveryComplete.bind(this)\n      }\n    );\n    \n    // Initialize the embed\n    this.initialize();\n    \n    console.log(`[MULTI-IFRAME] InternalPluginHost initialized with multi-iframe community switching support`);\n  }\n\n  /**\n   * Initialize the embed - start with auth phase\n   */\n  private initialize(): void {\n    console.log('[InternalPluginHost] Initializing embed');\n    \n    // Setup message listener and cross-tab sync\n    this.messageRouter.setupMessageListener();\n    this.authService.setupCrossTabSessionListener();\n    \n    // Create and display auth iframe\n    this.initializeAuthPhase();\n  }\n\n  // ============================================================================\n  // SERVICE CALLBACK HANDLERS - Orchestration Logic\n  // ============================================================================\n\n  /**\n   * Handle authentication completion from auth service (with context)\n   */\n  private async onAuthComplete(authData: any, context: InternalAuthContext): Promise<void> {\n    console.log('[InternalPluginHost] Auth completion received from service');\n    \n    // Check for auth-only mode\n    if (authData.mode === 'auth-only') {\n      console.log('[InternalPluginHost] Auth-only mode - staying on auth phase');\n      return;\n    }\n    \n    // Initialize community navigation\n    await this.initializeCommunityNavigation();\n    \n    // Switch to forum phase\n    console.log('[InternalPluginHost] Switching to forum phase');\n    await this.switchToForum();\n  }\n\n  /**\n   * Handle authentication completion from message router (without context)\n   */\n  private async onMessageAuthComplete(authData: any): Promise<void> {\n    console.log('[InternalPluginHost] Auth completion received from message router');\n    \n    // Delegate to auth service handler\n    await this.authService.handleAuthCompletion(authData);\n  }\n\n  /**\n   * Handle session switching from auth service\n   */\n  private async onSessionSwitch(profile: UserProfile): Promise<void> {\n    console.log('[InternalPluginHost] Session switch received from service');\n    \n    // Update community sidebar if it exists\n    if (this.communitySidebar) {\n      this.communitySidebar.updateUserProfile(profile);\n    }\n    \n    // Force iframe reload to prevent crashes from session hot-swap\n    this.iframeManager.reloadCurrentIframe();\n  }\n\n  /**\n   * Handle sign out from auth service\n   */\n  private onSignOut(): void {\n    console.log('[InternalPluginHost] Sign out received from service');\n    this.resetToInitialState();\n  }\n\n  /**\n   * Handle cross-tab session updates with throttling\n   */\n  private onCrossTabUpdate(): void {\n    console.log('[InternalPluginHost] Cross-tab update received from service');\n    \n    // Throttle rapid successive cross-tab updates\n    const now = Date.now();\n    if (now - this.lastCrossTabReload < this.CROSS_TAB_RELOAD_THROTTLE) {\n      console.log('[InternalPluginHost] Cross-tab update throttled - too recent');\n      return;\n    }\n\n    // Get current auth context to check if we actually need to reload\n    const currentAuthContext = this.authService.getAuthContext();\n    if (!currentAuthContext) {\n      console.log('[InternalPluginHost] No auth context - skipping cross-tab update');\n      return;\n    }\n\n    // Only reload if we're in the forum phase (have an iframe that needs session updates)\n    const currentIframe = this.iframeManager.getCurrentIframe();\n    if (currentIframe && currentIframe.src.includes('mod=standalone')) {\n      console.log('[InternalPluginHost] Reloading forum iframe due to cross-tab session change');\n      this.lastCrossTabReload = now;\n      this.iframeManager.reloadCurrentIframe();\n    } else {\n      console.log('[InternalPluginHost] Auth phase - no reload needed for cross-tab update');\n    }\n  }\n\n  /**\n   * Handle forum initialization\n   */\n  private onForumInit(): void {\n    console.log('[InternalPluginHost] Forum initialized');\n  }\n\n  /**\n   * Handle iframe switching\n   */\n  private onIframeSwitch(iframe: HTMLIFrameElement, type: 'auth' | 'forum'): void {\n    console.log(`[InternalPluginHost] Iframe switched to: ${type}`, {\n      iframeSrc: iframe.src,\n      hasContentWindow: !!iframe.contentWindow,\n      iframeUid: this.iframeManager.getUid()\n    });\n    \n    // Could add additional logic here for iframe lifecycle management\n    // For now, the services handle the specifics\n  }\n\n  // ============================================================================\n  // ORCHESTRATION METHODS - Compose services for complex operations\n  // ============================================================================\n\n  /**\n   * Initialize auth phase - now delegates to IframeManager service\n   */\n  private initializeAuthPhase(): void {\n    console.log('[InternalPluginHost] Initializing auth phase via service');\n    \n    // Apply config dimensions to the main container first\n    this.applyContainerDimensions();\n    \n    // Create auth iframe using service\n    const iframe = this.iframeManager.createAuthIframe(this.config);\n    \n    // Add iframe to container\n    this.container.appendChild(iframe);\n    \n    console.log('[InternalPluginHost] Auth iframe created and added to container');\n  }\n\n  /**\n   * Get theme-aware background color based on config and system preferences\n   */\n  private getThemeAwareBackground(): string {\n    // If background color is explicitly set in config, use that\n    if (this.config.backgroundColor) {\n      return this.config.backgroundColor;\n    }\n    \n    // Determine theme\n    let resolvedTheme = this.config.theme || 'light';\n    if (resolvedTheme === 'auto') {\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        resolvedTheme = 'dark';\n      } else {\n        resolvedTheme = 'light';\n      }\n    }\n    \n    // Return theme-appropriate background\n    return resolvedTheme === 'dark' ? '#0f172a' : '#ffffff';\n  }\n\n  /**\n   * Apply config dimensions to the main container element\n   */\n  private applyContainerDimensions(): void {\n    console.log('[InternalPluginHost] Applying container dimensions:', {\n      width: this.config.width,\n      height: this.config.height\n    });\n    \n    // Apply width and height from config to the main container\n    this.container.style.width = this.config.width || '100%';\n    this.container.style.height = this.config.height || '600px';\n    \n    // Ensure the container has proper display properties\n    if (!this.container.style.display) {\n      this.container.style.display = 'block';\n    }\n    \n    // Add border radius if specified\n    if (this.config.borderRadius) {\n      this.container.style.borderRadius = this.config.borderRadius;\n      this.container.style.overflow = 'hidden';\n    }\n    \n    console.log('[InternalPluginHost] Container dimensions applied');\n  }\n\n  /**\n   * Initialize community navigation if user has multiple communities\n   */\n  private async initializeCommunityNavigation(): Promise<void> {\n    console.log('[InternalPluginHost] Initializing community navigation');\n    \n    // Fetch both user communities and profile data from service\n    const [communities, profile] = await Promise.all([\n      this.authService.fetchUserCommunities(),\n      this.authService.fetchUserProfile()\n    ]);\n    \n    // Always show sidebar - adapt content based on community count\n    console.log('[InternalPluginHost] User has', communities.length, 'communities, showing navigation');\n    console.log(`[MULTI-IFRAME] Community navigation initialized - switching enabled for ${communities.length} communities`);\n    \n    // Create community sidebar with user profile and menu action handler\n    this.communitySidebar = new CommunitySidebar({\n      communities,\n      currentCommunityId: this.authService.getAuthContext()?.communityId || '',\n      userProfile: profile,\n      onCommunitySelect: (community) => {\n        console.log('[InternalPluginHost] Community selected:', community.name);\n        console.log(`[MULTI-IFRAME] Community selection triggered for: ${community.id} (${community.name})`);\n        this.switchToCommunity(community.id).catch(error => {\n          console.error(`[MULTI-IFRAME] Failed to switch to community ${community.id}:`, error);\n        });\n      },\n      onMenuAction: (action: string) => this.handleMenuAction(action),\n      getIframeStatus: (communityId: string) => this.hasIframeLoaded(communityId),\n      onPlusButtonClick: () => this.openDiscoveryModal()\n    });\n\n    // Start initial 5-second polling to catch immediate community joins\n    this.startCommunityPolling('initial');\n  }\n\n  /**\n   * Start 5-second community polling (DRY implementation)\n   * Used for both initial load and switchCommunity scenarios\n   */\n  private startCommunityPolling(reason: 'initial' | 'community-switch'): void {\n    console.log(`[InternalPluginHost] Starting 5-second community polling (${reason})`);\n    \n    // Stop any existing polling first\n    this.stopCommunityPolling();\n    \n    let pollCount = 0;\n    const maxPolls = 5;\n    \n    this.communityPollingTimer = setInterval(async () => {\n      pollCount++;\n      console.log(`[InternalPluginHost] Community refresh poll ${pollCount}/${maxPolls} (${reason})`);\n      \n      try {\n        await this.refreshCommunitySidebar();\n      } catch (error) {\n        console.error('[InternalPluginHost] Failed to refresh communities during polling:', error);\n      }\n      \n      // Stop polling after 5 iterations\n      if (pollCount >= maxPolls) {\n        console.log(`[InternalPluginHost] Polling completed (${reason}), switching to event-driven updates`);\n        this.stopCommunityPolling();\n      }\n    }, 1000); // Poll every second for 5 seconds\n  }\n\n  /**\n   * Stop the community polling timer\n   */\n  private stopCommunityPolling(): void {\n    if (this.communityPollingTimer) {\n      clearInterval(this.communityPollingTimer);\n      this.communityPollingTimer = null;\n    }\n  }\n\n  /**\n   * Refresh the community sidebar with fresh data (with flickering prevention)\n   * Used by both initial polling and switchCommunity events\n   */\n  private async refreshCommunitySidebar(): Promise<void> {\n    if (!this.communitySidebar) return;\n    \n    try {\n      const freshCommunities = await this.authService.fetchUserCommunities();\n      \n      // \uD83C\uDFAF FLICKERING FIX: Only update UI if communities actually changed\n      if (this.hasCommunitiesChanged(freshCommunities, this.lastKnownCommunities)) {\n        this.communitySidebar.updateCommunities(freshCommunities);\n        this.lastKnownCommunities = freshCommunities;\n        console.log(`[InternalPluginHost] Sidebar updated with ${freshCommunities.length} communities (changes detected)`);\n      } else {\n        console.log(`[InternalPluginHost] No community changes detected, skipping UI update`);\n      }\n    } catch (error) {\n      console.error('[InternalPluginHost] Failed to refresh community sidebar:', error);\n    }\n  }\n\n  /**\n   * Compare two community arrays to detect actual changes\n   * Prevents unnecessary UI flickering during polling\n   */\n  private hasCommunitiesChanged(\n    newCommunities: UserCommunityMembership[], \n    oldCommunities: UserCommunityMembership[]\n  ): boolean {\n    // Different lengths = definitely changed\n    if (newCommunities.length !== oldCommunities.length) {\n      return true;\n    }\n    \n    // Check if any community IDs are different\n    const newIds = new Set(newCommunities.map(c => c.id));\n    const oldIds = new Set(oldCommunities.map(c => c.id));\n    \n    // Compare sets\n    if (newIds.size !== oldIds.size) return true;\n    \n    for (const id of newIds) {\n      if (!oldIds.has(id)) return true;\n    }\n    \n    return false;\n  }\n\n  /**\n   * Setup container layout - always use flex layout with sidebar\n   */\n  private setupContainerLayout(): void {\n    // Always create flex container with sidebar + iframe layout\n      this.embedContainer = document.createElement('div');\n      this.embedContainer.className = 'curia-embed-container';\n    \n    // Use config dimensions for the embed container - raw CSS values\n    const configWidth = this.config.width || '100%';\n    const configHeight = this.config.height || '600px';\n    \n    console.log('[InternalPluginHost] Setting up container layout with dimensions:', {\n      width: configWidth,\n      height: configHeight,\n      configHeight: this.config.height\n    });\n    \n          // Get theme-aware background color\n    const themeBackground = this.getThemeAwareBackground();\n    \n    this.embedContainer.style.cssText = `\n      display: flex;\n      width: ${configWidth};\n      height: ${configHeight};\n      background: ${themeBackground};\n      border-radius: ${this.config.borderRadius || '8px'};\n      overflow: hidden;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    `;\n\n    // Add navigation sidebar (always present)\n    const navElement = this.communitySidebar!.render();\n      this.embedContainer.appendChild(navElement);\n\n      // Add iframe container\n      const iframeContainer = document.createElement('div');\n      iframeContainer.className = 'curia-iframe-container';\n          iframeContainer.style.cssText = `\n      flex: 1;\n      display: flex;\n      position: relative;\n      background: ${themeBackground};\n      align-items: stretch;\n    `;\n    \n      this.embedContainer.appendChild(iframeContainer);\n\n    // Replace original container content\n      this.container.innerHTML = '';\n      this.container.appendChild(this.embedContainer);\n  }\n\n  /**\n   * Switch to forum phase using services\n   */\n  private async switchToForum(): Promise<void> {\n    console.log('[InternalPluginHost] Switching to forum phase via services');\n    \n    const authContext = this.authService.getAuthContext();\n    if (!authContext) {\n      console.error('[InternalPluginHost] Cannot switch to forum - no auth context');\n      return;\n    }\n\n    // Setup container layout (sidebar + iframe or just iframe)\n    this.setupContainerLayout();\n\n    // Get the iframe container\n    const iframeContainer = this.embedContainer?.querySelector('.curia-iframe-container') || this.container;\n    \n    // Create forum iframe using service\n    const initialIframe = this.iframeManager.createForumIframe(\n      this.config,\n      authContext,\n      iframeContainer as HTMLElement\n    );\n    \n    // Track the initial forum iframe for community switching\n    if (authContext.communityId) {\n      console.log(`[MULTI-IFRAME] Tracking initial forum iframe for community: ${authContext.communityId}`);\n      this.communityIframes.set(authContext.communityId, initialIframe);\n      this.activeCommunityId = authContext.communityId;\n      console.log(`[MULTI-IFRAME] Set active community to: ${authContext.communityId}`);\n    } else {\n      console.log(`[MULTI-IFRAME] No community ID in auth context - initial iframe not tracked`);\n    }\n    \n    console.log('[InternalPluginHost] Forum phase setup complete');\n  }\n\n  /**\n   * Switch to a specific community with state preservation\n   * Implements the TODO for community switching\n   */\n  private async switchToCommunity(communityId: string): Promise<void> {\n    console.log(`[MULTI-IFRAME] Starting community switch to: ${communityId}`);\n    console.log(`[MULTI-IFRAME] Current active community: ${this.activeCommunityId}`);\n    console.log(`[MULTI-IFRAME] Total community iframes tracked: ${this.communityIframes.size}`);\n\n    // Don't switch if already on this community\n    if (this.activeCommunityId === communityId) {\n      console.log(`[MULTI-IFRAME] Already on community ${communityId}, skipping switch`);\n      return;\n    }\n\n    // Get auth context for building forum URLs\n    const authContext = this.authService.getAuthContext();\n    if (!authContext) {\n      console.error(`[MULTI-IFRAME] No auth context available for community switch`);\n      return;\n    }\n\n    // Get or create iframe for target community\n    let targetIframe = this.communityIframes.get(communityId);\n    \n    if (!targetIframe) {\n      console.log(`[MULTI-IFRAME] Creating new iframe for community: ${communityId}`);\n      targetIframe = this.createCommunityIframe(communityId, authContext);\n      this.communityIframes.set(communityId, targetIframe);\n      console.log(`[MULTI-IFRAME] New iframe created and stored for community: ${communityId}`);\n    } else {\n      console.log(`[MULTI-IFRAME] Using existing iframe for community: ${communityId}`);\n    }\n\n    // Hide current active iframe if exists\n    if (this.activeCommunityId) {\n      const currentIframe = this.communityIframes.get(this.activeCommunityId);\n      if (currentIframe) {\n        currentIframe.style.display = 'none';\n        console.log(`[MULTI-IFRAME] Hidden iframe for community: ${this.activeCommunityId}`);\n      }\n    }\n\n    // Show target iframe\n    targetIframe.style.display = 'block';\n    console.log(`[MULTI-IFRAME] Showing iframe for community: ${communityId}`);\n\n    // Update API proxy to route to new active iframe\n    this.apiProxy.setActiveIframe(targetIframe);\n    console.log(`[MULTI-IFRAME] API proxy updated to route to community: ${communityId}`);\n\n    // Update internal state\n    this.activeCommunityId = communityId;\n\n    // \u2705 CRITICAL FIX: Update auth context so API requests use correct community\n    this.authService.updateCommunityContext(communityId);\n\n    // Update sidebar active state\n    if (this.communitySidebar) {\n      this.communitySidebar.updateActiveCommunity(communityId);\n      // Refresh online indicators after iframe status might have changed\n      this.communitySidebar.updateOnlineIndicators();\n      console.log(`[MULTI-IFRAME] Sidebar updated to show active community: ${communityId}`);\n    }\n\n    console.log(`[MULTI-IFRAME] Community switch completed successfully to: ${communityId}`);\n  }\n\n  /**\n   * Create a new forum iframe for a specific community\n   * Based on IframeManager.createForumIframe logic but for community switching\n   */\n  private createCommunityIframe(communityId: string, authContext: InternalAuthContext): HTMLIFrameElement {\n    console.log(`[MULTI-IFRAME] Creating iframe for community: ${communityId}`);\n\n    // Get iframe container (same as in switchToForum)\n    const iframeContainer = this.embedContainer?.querySelector('.curia-iframe-container') || this.container;\n\n    // Build forum URL with community-specific parameters (similar to IframeManager.createForumIframe)\n    const forumUrl = new URL(this.iframeManager['forumUrl']); // Access private property\n    forumUrl.searchParams.set('mod', 'standalone');\n    forumUrl.searchParams.set('iframeUid', this.iframeManager.getUid());\n\n    // Add community ID to URL\n    forumUrl.searchParams.set('community', communityId);\n\n    // Theme resolution (copied from IframeManager)\n    let resolvedTheme = this.config.theme || 'light';\n    if (resolvedTheme === 'auto') {\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        resolvedTheme = 'dark';\n      } else {\n        resolvedTheme = 'light';\n      }\n      console.log(`[MULTI-IFRAME] Resolved auto theme to: ${resolvedTheme}`);\n    }\n    \n    forumUrl.searchParams.set('cg_theme', resolvedTheme);\n    if (this.config.backgroundColor) {\n      forumUrl.searchParams.set('cg_bg_color', this.config.backgroundColor);\n    }\n\n    // Add parent URL parameter if community is pre-specified\n    if (this.config.community && this.config.parentUrl) {\n      const encodedParentUrl = encodeURIComponent(this.config.parentUrl);\n      forumUrl.searchParams.set('cg_parent_url', encodedParentUrl);\n      console.log(`[MULTI-IFRAME] Adding parent URL for community: ${this.config.parentUrl}`);\n    }\n\n    // Add external parameters to forum URL\n    if (authContext.externalParams) {\n      console.log(`[MULTI-IFRAME] Adding external parameters:`, authContext.externalParams);\n      for (const [key, value] of Object.entries(authContext.externalParams)) {\n        forumUrl.searchParams.set(key, value);\n      }\n    }\n\n    console.log(`[MULTI-IFRAME] Forum URL for community ${communityId}:`, forumUrl.toString());\n\n    // Create iframe element (copied styling from IframeManager.createForumIframe)\n    const iframe = document.createElement('iframe');\n    iframe.src = forumUrl.toString();\n    iframe.style.width = '100%';\n    iframe.style.height = '100%';\n    iframe.style.border = 'none';\n    iframe.style.margin = '0';\n    iframe.style.padding = '0';\n    iframe.style.display = 'none'; // Start hidden\n    iframe.style.verticalAlign = 'top';\n    \n    // Apply border radius (only right side since sidebar is on left)\n    const borderRadius = this.config.borderRadius || '8px';\n    iframe.style.borderRadius = `0 ${borderRadius} ${borderRadius} 0`;\n    \n    // Set security attributes\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox');\n    iframe.setAttribute('allow', this.getIframePermissions());\n\n    // Add data attributes for debugging\n    iframe.setAttribute('data-community-id', communityId);\n    iframe.setAttribute('data-iframe-uid', this.iframeManager.getUid());\n\n    console.log(`[MULTI-IFRAME] Iframe element created for community: ${communityId}`);\n\n    // Add to DOM\n    (iframeContainer as HTMLElement).appendChild(iframe);\n    console.log(`[MULTI-IFRAME] Iframe added to DOM for community: ${communityId}`);\n\n    return iframe;\n  }\n\n  /**\n   * Get iframe permissions (copied from IframeManager)\n   */\n  private getIframePermissions(): string {\n    return [\n      'clipboard-write *',\n      'clipboard-read *', \n      'fullscreen *',\n      'web-share *',\n      'autoplay *',\n      'picture-in-picture *',\n      'payment *',\n      'encrypted-media *',\n      'storage-access *',\n      'camera *',\n      'microphone *',\n      'geolocation *'\n    ].join('; ');\n  }\n\n  /**\n   * Simple method to check if a community has an iframe loaded\n   */\n  private hasIframeLoaded(communityId: string): boolean {\n    return this.communityIframes.has(communityId);\n  }\n\n  /**\n   * Handle menu actions from community sidebar\n   */\n  private handleMenuAction(action: string): void {\n    console.log('[InternalPluginHost] Menu action:', action);\n    \n    if (action === 'sign-out') {\n      this.authService.signOut();\n    } else if (action.startsWith('switch-session:')) {\n      const sessionToken = action.replace('switch-session:', '');\n      console.log('[InternalPluginHost] Switching to session:', sessionToken);\n      sessionManager.setActiveSession(sessionToken).catch(error => {\n        console.error('[InternalPluginHost] Failed to switch session:', error);\n      });\n        } else if (action === 'switch-account') {\n      this.addAccount();\n    } else if (action === 'settings') {\n      console.log('[InternalPluginHost] Settings (placeholder)');\n    }\n  }\n\n  /**\n   * Handle community switch requests from forum app\n   */\n  private async handleCommunitySwitchRequest(\n    communityId: string, \n    options?: any\n  ): Promise<any> {\n    console.log(`[InternalPluginHost] Community switch requested: ${communityId}`, options);\n\n    try {\n      // Use existing switchToCommunity logic!\n      await this.switchToCommunity(communityId);\n\n      // \uD83D\uDD04 START POLLING: User will join community during iframe load, so start polling to detect it\n      this.startCommunityPolling('community-switch');\n\n      const result = {\n        switched: true,\n        communityId: communityId\n      };\n\n      console.log(`[InternalPluginHost] Community switch completed successfully:`, result);\n      return result;\n\n    } catch (error) {\n      console.error(`[InternalPluginHost] Community switch failed:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Open discovery modal with community discovery iframe\n   */\n  private openDiscoveryModal(): void {\n    console.log('[InternalPluginHost] Opening community discovery modal');\n    \n    // Close existing modal if open\n    this.closeDiscoveryModal();\n    \n    // Create modal overlay\n    this.discoveryModal = document.createElement('div');\n    this.discoveryModal.className = 'curia-discovery-modal-overlay';\n    this.discoveryModal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.5);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 10000;\n      backdrop-filter: blur(4px);\n    `;\n    \n    // Create modal content container\n    const modalContent = document.createElement('div');\n    modalContent.className = 'curia-discovery-modal-content';\n    modalContent.style.cssText = `\n      background: white;\n      border-radius: 12px;\n      width: 90%;\n      max-width: 600px;\n      height: 80%;\n      max-height: 700px;\n      position: relative;\n      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      overflow: hidden;\n    `;\n    \n    // Create close button\n    const closeButton = document.createElement('button');\n    closeButton.innerHTML = '\u00D7';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 16px;\n      right: 16px;\n      background: rgba(0, 0, 0, 0.1);\n      border: none;\n      border-radius: 50%;\n      width: 32px;\n      height: 32px;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 10001;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: background 0.2s ease;\n    `;\n    \n    closeButton.addEventListener('mouseenter', () => {\n      closeButton.style.background = 'rgba(0, 0, 0, 0.2)';\n    });\n    closeButton.addEventListener('mouseleave', () => {\n      closeButton.style.background = 'rgba(0, 0, 0, 0.1)';\n    });\n    closeButton.addEventListener('click', () => {\n      this.closeDiscoveryModal();\n    });\n    \n    // Create discovery iframe\n    this.discoveryIframe = document.createElement('iframe');\n    this.discoveryIframe.src = `${window.location.origin}/embed?mode=community-discovery`;\n    this.discoveryIframe.style.cssText = `\n      width: 100%;\n      height: 100%;\n      border: none;\n      border-radius: 12px;\n    `;\n    this.discoveryIframe.allow = getIframePermissions();\n    \n    // Assemble modal\n    modalContent.appendChild(closeButton);\n    modalContent.appendChild(this.discoveryIframe);\n    this.discoveryModal.appendChild(modalContent);\n    \n    // Close modal on overlay click\n    this.discoveryModal.addEventListener('click', (e) => {\n      if (e.target === this.discoveryModal) {\n        this.closeDiscoveryModal();\n      }\n    });\n    \n    // Add to DOM\n    document.body.appendChild(this.discoveryModal);\n    \n    console.log('[InternalPluginHost] Discovery modal opened successfully');\n  }\n\n  /**\n   * Close discovery modal and cleanup\n   */\n  private closeDiscoveryModal(): void {\n    if (this.discoveryModal) {\n      console.log('[InternalPluginHost] Closing discovery modal');\n      document.body.removeChild(this.discoveryModal);\n      this.discoveryModal = null;\n      this.discoveryIframe = null;\n    }\n  }\n\n  /**\n   * Handle community discovery completion from discovery iframe\n   */\n  private async handleCommunityDiscoveryComplete(discoveryData: any): Promise<void> {\n    console.log('[InternalPluginHost] Community discovery completed:', discoveryData);\n    \n    const { communityId } = discoveryData;\n    \n    try {\n      // 1. Close discovery modal\n      this.closeDiscoveryModal();\n      \n      // 2. Switch to selected community using existing infrastructure\n      await this.switchToCommunity(communityId);\n      \n      // 3. \uD83D\uDD04 START POLLING: User will join community during iframe load, so start polling to detect it\n      this.startCommunityPolling('community-switch');\n      \n      console.log('[InternalPluginHost] Discovery-to-community switch completed');\n    } catch (error) {\n      console.error('[InternalPluginHost] Discovery community switch failed:', error);\n    }\n  }\n\n  /**\n   * Add account: Reset to initial state for new auth\n   */\n  private addAccount(): void {\n    console.log('[InternalPluginHost] Add account - resetting to initial state');\n        this.resetToInitialState();\n  }\n\n  /**\n   * Reset to initial state - start over with auth\n   */\n  private resetToInitialState(): void {\n    console.log('[InternalPluginHost] Resetting to initial state');\n    \n    // Clean up iframe-related elements\n    this.iframeManager.cleanupPortalElements();\n    \n    // Reset UI state\n    this.communitySidebar = null;\n    this.embedContainer = null;\n    \n    // Clear session using SessionManager\n    try {\n      sessionManager.removeActiveSession().catch(error => {\n        console.error('[InternalPluginHost] Failed to clear session via SessionManager:', error);\n      });\n      console.log('[InternalPluginHost] Session cleared via SessionManager');\n    } catch (error) {\n      console.error('[InternalPluginHost] SessionManager clear error:', error);\n    }\n    \n    // Recreate clean auth iframe\n    this.container.innerHTML = '';\n    this.initializeAuthPhase();\n    \n    console.log('[InternalPluginHost] Reset to initial state complete');\n  }\n\n  /**\n   * Cleanup when embed is destroyed\n   */\n  public destroy(): void {\n    console.log('[InternalPluginHost] Destroying plugin host');\n    \n    // Destroy services\n    if (this.authService) {\n      this.authService.destroy();\n    }\n    \n    if (this.messageRouter) {\n      this.messageRouter.destroy();\n    }\n    \n    if (this.iframeManager) {\n      this.iframeManager.destroy();\n    }\n    \n    // Destroy community sidebar\n    if (this.communitySidebar) {\n      this.communitySidebar.destroy();\n      this.communitySidebar = null;\n    }\n    \n    // Clean up community iframes\n    console.log(`[MULTI-IFRAME] Cleaning up ${this.communityIframes.size} community iframes`);\n    this.communityIframes.forEach((iframe, communityId) => {\n      if (iframe.parentNode) {\n        iframe.parentNode.removeChild(iframe);\n      }\n      console.log(`[MULTI-IFRAME] Removed iframe for community: ${communityId}`);\n    });\n    this.communityIframes.clear();\n    this.activeCommunityId = null;\n    console.log(`[MULTI-IFRAME] Community iframe cleanup complete`);\n    \n    // Clear container\n    this.container.innerHTML = '';\n    this.embedContainer = null;\n    \n    console.log('[InternalPluginHost] Plugin host destroyed');\n  }\n}\n\n ", "/**\n * SessionManager - Centralized session management for Curia\n * \n * Replaces scattered localStorage usage with a unified system that supports:\n * - Multi-account sessions (ENS, Universal Profile, Anonymous)\n * - Database-backed session persistence\n * - Cross-tab synchronization\n * - Automatic token rotation handling\n * - Bulletproof error recovery\n */\n\n// ============================================================================\n// TYPE DEFINITIONS\n// ============================================================================\n\nexport interface SessionData {\n  sessionToken: string;\n  userId: string;\n  identityType: 'ens' | 'universal_profile' | 'anonymous';\n  walletAddress?: string;\n  ensName?: string;\n  upAddress?: string;\n  name?: string;\n  profileImageUrl?: string;\n  expiresAt: Date;\n  lastAccessedAt: Date;\n  isActive: boolean;\n}\n\nexport interface SessionStorage {\n  activeSessions: SessionData[];\n  activeSessionToken: string | null;\n  lastSyncedAt: number;\n  version: number; // For migration handling\n}\n\nexport type SessionChangeListener = (\n  sessions: SessionData[], \n  activeToken: string | null,\n  activeSession: SessionData | null\n) => void;\n\n// ============================================================================\n// CORE SESSION MANAGER CLASS\n// ============================================================================\n\nexport class SessionManager {\n  private static instance: SessionManager;\n  private static readonly STORAGE_KEY = 'curia_sessions';\n  private static readonly LEGACY_TOKEN_KEY = 'curia_session_token';\n  private static readonly STORAGE_VERSION = 1;\n  private static readonly SYNC_INTERVAL = 30_000; // 30 seconds\n  \n  private storage: SessionStorage;\n  private listeners: Set<SessionChangeListener> = new Set();\n  private syncInterval: NodeJS.Timeout | null = null;\n  private isInitialized = false;\n\n  private constructor() {\n    this.storage = this.loadFromStorage();\n    this.setupStorageListener();\n    this.setupPeriodicSync();\n    this.migrateLegacySession();\n    this.isInitialized = true;\n    \n    console.log('[SessionManager] Initialized with', this.storage.activeSessions.length, 'sessions');\n  }\n\n  public static getInstance(): SessionManager {\n    if (!SessionManager.instance) {\n      SessionManager.instance = new SessionManager();\n    }\n    return SessionManager.instance;\n  }\n\n  // ============================================================================\n  // CORE SESSION OPERATIONS\n  // ============================================================================\n\n  /**\n   * Add a new session to the manager\n   */\n  public async addSession(sessionData: Omit<SessionData, 'lastAccessedAt'>): Promise<void> {\n    try {\n      const session: SessionData = {\n        ...sessionData,\n        lastAccessedAt: new Date(),\n        expiresAt: new Date(sessionData.expiresAt),\n      };\n\n      if (!this.validateSession(session)) {\n        throw new Error('Invalid session data provided');\n      }\n\n      // Remove existing session with same token (if any)\n      this.storage.activeSessions = this.storage.activeSessions.filter(\n        s => s.sessionToken !== session.sessionToken\n      );\n\n      // Add new session\n      this.storage.activeSessions.push(session);\n\n      // Set as active if it's the first session\n      if (!this.storage.activeSessionToken) {\n        this.storage.activeSessionToken = session.sessionToken;\n      }\n\n      this.saveToStorage();\n      this.broadcastChange();\n      this.notifyListeners();\n\n      console.log('[SessionManager] Session added:', session.identityType, session.userId);\n    } catch (error) {\n      console.error('[SessionManager] Failed to add session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Remove a session by token\n   */\n  public async removeSession(sessionToken: string): Promise<void> {\n    try {\n      const sessionExists = this.storage.activeSessions.some(s => s.sessionToken === sessionToken);\n      \n      if (!sessionExists) {\n        console.warn('[SessionManager] Attempted to remove non-existent session:', sessionToken);\n        return;\n      }\n\n      // Remove session\n      this.storage.activeSessions = this.storage.activeSessions.filter(\n        s => s.sessionToken !== sessionToken\n      );\n\n      // Update active session if we removed the active one\n      if (this.storage.activeSessionToken === sessionToken) {\n        this.storage.activeSessionToken = this.storage.activeSessions[0]?.sessionToken || null;\n      }\n\n      this.saveToStorage();\n      this.broadcastChange();\n      this.notifyListeners();\n\n      console.log('[SessionManager] Session removed:', sessionToken);\n    } catch (error) {\n      console.error('[SessionManager] Failed to remove session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Set the active session\n   */\n  public async setActiveSession(sessionToken: string): Promise<void> {\n    try {\n      const session = this.getSessionByToken(sessionToken);\n      if (!session) {\n        throw new Error(`Session not found: ${sessionToken}`);\n      }\n\n      if (!session.isActive || session.expiresAt <= new Date()) {\n        throw new Error('Cannot activate expired or inactive session');\n      }\n\n      this.storage.activeSessionToken = sessionToken;\n      \n      // Update last accessed time\n      session.lastAccessedAt = new Date();\n\n      this.saveToStorage();\n      this.broadcastChange();\n      this.notifyListeners();\n\n      console.log('[SessionManager] Active session changed:', session.identityType, session.userId);\n    } catch (error) {\n      console.error('[SessionManager] Failed to set active session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Remove the active session (logout)\n   */\n  public async removeActiveSession(): Promise<void> {\n    try {\n      if (!this.storage.activeSessionToken) {\n        console.warn('[SessionManager] No active session to remove');\n        return;\n      }\n\n      await this.removeSession(this.storage.activeSessionToken);\n      console.log('[SessionManager] Active session removed (logout)');\n    } catch (error) {\n      console.error('[SessionManager] Failed to remove active session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clear all sessions (full logout)\n   */\n  public async clearAllSessions(): Promise<void> {\n    try {\n      this.storage.activeSessions = [];\n      this.storage.activeSessionToken = null;\n      this.storage.lastSyncedAt = Date.now();\n\n      this.saveToStorage();\n      this.broadcastChange();\n      this.notifyListeners();\n\n      console.log('[SessionManager] All sessions cleared');\n    } catch (error) {\n      console.error('[SessionManager] Failed to clear all sessions:', error);\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // GETTERS\n  // ============================================================================\n\n  public getActiveSession(): SessionData | null {\n    if (!this.storage.activeSessionToken) return null;\n    \n    const session = this.getSessionByToken(this.storage.activeSessionToken);\n    if (!session || !session.isActive || session.expiresAt <= new Date()) {\n      // Clean up expired or invalid active session\n      this.storage.activeSessionToken = null;\n      this.saveToStorage();\n      return null;\n    }\n    \n    return session;\n  }\n\n  public getActiveToken(): string | null {\n    const activeSession = this.getActiveSession();\n    return activeSession?.sessionToken || null;\n  }\n\n  public getAllSessions(): SessionData[] {\n    // Filter out expired sessions\n    const validSessions = this.storage.activeSessions.filter(\n      session => session.isActive && session.expiresAt > new Date()\n    );\n\n    // Update storage if we filtered out expired sessions\n    if (validSessions.length !== this.storage.activeSessions.length) {\n      this.storage.activeSessions = validSessions;\n      this.saveToStorage();\n    }\n\n    return validSessions;\n  }\n\n  public getSessionByToken(token: string): SessionData | null {\n    return this.storage.activeSessions.find(s => s.sessionToken === token) || null;\n  }\n\n  public getSessionsByIdentityType(type: 'ens' | 'universal_profile' | 'anonymous'): SessionData[] {\n    return this.getAllSessions().filter(s => s.identityType === type);\n  }\n\n  public isAuthenticated(): boolean {\n    return this.getActiveSession() !== null;\n  }\n\n  // ============================================================================\n  // REACTIVITY & EVENTS\n  // ============================================================================\n\n  public subscribe(callback: SessionChangeListener): () => void {\n    this.listeners.add(callback);\n    \n    // Immediately call with current state\n    if (this.isInitialized) {\n      callback(this.getAllSessions(), this.getActiveToken(), this.getActiveSession());\n    }\n    \n    return () => {\n      this.listeners.delete(callback);\n    };\n  }\n\n  private notifyListeners(): void {\n    const sessions = this.getAllSessions();\n    const activeToken = this.getActiveToken();\n    const activeSession = this.getActiveSession();\n    \n    this.listeners.forEach(callback => {\n      try {\n        callback(sessions, activeToken, activeSession);\n      } catch (error) {\n        console.error('[SessionManager] Listener error:', error);\n      }\n    });\n  }\n\n  // ============================================================================\n  // PERSISTENCE & STORAGE\n  // ============================================================================\n\n  private loadFromStorage(): SessionStorage {\n    try {\n      // \u2705 Browser-only check to prevent SSR errors\n      if (typeof window === 'undefined') {\n        console.log('[SessionManager] SSR environment detected, using default storage');\n        return this.getDefaultStorage();\n      }\n\n      const stored = localStorage.getItem(SessionManager.STORAGE_KEY);\n      if (!stored) {\n        return this.getDefaultStorage();\n      }\n\n      const parsed: SessionStorage = JSON.parse(stored);\n      \n      // Validate and sanitize storage\n      return this.sanitizeStorage(parsed);\n    } catch (error) {\n      console.error('[SessionManager] Failed to load from storage, using defaults:', error);\n      return this.getDefaultStorage();\n    }\n  }\n\n  private saveToStorage(): void {\n    try {\n      // \u2705 Browser-only check to prevent SSR errors\n      if (typeof window === 'undefined') {\n        console.log('[SessionManager] SSR environment detected, skipping storage save');\n        return;\n      }\n\n      const serialized = JSON.stringify({\n        ...this.storage,\n        lastSyncedAt: Date.now(),\n      });\n      \n      localStorage.setItem(SessionManager.STORAGE_KEY, serialized);\n    } catch (error) {\n      if (error instanceof DOMException && error.code === 22) {\n        console.error('[SessionManager] localStorage quota exceeded, clearing old sessions');\n        this.handleStorageQuotaExceeded();\n      } else {\n        console.error('[SessionManager] Failed to save to storage:', error);\n      }\n    }\n  }\n\n  private getDefaultStorage(): SessionStorage {\n    return {\n      activeSessions: [],\n      activeSessionToken: null,\n      lastSyncedAt: Date.now(),\n      version: SessionManager.STORAGE_VERSION,\n    };\n  }\n\n  private sanitizeStorage(storage: SessionStorage): SessionStorage {\n    try {\n      // Ensure version compatibility\n      if (!storage.version || storage.version < SessionManager.STORAGE_VERSION) {\n        console.log('[SessionManager] Migrating storage to version', SessionManager.STORAGE_VERSION);\n        storage.version = SessionManager.STORAGE_VERSION;\n      }\n\n      // Validate and filter sessions\n      const validSessions = (storage.activeSessions || [])\n        .map(session => ({\n          ...session,\n          expiresAt: new Date(session.expiresAt),\n          lastAccessedAt: new Date(session.lastAccessedAt),\n        }))\n        .filter(this.validateSession);\n\n      // Ensure active session is still valid\n      const activeStillValid = validSessions.some(\n        s => s.sessionToken === storage.activeSessionToken\n      );\n\n      return {\n        activeSessions: validSessions,\n        activeSessionToken: activeStillValid \n          ? storage.activeSessionToken \n          : (validSessions[0]?.sessionToken || null),\n        lastSyncedAt: storage.lastSyncedAt || Date.now(),\n        version: SessionManager.STORAGE_VERSION,\n      };\n    } catch (error) {\n      console.error('[SessionManager] Storage sanitization failed:', error);\n      return this.getDefaultStorage();\n    }\n  }\n\n  private validateSession(session: SessionData): boolean {\n    try {\n      return (\n        typeof session.sessionToken === 'string' &&\n        session.sessionToken.length > 10 &&\n        typeof session.userId === 'string' &&\n        session.userId.length > 0 &&\n        ['ens', 'universal_profile', 'anonymous'].includes(session.identityType) &&\n        session.expiresAt instanceof Date &&\n        session.expiresAt > new Date() &&\n        typeof session.isActive === 'boolean' &&\n        session.isActive\n      );\n    } catch {\n      return false;\n    }\n  }\n\n  private handleStorageQuotaExceeded(): void {\n    try {\n      // Remove oldest sessions first, keeping at least the active one\n      const sorted = this.storage.activeSessions.sort(\n        (a, b) => a.lastAccessedAt.getTime() - b.lastAccessedAt.getTime()\n      );\n\n      const activeToken = this.storage.activeSessionToken;\n      const keepSessions = sorted.filter(s => s.sessionToken === activeToken).slice(-3); // Keep last 3\n      \n      this.storage.activeSessions = keepSessions;\n      this.saveToStorage();\n      \n      console.log('[SessionManager] Cleaned up old sessions due to storage quota');\n    } catch (error) {\n      console.error('[SessionManager] Failed to handle storage quota:', error);\n      \n      // Last resort: clear everything (browser-only)\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem(SessionManager.STORAGE_KEY);\n      }\n      this.storage = this.getDefaultStorage();\n    }\n  }\n\n  // ============================================================================\n  // CROSS-TAB SYNCHRONIZATION\n  // ============================================================================\n\n  private setupStorageListener(): void {\n    if (typeof window === 'undefined') return;\n\n    // Listen for localStorage changes from other tabs\n    window.addEventListener('storage', (e) => {\n      if (e.key === SessionManager.STORAGE_KEY && e.newValue) {\n        try {\n          const newStorage: SessionStorage = JSON.parse(e.newValue);\n          this.storage = this.sanitizeStorage(newStorage);\n          this.notifyListeners();\n          console.log('[SessionManager] Cross-tab sync: Session state updated from other tab');\n        } catch (error) {\n          console.error('[SessionManager] Cross-tab sync failed:', error);\n        }\n      }\n    });\n\n    // Listen for custom session events (same-tab updates)\n    window.addEventListener('curia-session-change', () => {\n      this.storage = this.loadFromStorage();\n      this.notifyListeners();\n    });\n  }\n\n  private broadcastChange(): void {\n    if (typeof window !== 'undefined') {\n      window.dispatchEvent(new CustomEvent('curia-session-change', {\n        detail: {\n          activeToken: this.getActiveToken(),\n          sessionCount: this.storage.activeSessions.length,\n        }\n      }));\n    }\n  }\n\n  // ============================================================================\n  // DATABASE SYNCHRONIZATION\n  // ============================================================================\n\n  private setupPeriodicSync(): void {\n    if (typeof window === 'undefined') return;\n\n    // Sync on initialization if we have sessions\n    if (this.storage.activeSessions.length > 0) {\n      this.syncWithDatabase();\n    }\n\n    // Set up periodic sync\n    this.syncInterval = setInterval(() => {\n      if (this.storage.activeSessions.length > 0) {\n        this.syncWithDatabase();\n      }\n    }, SessionManager.SYNC_INTERVAL);\n  }\n\n  public async syncWithDatabase(): Promise<void> {\n    try {\n      const activeToken = this.getActiveToken();\n      if (!activeToken) {\n        console.log('[SessionManager] No active session for database sync');\n        return;\n      }\n\n      const response = await fetch('/api/auth/sessions', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${activeToken}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        console.warn('[SessionManager] Database sync failed:', response.status, response.statusText);\n        return;\n      }\n\n      const dbSessions: SessionData[] = await response.json();\n      \n      // Merge database sessions with localStorage cache\n      const mergedSessions = this.mergeSessionStates(this.storage.activeSessions, dbSessions);\n      \n      this.storage.activeSessions = mergedSessions;\n      this.storage.lastSyncedAt = Date.now();\n      this.saveToStorage();\n      this.notifyListeners();\n\n      console.log('[SessionManager] Database sync completed:', mergedSessions.length, 'sessions');\n    } catch (error) {\n      console.error('[SessionManager] Database sync error:', error);\n      // Graceful degradation - continue with localStorage cache\n    }\n  }\n\n  private mergeSessionStates(localSessions: SessionData[], dbSessions: SessionData[]): SessionData[] {\n    const sessionMap = new Map<string, SessionData>();\n\n    // Start with database sessions (source of truth for metadata)\n    for (const session of dbSessions) {\n      sessionMap.set(session.sessionToken, {\n        ...session,\n        expiresAt: new Date(session.expiresAt),\n        lastAccessedAt: new Date(session.lastAccessedAt),\n      });\n    }\n\n    // Override with localStorage cache for active session context\n    for (const session of localSessions) {\n      const existing = sessionMap.get(session.sessionToken);\n      if (existing) {\n        // Keep database metadata but preserve localStorage context\n        sessionMap.set(session.sessionToken, {\n          ...existing,\n          lastAccessedAt: session.lastAccessedAt, // Keep local access time\n        });\n      }\n    }\n\n    return Array.from(sessionMap.values());\n  }\n\n  // ============================================================================\n  // LEGACY MIGRATION\n  // ============================================================================\n\n  private migrateLegacySession(): void {\n    try {\n      // \u2705 Browser-only check to prevent SSR errors\n      if (typeof window === 'undefined') {\n        console.log('[SessionManager] SSR environment detected, skipping legacy migration');\n        return;\n      }\n\n      const legacyToken = localStorage.getItem(SessionManager.LEGACY_TOKEN_KEY);\n      if (!legacyToken || this.storage.activeSessions.length > 0) {\n        return; // No migration needed\n      }\n\n      console.log('[SessionManager] Migrating legacy session token');\n\n      // Create a placeholder session that will be validated by the next database sync\n      const legacySession: SessionData = {\n        sessionToken: legacyToken,\n        userId: 'legacy-migration', // Will be updated by database sync\n        identityType: 'anonymous', // Will be updated by database sync\n        expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days\n        lastAccessedAt: new Date(),\n        isActive: true,\n      };\n\n      this.storage.activeSessions = [legacySession];\n      this.storage.activeSessionToken = legacyToken;\n      this.saveToStorage();\n\n      // Remove legacy token\n      localStorage.removeItem(SessionManager.LEGACY_TOKEN_KEY);\n      \n      // Trigger immediate database sync to validate and populate session data\n      this.syncWithDatabase();\n\n      console.log('[SessionManager] Legacy session migration completed');\n    } catch (error) {\n      console.error('[SessionManager] Legacy migration failed:', error);\n    }\n  }\n\n  // ============================================================================\n  // CLEANUP\n  // ============================================================================\n\n  public destroy(): void {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n      this.syncInterval = null;\n    }\n    this.listeners.clear();\n    console.log('[SessionManager] Destroyed');\n  }\n}\n\n// ============================================================================\n// SINGLETON INSTANCE & CONVENIENCE EXPORTS\n// ============================================================================\n\nexport const sessionManager = SessionManager.getInstance();\n\n// Convenience functions for simple use cases\nexport const getSessionToken = (): string | null => sessionManager.getActiveToken();\nexport const setSessionToken = (sessionData: Omit<SessionData, 'lastAccessedAt'>): Promise<void> => sessionManager.addSession(sessionData);\nexport const clearSessionToken = (): Promise<void> => sessionManager.removeActiveSession();\nexport const isAuthenticated = (): boolean => sessionManager.isAuthenticated(); ", "/**\n * Gradient utilities for community icons\n * Extracted from InternalPluginHost.ts for better maintainability\n */\n\n/**\n * Get gradient class based on community name\n */\nexport function getGradientClass(name: string): string {\n  // Simple hash function to get consistent gradient based on name\n  let hash = 0;\n  for (let i = 0; i < name.length; i++) {\n    const char = name.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  // Map to gradient classes (8 beautiful gradients)\n  const gradients = [\n    'gradient-blue',     // Blue to indigo\n    'gradient-purple',   // Purple to pink\n    'gradient-green',    // Green to teal\n    'gradient-orange',   // Orange to red\n    'gradient-cyan',     // Cyan to blue\n    'gradient-pink',     // Pink to rose\n    'gradient-yellow',   // Yellow to orange\n    'gradient-teal'      // Teal to green\n  ];\n\n  return gradients[Math.abs(hash) % gradients.length];\n}\n\n/**\n * Get CSS gradient style for a gradient class\n */\nexport function getGradientStyle(gradientClass: string): string {\n  const gradientMap: Record<string, string> = {\n    'gradient-blue': 'linear-gradient(135deg, #3b82f6 0%, #6366f1 100%)',\n    'gradient-purple': 'linear-gradient(135deg, #8b5cf6 0%, #ec4899 100%)',\n    'gradient-green': 'linear-gradient(135deg, #10b981 0%, #06b6d4 100%)',\n    'gradient-orange': 'linear-gradient(135deg, #f59e0b 0%, #ef4444 100%)',\n    'gradient-cyan': 'linear-gradient(135deg, #06b6d4 0%, #3b82f6 100%)',\n    'gradient-pink': 'linear-gradient(135deg, #ec4899 0%, #f43f5e 100%)',\n    'gradient-yellow': 'linear-gradient(135deg, #eab308 0%, #f59e0b 100%)',\n    'gradient-teal': 'linear-gradient(135deg, #14b8a6 0%, #10b981 100%)'\n  };\n\n  return gradientMap[gradientClass] || gradientMap['gradient-blue'];\n}\n\n/**\n * All available gradient classes for reference\n */\nexport const GRADIENT_CLASSES = [\n  'gradient-blue',\n  'gradient-purple', \n  'gradient-green',\n  'gradient-orange',\n  'gradient-cyan',\n  'gradient-pink',\n  'gradient-yellow',\n  'gradient-teal'\n] as const;\n\nexport type GradientClass = typeof GRADIENT_CLASSES[number]; ", "/**\n * Icon utilities for community representations\n * Extracted from InternalPluginHost.ts for better maintainability\n */\n\n/**\n * Get emoji icon for community based on name\n */\nexport function getIconForCommunity(name: string): string {\n  // Clean the name for better matching\n  const cleanName = name.toLowerCase().trim();\n  \n  // Direct matches for common terms\n  if (cleanName.includes('dev') || cleanName.includes('code') || cleanName.includes('tech')) return '\uD83D\uDCBB';\n  if (cleanName.includes('art') || cleanName.includes('design') || cleanName.includes('creative')) return '\uD83C\uDFA8';\n  if (cleanName.includes('music') || cleanName.includes('audio') || cleanName.includes('sound')) return '\uD83C\uDFB5';\n  if (cleanName.includes('game') || cleanName.includes('gaming') || cleanName.includes('play')) return '\uD83C\uDFAE';\n  if (cleanName.includes('book') || cleanName.includes('read') || cleanName.includes('literature')) return '\uD83D\uDCDA';\n  if (cleanName.includes('food') || cleanName.includes('cook') || cleanName.includes('recipe')) return '\uD83C\uDF7D\uFE0F';\n  if (cleanName.includes('travel') || cleanName.includes('explore') || cleanName.includes('adventure')) return '\uD83C\uDF0D';\n  if (cleanName.includes('fitness') || cleanName.includes('gym') || cleanName.includes('workout')) return '\uD83D\uDCAA';\n  if (cleanName.includes('photo') || cleanName.includes('camera') || cleanName.includes('picture')) return '\uD83D\uDCF8';\n  if (cleanName.includes('film') || cleanName.includes('movie') || cleanName.includes('cinema')) return '\uD83C\uDFAC';\n  if (cleanName.includes('science') || cleanName.includes('research') || cleanName.includes('lab')) return '\uD83D\uDD2C';\n  if (cleanName.includes('crypto') || cleanName.includes('bitcoin') || cleanName.includes('blockchain')) return '\u20BF';\n  if (cleanName.includes('nft') || cleanName.includes('collectible') || cleanName.includes('token')) return '\uD83D\uDDBC\uFE0F';\n  if (cleanName.includes('dao') || cleanName.includes('governance') || cleanName.includes('vote')) return '\uD83C\uDFDB\uFE0F';\n  if (cleanName.includes('defi') || cleanName.includes('finance') || cleanName.includes('trading')) return '\uD83D\uDCB0';\n  \n  // Fallback based on first letter hash\n  const icons = [\n    '\uD83D\uDE80', '\u2B50', '\uD83C\uDF1F', '\u2728', '\uD83D\uDD25', '\u26A1', '\uD83D\uDC8E', '\uD83C\uDFAF',\n    '\uD83C\uDFAA', '\uD83C\uDFAD', '\uD83C\uDFA8', '\uD83C\uDFB5', '\uD83C\uDFAE', '\uD83C\uDFC6', '\uD83C\uDF08', '\uD83E\uDD84',\n    '\uD83D\uDC09', '\uD83E\uDD8B', '\uD83C\uDF3A', '\uD83C\uDF40', '\uD83C\uDF19', '\u2600\uFE0F', '\uD83D\uDD2E', '\uD83D\uDCAB'\n  ];\n  \n  // Use first character for consistent selection\n  const charCode = name.charCodeAt(0) || 0;\n  return icons[charCode % icons.length];\n}\n\n/**\n * Get user initials from name\n */\nexport function getUserInitials(name: string): string {\n  if (!name) return '?';\n  \n  const words = name.trim().split(/\\s+/);\n  if (words.length === 1) {\n    return words[0].substring(0, 2).toUpperCase();\n  }\n  \n  return words\n    .slice(0, 2)\n    .map(word => word.charAt(0).toUpperCase())\n    .join('');\n}\n\n/**\n * Identity type icons\n */\nexport function getIdentityIcon(identityType: string): string {\n  const iconMap: Record<string, string> = {\n    'ens': '\uD83C\uDFF7\uFE0F',\n    'universal_profile': '\uD83C\uDD94', \n    'anonymous': '\uD83D\uDC64'\n  };\n  \n  return iconMap[identityType] || '\uD83D\uDC64';\n}\n\n/**\n * All available fallback icons\n */\nexport const FALLBACK_ICONS = [\n  '\uD83D\uDE80', '\u2B50', '\uD83C\uDF1F', '\u2728', '\uD83D\uDD25', '\u26A1', '\uD83D\uDC8E', '\uD83C\uDFAF',\n  '\uD83C\uDFAA', '\uD83C\uDFAD', '\uD83C\uDFA8', '\uD83C\uDFB5', '\uD83C\uDFAE', '\uD83C\uDFC6', '\uD83C\uDF08', '\uD83E\uDD84',\n  '\uD83D\uDC09', '\uD83E\uDD8B', '\uD83C\uDF3A', '\uD83C\uDF40', '\uD83C\uDF19', '\u2600\uFE0F', '\uD83D\uDD2E', '\uD83D\uDCAB'\n] as const;\n\nexport type FallbackIcon = typeof FALLBACK_ICONS[number]; ", "/**\n * CommunityItem Component\n * Renders individual community icons in the sidebar\n * \n * Extracted from InternalPluginHost.ts for better maintainability\n * Handles: logo display, gradient fallbacks, role badges, hover effects\n */\n\nimport { getGradientClass, getGradientStyle, getIconForCommunity } from '../../styling';\n\nexport interface UserCommunityMembership {\n  id: string;\n  name: string;\n  logoUrl: string | null;\n  userRole: 'member' | 'moderator' | 'admin' | 'owner';\n  isMember: boolean;\n}\n\nexport interface CommunityItemOptions {\n  community: UserCommunityMembership;\n  isActive: boolean;\n  hasIframeLoaded?: boolean; // Simple flag: true = iframe in memory, false = not loaded\n  onHover?: (community: UserCommunityMembership, element: HTMLElement) => void;\n  onHoverEnd?: () => void;\n  onClick?: (community: UserCommunityMembership) => void;\n}\n\nexport class CommunityItem {\n  private community: UserCommunityMembership;\n  private isActive: boolean;\n  private options: CommunityItemOptions;\n  private element: HTMLElement | null = null;\n  private hoverTimeout: NodeJS.Timeout | null = null;\n\n  constructor(options: CommunityItemOptions) {\n    this.community = options.community;\n    this.isActive = options.isActive;\n    this.options = options;\n  }\n\n  render(): HTMLElement {\n    const item = document.createElement('div');\n    item.className = `community-item ${this.isActive ? 'active' : ''}`;\n\n    // Create the beautiful background (logo or gradient + emoji)\n    if (this.community.logoUrl) {\n      this.addCommunityLogo(item);\n    } else {\n      this.addGradientFallback(item);\n    }\n\n    // Enhanced hover effects\n    this.addHoverEffects(item);\n\n    // Simple online indicator (tiny green dot if iframe loaded)\n    this.addOnlineIndicator(item);\n\n    // Click handler\n    if (this.options.onClick) {\n      item.addEventListener('click', () => {\n        this.options.onClick?.(this.community);\n      });\n    }\n\n    this.element = item;\n    return item;\n  }\n\n  private addCommunityLogo(item: HTMLElement): void {\n    const logo = document.createElement('img');\n    logo.src = this.community.logoUrl!;\n    logo.alt = this.community.name;\n    logo.className = 'community-icon-image';\n    \n    logo.onerror = () => {\n      // Fallback to gradient + emoji if image fails\n      item.removeChild(logo);\n      this.addGradientFallback(item);\n    };\n    \n    item.appendChild(logo);\n  }\n\n  private addGradientFallback(item: HTMLElement): void {\n    // Generate gradient class and icon using same logic as API\n    const gradientClass = getGradientClass(this.community.name);\n    const icon = getIconForCommunity(this.community.name);\n    \n    // Set gradient background\n    item.style.background = getGradientStyle(gradientClass);\n    \n    // Add emoji icon\n    const iconSpan = document.createElement('span');\n    iconSpan.textContent = icon;\n    iconSpan.className = 'community-icon-emoji';\n    item.appendChild(iconSpan);\n  }\n\n\n\n  private addHoverEffects(item: HTMLElement): void {\n    item.addEventListener('mouseenter', () => {\n      // Show preview card after slight delay (but not for active community)\n      if (!this.isActive && this.options.onHover) {\n        this.hoverTimeout = setTimeout(() => {\n          this.options.onHover?.(this.community, item);\n        }, 500);\n      }\n    });\n\n    item.addEventListener('mouseleave', () => {\n      // Clear timeout\n      if (this.hoverTimeout) {\n        clearTimeout(this.hoverTimeout);\n        this.hoverTimeout = null;\n      }\n      \n      // Notify parent about hover end\n      this.options.onHoverEnd?.();\n    });\n  }\n\n  private addOnlineIndicator(item: HTMLElement): void {\n    // Only show indicator if iframe is loaded\n    if (!this.options.hasIframeLoaded) {\n      return;\n    }\n\n    console.log(`[MULTI-IFRAME] [OnlineIndicator] Adding online dot for community: ${this.community.name}`);\n\n    const indicator = document.createElement('div');\n    indicator.className = 'online-indicator';\n    indicator.style.cssText = `\n      position: absolute;\n      top: -0.5em;\n      right: -0.5em;\n      width: 1em;\n      height: 1em;\n      background: #10b981;\n      border: 0.125em solid var(--sidebar-bg-from, #f8fafc);\n      border-radius: 50%;\n      box-shadow: 0 0.125em 0.25em rgba(0, 0, 0, 0.15);\n      z-index: 10;\n    `;\n    \n    item.appendChild(indicator);\n  }\n\n  /**\n   * Update the active state of this community item\n   */\n  updateActiveState(isActive: boolean): void {\n    if (this.isActive === isActive) return;\n    \n    this.isActive = isActive;\n    \n    if (this.element) {\n      if (isActive) {\n        this.element.classList.add('active');\n      } else {\n        this.element.classList.remove('active');\n      }\n    }\n  }\n\n  /**\n   * Cleanup method for removing event listeners\n   */\n  destroy(): void {\n    if (this.hoverTimeout) {\n      clearTimeout(this.hoverTimeout);\n      this.hoverTimeout = null;\n    }\n    \n    this.element = null;\n  }\n} ", "/**\n * CommunityPreview Component\n * Handles hover preview cards for community items\n * \n * Extracted from InternalPluginHost.ts for better maintainability\n * Uses portal pattern for document-level rendering to avoid z-index issues\n */\n\nimport { getGradientClass, getGradientStyle, getIconForCommunity } from '../../styling';\nimport { UserCommunityMembership } from './CommunityItem';\n\nexport class CommunityPreview {\n  private community: UserCommunityMembership;\n  private triggerElement: HTMLElement;\n  private previewElement: HTMLElement | null = null;\n\n  constructor(community: UserCommunityMembership, triggerElement: HTMLElement) {\n    this.community = community;\n    this.triggerElement = triggerElement;\n  }\n\n  show(): HTMLElement {\n    const preview = document.createElement('div');\n    preview.className = 'community-preview';\n    \n    // Position the preview card relative to trigger element\n    this.positionPreview(preview);\n    \n    // Generate same visual styling as the main icon\n    const gradientClass = getGradientClass(this.community.name);\n    const icon = getIconForCommunity(this.community.name);\n    \n    preview.innerHTML = `\n      <div class=\"community-preview-header\">\n        <div class=\"community-preview-icon\" style=\"background: ${getGradientStyle(gradientClass)}\">\n          ${this.community.logoUrl ? \n            `<img src=\"${this.community.logoUrl}\" alt=\"${this.community.name}\" style=\"width: 100%; height: 100%; object-fit: cover; border-radius: inherit;\">` :\n            `<span style=\"font-size: 18px;\">${icon}</span>`\n          }\n        </div>\n        <div class=\"community-preview-info\">\n          <h4>${this.community.name}</h4>\n          <p>Role: ${this.formatRole(this.community.userRole)}</p>\n        </div>\n      </div>\n      \n      <div class=\"community-preview-stats\">\n        <div class=\"community-preview-stat\">\n          <span>\uD83D\uDC65</span>\n          <span>Community</span>\n        </div>\n        <div class=\"community-preview-stat\">\n          <span>\u2728</span>\n          <span>${this.community.isMember ? 'Member' : 'Visitor'}</span>\n        </div>\n      </div>\n    `;\n\n    // Portal pattern - append to document.body to escape stacking context\n    document.body.appendChild(preview);\n    \n    // Trigger animation\n    requestAnimationFrame(() => {\n      preview.classList.add('show');\n    });\n\n    this.previewElement = preview;\n    return preview;\n  }\n\n  hide(): void {\n    if (this.previewElement) {\n      this.previewElement.classList.remove('show');\n      \n      // Clean up after animation\n      setTimeout(() => {\n        if (this.previewElement && document.body.contains(this.previewElement)) {\n          document.body.removeChild(this.previewElement);\n        }\n        this.previewElement = null;\n      }, 200);\n    }\n  }\n\n  private positionPreview(preview: HTMLElement): void {\n    // Get absolute position of trigger button\n    const rect = this.triggerElement.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const previewWidth = 280; // max-width from CSS\n    const spacing = 16; // spacing from trigger\n\n    // Position preview to the right of trigger with some spacing\n    let left = rect.right + spacing;\n    let top = rect.top;\n\n    // Adjust if preview would go off-screen horizontally\n    if (left + previewWidth > viewportWidth - spacing) {\n      // Position to the left of trigger instead\n      left = rect.left - previewWidth - spacing;\n    }\n\n    // Adjust if preview would go off-screen vertically\n    const previewHeight = 120; // estimated height\n    if (top + previewHeight > viewportHeight - spacing) {\n      top = viewportHeight - previewHeight - spacing;\n    }\n\n    // Ensure preview doesn't go above viewport\n    if (top < spacing) {\n      top = spacing;\n    }\n\n    preview.style.left = `${Math.max(spacing, left)}px`;\n    preview.style.top = `${Math.max(spacing, top)}px`;\n  }\n\n  private formatRole(role: string): string {\n    switch (role) {\n      case 'owner': return '\uD83D\uDC51 Owner';\n      case 'admin': return '\u26A1 Admin';\n      case 'moderator': return '\uD83D\uDEE1\uFE0F Moderator';\n      case 'member': return '\uD83D\uDC64 Member';\n      default: return '\uD83D\uDC64 Member';\n    }\n  }\n}\n\n/**\n * Preview Manager - Handles global preview state\n * Ensures only one preview is shown at a time\n */\nexport class CommunityPreviewManager {\n  private static instance: CommunityPreviewManager;\n  private currentPreview: CommunityPreview | null = null;\n\n  static getInstance(): CommunityPreviewManager {\n    if (!CommunityPreviewManager.instance) {\n      CommunityPreviewManager.instance = new CommunityPreviewManager();\n    }\n    return CommunityPreviewManager.instance;\n  }\n\n  showPreview(community: UserCommunityMembership, triggerElement: HTMLElement): void {\n    // Hide any existing preview\n    this.hidePreview();\n\n    // Create and show new preview\n    this.currentPreview = new CommunityPreview(community, triggerElement);\n    this.currentPreview.show();\n  }\n\n  hidePreview(): void {\n    if (this.currentPreview) {\n      this.currentPreview.hide();\n      this.currentPreview = null;\n    }\n  }\n} ", "/**\n * UserProfile Component\n * Renders the user profile section at the bottom of the sidebar\n * \n * Extracted from InternalPluginHost.ts for better maintainability\n * Handles: avatar display, identity indicators, profile menu interactions\n */\n\nimport { getGradientClass, getGradientStyle, getUserInitials, getIdentityIcon } from '../../styling';\n\nexport interface UserProfile {\n  userId: string;\n  name: string;\n  profilePictureUrl: string | null;\n  identityType: 'ens' | 'universal_profile' | 'anonymous';\n  walletAddress: string | null;\n  ensDomain: string | null;\n  upAddress: string | null;\n  isAnonymous: boolean;\n}\n\nexport interface UserProfileOptions {\n  userProfile: UserProfile;\n  onMenuAction?: (action: string) => void;\n}\n\nexport class UserProfileComponent {\n  private userProfile: UserProfile;\n  private options: UserProfileOptions;\n  private element: HTMLElement | null = null;\n  private profileMenuElement: HTMLElement | null = null;\n\n  constructor(options: UserProfileOptions) {\n    this.userProfile = options.userProfile;\n    this.options = options;\n  }\n\n  render(): HTMLElement {\n    const section = document.createElement('div');\n    section.className = 'user-profile-section';\n    \n    const avatar = document.createElement('div');\n    avatar.className = 'user-profile-avatar';\n\n    // Create avatar content (image or fallback)\n    if (this.userProfile.profilePictureUrl) {\n      this.addUserImage(avatar);\n    } else {\n      this.addUserAvatarFallback(avatar);\n    }\n\n    // Add identity type indicator\n    this.addIdentityIndicator(avatar);\n\n    // Profile menu interactions - click-based\n    this.setupMenuInteractions(avatar);\n\n    section.appendChild(avatar);\n    this.element = section;\n    return section;\n  }\n\n  private addUserImage(avatar: HTMLElement): void {\n    const img = document.createElement('img');\n    img.src = this.userProfile.profilePictureUrl!;\n    img.alt = this.userProfile.name;\n    img.style.cssText = `\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      border-radius: inherit;\n    `;\n    img.onerror = () => {\n      // Fallback to gradient + initials if image fails\n      avatar.removeChild(img);\n      this.addUserAvatarFallback(avatar);\n    };\n    avatar.appendChild(img);\n  }\n\n  private addUserAvatarFallback(avatar: HTMLElement): void {\n    const name = this.userProfile.name || 'User';\n    const gradientClass = getGradientClass(name);\n    \n    // Set gradient background\n    avatar.style.background = getGradientStyle(gradientClass);\n    \n    // Add initials\n    const initials = document.createElement('span');\n    initials.textContent = getUserInitials(name);\n    initials.style.cssText = `\n      color: white;\n      font-weight: 600;\n      font-size: 18px;\n      font-family: system-ui, -apple-system, sans-serif;\n    `;\n    avatar.appendChild(initials);\n  }\n\n  private addIdentityIndicator(avatar: HTMLElement): void {\n    const indicator = document.createElement('div');\n    indicator.style.cssText = `\n      position: absolute;\n      bottom: -2px;\n      right: -2px;\n      width: 18px;\n      height: 18px;\n      border: 2px solid var(--sidebar-bg-from, #f8fafc);\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 10px;\n      background: ${this.getIdentityColor()};\n    `;\n\n    indicator.textContent = getIdentityIcon(this.userProfile.identityType || 'anonymous');\n    avatar.appendChild(indicator);\n  }\n\n  private setupMenuInteractions(avatar: HTMLElement): void {\n    const showMenu = () => {\n      if (this.profileMenuElement) return; // Already open\n\n      this.profileMenuElement = this.createUserProfileMenu(avatar);\n      if (this.profileMenuElement) {\n        document.body.appendChild(this.profileMenuElement);\n        \n        requestAnimationFrame(() => {\n          this.profileMenuElement?.classList.add('show');\n        });\n      }\n    };\n\n    const hideMenu = () => {\n      if (this.profileMenuElement) {\n        this.profileMenuElement.classList.remove('show');\n        setTimeout(() => {\n          if (this.profileMenuElement && document.body.contains(this.profileMenuElement)) {\n            document.body.removeChild(this.profileMenuElement);\n          }\n          this.profileMenuElement = null;\n        }, 200);\n      }\n    };\n\n    // Click to toggle menu\n    avatar.addEventListener('click', (e) => {\n      e.stopPropagation();\n      if (this.profileMenuElement) {\n        hideMenu();\n      } else {\n        showMenu();\n      }\n    });\n\n    // Click outside to close menu\n    document.addEventListener('click', (e) => {\n      if (this.profileMenuElement && \n          !this.profileMenuElement.contains(e.target as Node) && \n          !avatar.contains(e.target as Node)) {\n        hideMenu();\n      }\n    });\n  }\n\n  private createUserProfileMenu(triggerElement: HTMLElement): HTMLElement {\n    // This would be a complex method, so for now I'll create a placeholder\n    // In a more complete refactoring, this would be extracted to a separate ProfileMenu component\n    const menu = document.createElement('div');\n    menu.className = 'user-profile-menu';\n    \n    // Position menu relative to trigger element\n    this.positionMenu(menu, triggerElement);\n\n    // Add rich menu content with avatar and detailed identity info\n    const userName = this.userProfile.name || 'Anonymous User';\n    const hasProfileImage = !!this.userProfile.profilePictureUrl;\n    const gradientClass = this.getGradientClass(userName);\n    const gradientStyle = this.getGradientStyle(gradientClass);\n    \n    menu.innerHTML = `\n      <div class=\"profile-menu-header\">\n        <div class=\"profile-menu-avatar\" style=\"background: ${hasProfileImage ? 'transparent' : gradientStyle}\">\n          ${hasProfileImage ? \n            `<img src=\"${this.userProfile.profilePictureUrl}\" alt=\"${userName}\" style=\"width: 100%; height: 100%; object-fit: cover; border-radius: inherit;\">` :\n            `<span style=\"color: white; font-weight: 600; font-size: 18px;\">${this.getUserInitials(userName)}</span>`\n          }\n        </div>\n        <div class=\"profile-menu-info\">\n          <h4>${userName}</h4>\n          <p>${this.getIdentityLabel()}</p>\n        </div>\n      </div>\n      \n      <div class=\"profile-menu-actions\">\n        <button class=\"profile-menu-action\" data-action=\"settings\">\n          <div class=\"profile-menu-action-icon\">\u2699\uFE0F</div>\n          <span>Settings</span>\n        </button>\n        <button class=\"profile-menu-action\" data-action=\"switch-account\">\n          <div class=\"profile-menu-action-icon\">\uD83D\uDD04</div>\n          <span>Switch Account</span>\n        </button>\n        <button class=\"profile-menu-action\" data-action=\"sign-out\">\n          <div class=\"profile-menu-action-icon\">\uD83D\uDEAA</div>\n          <span>Sign Out</span>\n        </button>\n      </div>\n    `;\n\n    // Add click handlers for menu actions\n    menu.addEventListener('click', (e) => {\n      const target = e.target as HTMLElement;\n      const action = target.closest('[data-action]')?.getAttribute('data-action');\n      if (action && this.options.onMenuAction) {\n        this.options.onMenuAction(action);\n      }\n    });\n\n    return menu;\n  }\n\n  private positionMenu(menu: HTMLElement, triggerElement: HTMLElement): void {\n    const rect = triggerElement.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const menuWidth = 320;\n    const spacing = 8;\n    \n    // Position menu ABOVE the button using BOTTOM positioning\n    let left = rect.right + spacing;\n    let bottom = viewportHeight - rect.top + spacing;\n\n    // Adjust if menu would go off-screen horizontally\n    if (left + menuWidth > viewportWidth - spacing) {\n      left = rect.left - menuWidth - spacing;\n    }\n    \n    if (left < spacing) {\n      left = spacing;\n    }\n\n    menu.style.left = `${left}px`;\n    menu.style.bottom = `${bottom}px`;\n  }\n\n  private getIdentityColor(): string {\n    switch (this.userProfile.identityType) {\n      case 'ens': return 'linear-gradient(135deg, #3b82f6, #1d4ed8)';\n      case 'universal_profile': return 'linear-gradient(135deg, #ec4899, #be185d)';\n      case 'anonymous': return 'linear-gradient(135deg, #6b7280, #4b5563)';\n      default: return 'linear-gradient(135deg, #6b7280, #4b5563)';\n    }\n  }\n\n  private getIdentityLabel(): string {\n    switch (this.userProfile.identityType) {\n      case 'ens':\n        return this.userProfile.ensDomain ? `ENS: ${this.userProfile.ensDomain}` : 'ENS Domain';\n      case 'universal_profile':\n        return this.userProfile.upAddress ? `UP: ${this.userProfile.upAddress.slice(0, 6)}...${this.userProfile.upAddress.slice(-4)}` : 'Universal Profile';\n      case 'anonymous':\n        return 'Anonymous Session';\n      default:\n        return 'User Account';\n    }\n  }\n\n  private getGradientClass(name: string): string {\n    const gradients = [\n      'gradient-pink-purple',\n      'gradient-blue-cyan', \n      'gradient-emerald-teal',\n      'gradient-orange-pink',\n      'gradient-purple-blue',\n      'gradient-cyan-emerald'\n    ];\n    \n    const hash = name.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    return gradients[hash % gradients.length];\n  }\n\n  private getGradientStyle(gradientClass: string): string {\n    const gradientMap: Record<string, string> = {\n      'gradient-pink-purple': 'linear-gradient(135deg, #ec4899, #8b5cf6)',\n      'gradient-blue-cyan': 'linear-gradient(135deg, #3b82f6, #06b6d4)',\n      'gradient-emerald-teal': 'linear-gradient(135deg, #10b981, #14b8a6)',\n      'gradient-orange-pink': 'linear-gradient(135deg, #f97316, #ec4899)',\n      'gradient-purple-blue': 'linear-gradient(135deg, #8b5cf6, #3b82f6)',\n      'gradient-cyan-emerald': 'linear-gradient(135deg, #06b6d4, #10b981)'\n    };\n    \n    return gradientMap[gradientClass] || gradientMap['gradient-blue-cyan'];\n  }\n\n  private getUserInitials(name: string): string {\n    return name\n      .split(' ')\n      .map(word => word.charAt(0))\n      .join('')\n      .substring(0, 2)\n      .toUpperCase();\n  }\n\n  /**\n   * Cleanup method for removing event listeners and DOM elements\n   */\n  destroy(): void {\n    if (this.profileMenuElement) {\n      this.profileMenuElement.remove();\n      this.profileMenuElement = null;\n    }\n    this.element = null;\n  }\n} ", "/**\n * CommunitySidebar Component\n * Main sidebar component that orchestrates community items and user profile\n * \n * Extracted from CommunityNavigationUI class for better maintainability\n * Composes CommunityItem and UserProfile components\n */\n\nimport { CommunityItem, UserCommunityMembership } from './CommunityItem';\nimport { CommunityPreviewManager } from './CommunityPreview';\nimport { UserProfileComponent, UserProfile } from '../profile/UserProfile';\n\nexport interface CommunitySidebarOptions {\n  communities: UserCommunityMembership[];\n  currentCommunityId: string;\n  userProfile: UserProfile | null;\n  onCommunitySelect?: (community: UserCommunityMembership) => void;\n  onMenuAction?: (action: string) => void;\n  getIframeStatus?: (communityId: string) => boolean; // Simple function to check if iframe is loaded\n  onPlusButtonClick?: () => void; // Callback for plus button click (community discovery)\n}\n\nexport class CommunitySidebar {\n  private communities: UserCommunityMembership[];\n  private currentCommunityId: string;\n  private userProfile: UserProfile | null;\n  private options: CommunitySidebarOptions;\n  \n  private container: HTMLElement | null = null;\n  private communityItems: CommunityItem[] = [];\n  private userProfileComponent: UserProfileComponent | null = null;\n  private previewManager: CommunityPreviewManager;\n\n  constructor(options: CommunitySidebarOptions) {\n    this.communities = options.communities;\n    this.currentCommunityId = options.currentCommunityId;\n    this.userProfile = options.userProfile;\n    this.options = options;\n    this.previewManager = CommunityPreviewManager.getInstance();\n  }\n\n  render(): HTMLElement {\n    const nav = document.createElement('div');\n    nav.className = 'curia-community-nav';\n    \n    // Inject external CSS styles - much cleaner than inline!\n    this.injectExternalCSS();\n    \n    // Create scrollable community list container\n    const communityListContainer = document.createElement('div');\n    communityListContainer.className = 'community-list-container';\n    \n    // Add communities to scrollable container\n    this.renderCommunityItems(communityListContainer);\n    \n    nav.appendChild(communityListContainer);\n\n    // Add user profile section at the bottom (fixed)\n    if (this.userProfile) {\n      const userSection = this.renderUserProfile();\n      nav.appendChild(userSection);\n    }\n    \n    this.container = nav;\n    return nav;\n  }\n\n  private renderCommunityItems(container: HTMLElement): void {\n    // Clear existing items\n    this.communityItems.forEach(item => item.destroy());\n    this.communityItems = [];\n\n    this.communities.forEach(community => {\n      const communityItem = new CommunityItem({\n        community,\n        isActive: community.id === this.currentCommunityId,\n        hasIframeLoaded: this.options.getIframeStatus ? this.options.getIframeStatus(community.id) : false,\n        onHover: (community, element) => {\n          this.previewManager.showPreview(community, element);\n        },\n        onHoverEnd: () => {\n          this.previewManager.hidePreview();\n        },\n        onClick: (community) => {\n          if (this.options.onCommunitySelect) {\n            this.options.onCommunitySelect(community);\n          }\n          this.updateActiveCommunity(community.id);\n        }\n      });\n\n      const itemElement = communityItem.render();\n      container.appendChild(itemElement);\n      this.communityItems.push(communityItem);\n    });\n    \n    // Add plus icon placeholder for discovering/creating communities\n    this.addPlusIconPlaceholder(container);\n  }\n\n  /**\n   * Add subtle plus icon placeholder for community discovery/creation\n   */\n  private addPlusIconPlaceholder(container: HTMLElement): void {\n    const plusIcon = document.createElement('div');\n    plusIcon.className = 'community-item plus-icon-placeholder';\n    \n    // Subtle styling for the plus icon\n    plusIcon.style.cssText = `\n      background: rgba(148, 163, 184, 0.1);\n      border: 2px dashed rgba(148, 163, 184, 0.3);\n      color: rgba(148, 163, 184, 0.7);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 1.5rem;\n      transition: all 0.25s ease;\n      cursor: pointer;\n    `;\n    \n    plusIcon.innerHTML = '+';\n    \n    // Hover effect\n    plusIcon.addEventListener('mouseenter', () => {\n      plusIcon.style.borderColor = 'rgba(59, 130, 246, 0.4)';\n      plusIcon.style.backgroundColor = 'rgba(59, 130, 246, 0.05)';\n      plusIcon.style.color = 'rgba(59, 130, 246, 0.8)';\n      plusIcon.style.transform = 'scale(1.08) translateY(-1px)';\n    });\n    \n    plusIcon.addEventListener('mouseleave', () => {\n      plusIcon.style.borderColor = 'rgba(148, 163, 184, 0.3)';\n      plusIcon.style.backgroundColor = 'rgba(148, 163, 184, 0.1)';\n      plusIcon.style.color = 'rgba(148, 163, 184, 0.7)';\n      plusIcon.style.transform = '';\n    });\n    \n    // Click handler for community discovery\n    plusIcon.addEventListener('click', () => {\n      console.log('[CommunitySidebar] Plus icon clicked - opening community discovery');\n      if (this.options.onPlusButtonClick) {\n        this.options.onPlusButtonClick();\n      }\n    });\n    \n    container.appendChild(plusIcon);\n  }\n\n  private renderUserProfile(): HTMLElement {\n    if (!this.userProfile) {\n      throw new Error('Cannot render user profile: userProfile is null');\n    }\n\n    this.userProfileComponent = new UserProfileComponent({\n      userProfile: this.userProfile,\n      onMenuAction: (action) => {\n        if (this.options.onMenuAction) {\n          this.options.onMenuAction(action);\n        }\n      }\n    });\n\n    return this.userProfileComponent.render();\n  }\n\n  /**\n   * Update which community is currently active\n   */\n  updateActiveCommunity(communityId: string): void {\n    if (this.currentCommunityId === communityId) return;\n\n    this.currentCommunityId = communityId;\n\n    // Update all community items\n    this.communityItems.forEach(item => {\n      const isActive = item['community'].id === communityId; // Access private property\n      item.updateActiveState(isActive);\n    });\n  }\n\n  /**\n   * Update the community list with new data\n   */\n  updateCommunities(communities: UserCommunityMembership[]): void {\n    this.communities = communities;\n    \n    if (this.container) {\n      const communityListContainer = this.container.querySelector('.community-list-container');\n      if (communityListContainer) {\n        // Clear existing items\n        communityListContainer.innerHTML = '';\n        this.renderCommunityItems(communityListContainer as HTMLElement);\n      }\n    }\n  }\n\n  /**\n   * Update online indicators after iframe status changes\n   */\n  updateOnlineIndicators(): void {\n    console.log(`[MULTI-IFRAME] [CommunitySidebar] Refreshing online indicators for ${this.communityItems.length} communities`);\n    \n    // Simple approach: re-render the community list to update indicators\n    if (this.container) {\n      const communityListContainer = this.container.querySelector('.community-list-container');\n      if (communityListContainer) {\n        communityListContainer.innerHTML = '';\n        this.renderCommunityItems(communityListContainer as HTMLElement);\n      }\n    }\n  }\n\n  /**\n   * Update user profile information\n   */\n  updateUserProfile(userProfile: UserProfile): void {\n    this.userProfile = userProfile;\n    \n    if (this.container && this.userProfileComponent) {\n      // Remove old profile component\n      const oldProfileElement = this.container.querySelector('.user-profile-section');\n      if (oldProfileElement) {\n        oldProfileElement.remove();\n      }\n      \n      // Add new profile component\n      const userSection = this.renderUserProfile();\n      this.container.appendChild(userSection);\n    }\n  }\n\n  /**\n   * Inject external CSS styles instead of massive inline CSS block\n   * Much cleaner and maintainable approach\n   */\n  private injectExternalCSS(): void {\n    // Check if styles are already injected\n    const existingStyles = document.head.querySelector('#curia-embed-styles');\n    if (existingStyles) {\n      return; // Already injected\n    }\n\n    // For now, we'll inject the CSS content directly\n    // TODO: In future, this could load from external files or be bundled\n    const cssContent = this.getAllCSSContent();\n    \n    const styleElement = document.createElement('style');\n    styleElement.id = 'curia-embed-styles';\n    styleElement.textContent = cssContent;\n    document.head.appendChild(styleElement);\n  }\n\n  /**\n   * Get all CSS content consolidated from our external files\n   * This replaces the massive inline CSS block we removed\n   */\n  private getAllCSSContent(): string {\n    // Import our extracted CSS content\n    // This is a temporary solution - in a proper build system, this would be bundled\n    return `\n/* Community Sidebar Styles - Extracted for maintainability */\n.curia-community-nav {\n  /* CSS Variables */\n  --sidebar-width: 5rem;\n  --sidebar-padding: 1rem;\n  --icon-size: 3rem;\n  --icon-image-size: 2.75rem;\n  --icon-emoji-size: 1.5rem;\n  --icon-border-radius: 0.75rem;\n  --space-xs: 0.5rem;\n  --space-sm: 0.75rem;\n  --space-md: 1rem;\n  --space-lg: 1.25rem;\n  --profile-height: 5.5rem;\n  \n  /* Light theme colors */\n  --sidebar-bg-from: #f8fafc;\n  --sidebar-bg-to: #f1f5f9;\n  --sidebar-border: rgba(148, 163, 184, 0.2);\n  --item-bg: rgba(255, 255, 255, 0.8);\n  --item-hover-bg: rgba(255, 255, 255, 0.95);\n  --item-active-bg: rgba(59, 130, 246, 0.1);\n  --item-active-border: rgba(59, 130, 246, 0.3);\n  --item-active-shadow: rgba(59, 130, 246, 0.2);\n  --preview-bg: rgba(255, 255, 255, 0.95);\n  --preview-border: rgba(148, 163, 184, 0.2);\n  --preview-text: #1f2937;\n  --preview-text-muted: #6b7280;\n\n  /* Layout */\n  width: var(--sidebar-width);\n  height: 100%;\n  min-height: 0;\n  flex-shrink: 0;\n  flex-grow: 0;\n  background: linear-gradient(135deg, var(--sidebar-bg-from) 0%, var(--sidebar-bg-to) 100%);\n  border-right: 1px solid var(--sidebar-border);\n  box-shadow: inset 0.125rem 0 0.25rem rgba(0, 0, 0, 0.05), inset 0 0.125rem 0.25rem rgba(0, 0, 0, 0.03);\n  display: flex;\n  flex-direction: column;\n  padding: var(--sidebar-padding);\n  position: relative;\n}\n\n/* Dark theme */\n[data-theme=\"dark\"] .curia-community-nav,\n.dark .curia-community-nav {\n  --sidebar-bg-from: #1e293b;\n  --sidebar-bg-to: #0f172a;\n  --sidebar-border: rgba(71, 85, 105, 0.3);\n  --item-bg: rgba(30, 41, 59, 0.8);\n  --item-hover-bg: rgba(30, 41, 59, 0.95);\n  --item-active-bg: rgba(59, 130, 246, 0.2);\n  --item-active-border: rgba(59, 130, 246, 0.4);\n  --item-active-shadow: rgba(59, 130, 246, 0.3);\n  --preview-bg: rgba(30, 41, 59, 0.95);\n  --preview-border: rgba(71, 85, 105, 0.3);\n  --preview-text: #f1f5f9;\n  --preview-text-muted: #94a3b8;\n}\n\n/* Community list container */\n.community-list-container {\n  flex: 1;\n  min-height: 0;\n  overflow-y: auto;\n  padding: 0.375rem 0.375rem;\n  margin: 0 -0.375rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.875rem;\n  \n  /* Hide scrollbar but keep functionality */\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE/Edge */\n}\n\n/* Hide webkit scrollbar */\n.community-list-container::-webkit-scrollbar {\n  display: none;\n}\n\n/* Community items */\n.community-item {\n  width: var(--icon-size);\n  height: var(--icon-size);\n  min-width: var(--icon-size);\n  min-height: var(--icon-size);\n  max-width: var(--icon-size);\n  max-height: var(--icon-size);\n  border-radius: var(--icon-border-radius);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: visible;\n  user-select: none;\n  flex-shrink: 0;\n  border: 0.125rem solid transparent;\n  box-shadow: 0 0.125rem 0.5rem rgba(0, 0, 0, 0.1);\n}\n\n.community-item.active {\n  border-color: var(--item-active-border);\n  box-shadow: 0 0.25rem 0.75rem var(--item-active-shadow), 0 0 0 0.0625rem var(--item-active-border);\n}\n\n.community-item:hover:not(.active) {\n  transform: scale(1.08) translateY(-0.0625rem);\n  box-shadow: 0 0.375rem 1.25rem rgba(0, 0, 0, 0.15);\n}\n\n.community-icon-image {\n  width: var(--icon-image-size);\n  height: var(--icon-image-size);\n  object-fit: cover;\n  border-radius: var(--icon-border-radius);\n  margin: 0.125rem;\n  flex-shrink: 0;\n}\n\n.community-icon-emoji {\n  font-size: var(--icon-emoji-size);\n  line-height: 1;\n  width: var(--icon-emoji-size);\n  height: var(--icon-emoji-size);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n}\n\n/* User profile section */\n.user-profile-section {\n  margin-top: var(--space-xs);\n  border-top: 1px solid var(--sidebar-border);\n  flex-shrink: 0;\n  height: var(--profile-height);\n  min-height: var(--profile-height);\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  padding-bottom: var(--space-xs);\n}\n\n.user-profile-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  user-select: none;\n  border: 2px solid transparent;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.user-profile-avatar:hover {\n  transform: scale(1.08) translateY(-1px);\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\n}\n\n/* Preview and menu components - Beautiful premium styling restored */\n.community-preview {\n  position: fixed;\n  min-width: 220px;\n  max-width: 280px;\n  background: var(--preview-bg);\n  border: 1px solid var(--preview-border);\n  border-radius: 12px;\n  padding: 16px;\n  box-shadow: \n    0 20px 40px rgba(0, 0, 0, 0.15),\n    0 8px 16px rgba(0, 0, 0, 0.1);\n  z-index: 999999;\n  opacity: 0;\n  transform: translateX(-8px) scale(0.95);\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n  backdrop-filter: blur(12px);\n}\n\n.community-preview.show {\n  opacity: 1;\n  transform: translateX(0) scale(1);\n  pointer-events: auto;\n}\n\n.community-preview-header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.community-preview-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  flex-shrink: 0;\n}\n\n.community-preview-info h4 {\n  color: var(--preview-text);\n  font-weight: 600;\n  font-size: 16px;\n  margin: 0 0 4px 0;\n  line-height: 1.2;\n}\n\n.community-preview-info p {\n  color: var(--preview-text-muted);\n  font-size: 14px;\n  margin: 0;\n  line-height: 1.3;\n}\n\n.community-preview-stats {\n  display: flex;\n  gap: 16px;\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid var(--preview-border);\n}\n\n.community-preview-stat {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  color: var(--preview-text-muted);\n  font-size: 13px;\n}\n\n.user-profile-menu {\n  position: fixed;\n  min-width: 280px;\n  max-width: 320px;\n  background: var(--preview-bg);\n  border: 1px solid var(--preview-border);\n  border-radius: 12px;\n  padding: 16px;\n  box-shadow: \n    0 20px 40px rgba(0, 0, 0, 0.15),\n    0 8px 16px rgba(0, 0, 0, 0.1);\n  z-index: 999999;\n  opacity: 0;\n  transform: translateX(-8px) scale(0.95);\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n  backdrop-filter: blur(12px);\n}\n\n.user-profile-menu.show {\n  opacity: 1;\n  transform: translateX(0) scale(1);\n  pointer-events: auto;\n}\n\n.profile-menu-header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 16px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--preview-border);\n}\n\n.profile-menu-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n}\n\n.profile-menu-info h4 {\n  color: var(--preview-text);\n  font-weight: 600;\n  font-size: 16px;\n  margin: 0 0 4px 0;\n  line-height: 1.2;\n}\n\n.profile-menu-info p {\n  color: var(--preview-text-muted);\n  font-size: 14px;\n  margin: 0;\n  line-height: 1.3;\n}\n\n.profile-menu-actions {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.profile-menu-action {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  border-radius: 8px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  color: var(--preview-text);\n  font-size: 14px;\n  text-align: left;\n  width: 100%;\n}\n\n.profile-menu-action:hover {\n  background: var(--item-hover-bg);\n}\n\n.profile-menu-action-icon {\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--preview-text-muted);\n}\n\n/* Mobile Responsive - Horizontal Bottom Nav Bar */\n@media (max-width: 767px) {\n  .curia-embed-container {\n    flex-direction: column !important;\n  }\n  \n  .curia-community-nav {\n    /* Transform to horizontal bottom nav */\n    width: 100% !important;\n    height: auto !important;\n    min-height: auto !important;\n    flex-direction: row !important;\n    border-right: none !important;\n    border-top: 1px solid var(--sidebar-border) !important;\n    padding: var(--space-sm) var(--space-md) !important;\n    order: 2; /* Place after iframe */\n  }\n  \n  .community-list-container {\n    /* Horizontal scrolling list */\n    flex-direction: row !important;\n    gap: var(--space-sm) !important;\n    overflow-x: auto !important;\n    overflow-y: hidden !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    flex: 1 !important;\n    min-height: auto !important;\n    \n    /* Hide scrollbar on mobile too */\n    scrollbar-width: none !important; /* Firefox */\n    -ms-overflow-style: none !important; /* IE/Edge */\n  }\n  \n  .community-item,\n  .plus-icon-placeholder {\n    /* Smaller icons for mobile */\n    width: 2.5rem !important;\n    height: 2.5rem !important;\n    min-width: 2.5rem !important;\n    min-height: 2.5rem !important;\n    max-width: 2.5rem !important;\n    max-height: 2.5rem !important;\n    flex-shrink: 0 !important;\n  }\n  \n  .community-icon-image {\n    width: 2.25rem !important;\n    height: 2.25rem !important;\n  }\n  \n  .community-icon-emoji {\n    font-size: 1.25rem !important;\n  }\n  \n  .user-profile-section {\n    /* Profile section on the right side */\n    margin-top: 0 !important;\n    margin-left: var(--space-md) !important;\n    padding-left: var(--space-md) !important;\n    padding-bottom: var(--space-xs) !important;\n    border-top: none !important;\n    border-left: 1px solid var(--sidebar-border) !important;\n    height: auto !important;\n    min-height: auto !important;\n    flex-shrink: 0 !important;\n    display: flex !important;\n    align-items: center !important;\n    justify-content: center !important;\n  }\n  \n  .user-profile-avatar {\n    /* Smaller profile avatar */\n    width: 2.5rem !important;\n    height: 2.5rem !important;\n  }\n  \n  .curia-iframe-container {\n    order: 1; /* Place before nav */\n    flex: 1 !important;\n  }\n}\n    `;\n  }\n\n  /**\n   * Cleanup method for removing event listeners and DOM elements\n   */\n  destroy(): void {\n    // Cleanup community items\n    this.communityItems.forEach(item => item.destroy());\n    this.communityItems = [];\n\n    // Cleanup user profile component\n    if (this.userProfileComponent) {\n      this.userProfileComponent.destroy();\n      this.userProfileComponent = null;\n    }\n\n    // Hide any open preview\n    this.previewManager.hidePreview();\n\n    this.container = null;\n  }\n} ", "/**\n * AuthenticationService\n * Handles all authentication flows, session management, and user data fetching\n * \n * Extracted from InternalPluginHost for better separation of concerns\n * Responsibilities:\n * - Initialize auth phase and create auth iframe\n * - Handle auth completion and session establishment\n * - Fetch user communities and profile data\n * - Handle session switching and cross-tab synchronization\n * - Manage sign-out and session cleanup\n */\n\nimport { sessionManager } from '../../../SessionManager';\n\nexport interface InternalAuthContext {\n  userId: string;\n  communityId: string;\n  sessionToken?: string;\n  externalParams?: Record<string, string>;\n  parentUrl?: string;\n}\n\nexport interface UserCommunityMembership {\n  id: string;\n  name: string;\n  logoUrl: string | null;\n  userRole: 'member' | 'moderator' | 'admin' | 'owner';\n  isMember: boolean;\n}\n\nexport interface UserProfile {\n  userId: string;\n  name: string;\n  profilePictureUrl: string | null;\n  identityType: 'ens' | 'universal_profile' | 'anonymous';\n  walletAddress: string | null;\n  ensDomain: string | null;\n  upAddress: string | null;\n  isAnonymous: boolean;\n}\n\nexport interface AuthConfig {\n  theme?: string;\n  backgroundColor?: string;\n  community?: string;\n  mode?: string;\n  parentUrl?: string;\n  externalParams?: Record<string, string>;\n  width?: string;\n  height?: string;\n  borderRadius?: string;\n}\n\nexport interface AuthenticationCallbacks {\n  onAuthComplete?: (authData: any, context: InternalAuthContext) => Promise<void>;\n  onSessionSwitch?: (profile: UserProfile) => Promise<void>;\n  onSignOut?: () => void;\n  onCrossTabSessionUpdate?: () => void;\n}\n\nexport class AuthenticationService {\n  private hostServiceUrl: string;\n  private authContext: InternalAuthContext | null = null;\n  private callbacks: AuthenticationCallbacks;\n  private sessionListener?: (event: MessageEvent) => void;\n  private crossTabListener?: (event: Event) => void;\n\n  constructor(hostServiceUrl: string, callbacks: AuthenticationCallbacks = {}) {\n    this.hostServiceUrl = hostServiceUrl;\n    this.callbacks = callbacks;\n  }\n\n  /**\n   * Get current authentication context\n   */\n  getAuthContext(): InternalAuthContext | null {\n    return this.authContext;\n  }\n\n  /**\n   * Create and configure auth iframe\n   */\n  createAuthIframe(config: AuthConfig, container: HTMLElement): HTMLIFrameElement {\n    console.log('[AuthenticationService] Creating auth iframe');\n    \n    // Build auth iframe URL with theme and community parameters\n    const authUrl = new URL(`${this.hostServiceUrl}/embed`);\n    authUrl.searchParams.set('theme', config.theme || 'light');\n    \n    if (config.backgroundColor) {\n      authUrl.searchParams.set('background_color', config.backgroundColor);\n    }\n    if (config.community) {\n      authUrl.searchParams.set('community', config.community);\n      console.log('[AuthenticationService] Adding community parameter:', config.community);\n    }\n    if (config.mode) {\n      authUrl.searchParams.set('mode', config.mode);\n      console.log('[AuthenticationService] Adding mode parameter:', config.mode);\n    }\n    \n    // Add parent URL to auth iframe\n    if (config.parentUrl) {\n      const encodedParentUrl = encodeURIComponent(config.parentUrl);\n      authUrl.searchParams.set('cg_parent_url', encodedParentUrl);\n      console.log('[AuthenticationService] Adding parent URL:', config.parentUrl);\n    }\n    \n    // Add external parameters from parent page\n    if (config.externalParams) {\n      console.log('[AuthenticationService] Adding external parameters:', config.externalParams);\n      for (const [key, value] of Object.entries(config.externalParams)) {\n        authUrl.searchParams.set(key, value);\n      }\n    }\n    \n    // Create auth iframe\n    const iframe = document.createElement('iframe');\n    iframe.src = authUrl.toString();\n    iframe.style.width = config.width || '100%';\n    iframe.style.height = config.height || '700px';\n    iframe.style.border = 'none';\n    iframe.style.borderRadius = config.borderRadius || '8px';\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox');\n    iframe.setAttribute('allow', this.getIframePermissions());\n    \n    console.log('[AuthenticationService] Auth iframe created with theme:', config.theme);\n    return iframe;\n  }\n\n  /**\n   * Handle authentication completion from iframe\n   */\n  async handleAuthCompletion(authData: any): Promise<void> {\n    console.log('[AuthenticationService] Auth completion received:', authData);\n    \n    // Store auth context including external parameters and parent URL\n    this.authContext = {\n      userId: authData.userId,\n      communityId: authData.communityId,\n      sessionToken: authData.sessionToken,\n      externalParams: authData.externalParams,\n      parentUrl: authData.parentUrl\n    };\n    \n    console.log('[AuthenticationService] Auth context set:', this.authContext);\n    \n    // Notify parent about auth completion\n    if (this.callbacks.onAuthComplete) {\n      await this.callbacks.onAuthComplete(authData, this.authContext);\n    }\n  }\n\n  /**\n   * Fetch user's community memberships\n   */\n  async fetchUserCommunities(): Promise<UserCommunityMembership[]> {\n    try {\n      console.log('[AuthenticationService] Fetching user communities...');\n      \n      if (!this.authContext?.sessionToken) {\n        console.log('[AuthenticationService] No session token available');\n        return [];\n      }\n\n      // Make direct fetch call to /api/communities with auth\n      const response = await fetch(`${this.hostServiceUrl}/api/communities`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${this.authContext.sessionToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        console.error('[AuthenticationService] Failed to fetch communities:', response.status);\n        return [];\n      }\n\n      const data = await response.json();\n      \n      if (data.userCommunities && Array.isArray(data.userCommunities)) {\n        console.log('[AuthenticationService] Fetched user communities:', data.userCommunities.length);\n        return data.userCommunities.map((community: any) => ({\n          id: community.id,\n          name: community.name,\n          logoUrl: community.logoUrl,\n          userRole: community.userRole,\n          isMember: community.isMember\n        }));\n      }\n\n      return [];\n    } catch (error) {\n      console.error('[AuthenticationService] Error fetching user communities:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Fetch user profile information\n   */\n  async fetchUserProfile(): Promise<UserProfile | null> {\n    try {\n      if (!this.authContext?.sessionToken) {\n        console.log('[AuthenticationService] No session token for user profile fetch');\n        return null;\n      }\n\n      // Use the validate-session endpoint to get user profile data\n      const response = await fetch(`${this.hostServiceUrl}/api/auth/validate-session`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sessionToken: this.authContext.sessionToken\n        })\n      });\n\n      if (!response.ok) {\n        console.error('[AuthenticationService] Failed to fetch user profile:', response.status);\n        return null;\n      }\n\n      const data = await response.json();\n      \n      if (data.user) {\n        return {\n          userId: data.user.user_id,\n          name: data.user.name,\n          profilePictureUrl: data.user.profile_picture_url,\n          identityType: data.user.identity_type,\n          walletAddress: data.user.wallet_address,\n          ensDomain: data.user.ens_domain,\n          upAddress: data.user.up_address,\n          isAnonymous: data.user.is_anonymous\n        };\n      }\n\n      return null;\n    } catch (error) {\n      console.error('[AuthenticationService] Error fetching user profile:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Handle session switching (e.g., from account switcher)\n   */\n  async handleSessionSwitch(): Promise<void> {\n    console.log('[AuthenticationService] Handling session switch');\n    \n    try {\n      // Get the new active session\n      const activeSession = sessionManager.getActiveSession();\n      if (!activeSession) {\n        console.log('[AuthenticationService] No active session after switch');\n        if (this.callbacks.onSignOut) {\n          this.callbacks.onSignOut();\n        }\n        return;\n      }\n\n      // Update user profile from session\n      const userProfile: UserProfile = {\n        userId: activeSession.userId,\n        name: activeSession.name || 'Anonymous User',\n        profilePictureUrl: activeSession.profileImageUrl || null,\n        identityType: activeSession.identityType,\n        walletAddress: activeSession.walletAddress || null,\n        ensDomain: activeSession.ensName || null,\n        upAddress: activeSession.upAddress || null,\n        isAnonymous: activeSession.identityType === 'anonymous',\n      };\n\n      // Notify parent about session switch\n      if (this.callbacks.onSessionSwitch) {\n        await this.callbacks.onSessionSwitch(userProfile);\n      }\n\n      console.log('[AuthenticationService] Session switch completed');\n      \n    } catch (error) {\n      console.error('[AuthenticationService] Failed to handle session switch:', error);\n    }\n  }\n\n  /**\n   * Sign out current user\n   */\n  async signOut(): Promise<void> {\n    console.log('[AuthenticationService] Signing out user');\n    \n    // Clear auth context\n    this.authContext = null;\n    \n    // Clear session using SessionManager\n    try {\n      await sessionManager.removeActiveSession();\n      console.log('[AuthenticationService] Session cleared via SessionManager');\n    } catch (error) {\n      console.error('[AuthenticationService] Failed to clear session:', error);\n    }\n    \n    // Notify parent\n    if (this.callbacks.onSignOut) {\n      this.callbacks.onSignOut();\n    }\n  }\n\n  /**\n   * Setup cross-tab session synchronization\n   */\n  setupCrossTabSessionListener(): void {\n    // Listen for session changes from other tabs\n    this.sessionListener = (event: MessageEvent) => {\n      if (event.data?.type === 'session-updated') {\n        console.log('[AuthenticationService] Cross-tab session update detected');\n        if (this.callbacks.onCrossTabSessionUpdate) {\n          this.callbacks.onCrossTabSessionUpdate();\n        }\n      }\n    };\n\n    window.addEventListener('message', this.sessionListener);\n    \n    // Listen for specific SessionManager cross-tab events (not all storage changes)\n    const crossTabListener = (event: Event) => {\n      // Only respond to SessionManager's specific cross-tab events\n      if (event instanceof CustomEvent && event.type === 'curia-session-change') {\n        console.log('[AuthenticationService] Cross-tab session change detected via custom event');\n        if (this.callbacks.onCrossTabSessionUpdate) {\n          this.callbacks.onCrossTabSessionUpdate();\n        }\n      }\n    };\n    \n    // Store reference for cleanup\n    this.crossTabListener = crossTabListener;\n    window.addEventListener('curia-session-change', crossTabListener);\n    \n    console.log('[AuthenticationService] Cross-tab session listener setup (using custom events)');\n  }\n\n  /**\n   * Get iframe permissions string\n   */\n  private getIframePermissions(): string {\n    return 'camera; microphone; geolocation; clipboard-write; clipboard-read; payment; autoplay; fullscreen';\n  }\n\n  /**\n   * Update the active community context for API requests\n   */\n  updateCommunityContext(communityId: string): void {\n    if (!this.authContext) {\n      console.error('[AuthenticationService] Cannot update community context - no auth context available');\n      return;\n    }\n\n    const previousCommunityId = this.authContext.communityId;\n    this.authContext.communityId = communityId;\n    \n    console.log(`[MULTI-IFRAME] [AuthenticationService] Community context updated:`);\n    console.log(`[MULTI-IFRAME] [AuthenticationService]   Previous: ${previousCommunityId}`);\n    console.log(`[MULTI-IFRAME] [AuthenticationService]   New: ${communityId}`);\n    console.log(`[MULTI-IFRAME] [AuthenticationService] API requests will now use community: ${communityId}`);\n  }\n\n  /**\n   * Clean up listeners and resources\n   */\n  destroy(): void {\n    if (this.sessionListener) {\n      window.removeEventListener('message', this.sessionListener);\n      this.sessionListener = undefined;\n    }\n    \n    if (this.crossTabListener) {\n      window.removeEventListener('curia-session-change', this.crossTabListener);\n      this.crossTabListener = undefined;\n    }\n    \n    this.authContext = null;\n    console.log('[AuthenticationService] Destroyed and cleaned up listeners');\n  }\n} ", "/**\n * MessageRouter Service\n * Handles all iframe messaging, API routing, and inter-frame communication\n * \n * Extracted from InternalPluginHost for better separation of concerns\n * Responsibilities:\n * - Set up message listeners for iframe communication\n * - Route API requests from iframe to host service via proxy\n * - Handle authentication completion messages\n * - Send responses and errors back to iframes\n * - Manage message routing between multiple embed instances\n */\n\nimport { ApiProxyClient } from '@curia_/iframe-api-proxy';\nimport { InternalAuthContext } from '../auth/AuthenticationService';\n\nexport enum InternalMessageType {\n  API_REQUEST = 'api_request',\n  API_RESPONSE = 'api_response',\n  INIT = 'init',\n  ERROR = 'error'\n}\n\nexport interface InternalPluginMessage {\n  type: InternalMessageType;\n  iframeUid: string;\n  requestId: string;\n  method?: string;\n  params?: any;\n  data?: any;\n  error?: string;\n}\n\nexport interface MessageRouterCallbacks {\n  onAuthComplete?: (authData: any) => Promise<void>;\n  onForumInit?: () => void;\n  getAuthContext?: () => InternalAuthContext | null;\n  onCommunitySwitchRequest?: (communityId: string, options?: any) => Promise<any>;\n  onCommunityDiscoveryComplete?: (discoveryData: any) => Promise<void>;\n}\n\nexport class MessageRouter {\n  private apiProxy: ApiProxyClient;\n  private callbacks: MessageRouterCallbacks;\n  private messageListener?: (event: MessageEvent) => void;\n  private myUid: string;\n\n  constructor(\n    myUid: string,\n    apiProxy: ApiProxyClient,\n    callbacks: MessageRouterCallbacks = {}\n  ) {\n    // Use the shared API proxy client (don't create a new one!)\n    this.apiProxy = apiProxy;\n    this.myUid = myUid;\n    this.callbacks = callbacks;\n    \n    console.log('[MessageRouter] Initialized with shared API proxy client');\n  }\n\n  /**\n   * Set up message listener for all plugin communication\n   */\n  setupMessageListener(): void {\n    // Store listener reference for proper cleanup\n    this.messageListener = (event: MessageEvent) => {\n      this.handleMessage(event);\n    };\n    \n    window.addEventListener('message', this.messageListener);\n    console.log('[MessageRouter] Message listener attached for UID:', this.myUid);\n  }\n\n  /**\n   * Handle all incoming messages\n   */\n  private async handleMessage(event: MessageEvent): Promise<void> {\n    if (!event.data || typeof event.data !== 'object') {\n      return;\n    }\n\n    // Handle auth completion from embed iframe\n    if (event.data.type === 'curia-auth-complete') {\n      if (this.callbacks.onAuthComplete) {\n        await this.callbacks.onAuthComplete(event.data);\n      }\n      return;\n    }\n\n    // Handle community discovery completion from embed iframe\n    if (event.data.type === 'curia-community-discovery-complete') {\n      if (this.callbacks.onCommunityDiscoveryComplete) {\n        await this.callbacks.onCommunityDiscoveryComplete(event.data);\n      }\n      return;\n    }\n\n    // Handle API requests from forum\n    const message = event.data as InternalPluginMessage;\n    if (message.type === InternalMessageType.API_REQUEST) {\n      await this.handleApiRequest(message, event.source as Window);\n      return;\n    }\n\n    // Handle other message types\n    if (message.type === InternalMessageType.INIT) {\n      console.log('[MessageRouter] Forum initialized');\n      if (this.callbacks.onForumInit) {\n        this.callbacks.onForumInit();\n      }\n      return;\n    }\n  }\n\n  /**\n   * Handle API requests from forum iframe\n   */\n  private async handleApiRequest(message: InternalPluginMessage, source: Window): Promise<void> {\n    try {\n      console.log('[MessageRouter] API request:', message.method, message.params);\n      \n      // Get auth context from callback\n      const authContext = this.callbacks.getAuthContext?.();\n      if (!authContext) {\n        throw new Error('No authentication context available');\n      }\n\n      // Instance-based UID filtering - only handle our own messages\n      if (message.iframeUid !== this.myUid) {\n        // Silently ignore messages from other embed instances\n        return;\n      }\n\n      // Validate method is provided and supported\n      if (!message.method || !this.isMethodSupported(message.method)) {\n        throw new Error(`Unknown API method: ${message.method}`);\n      }\n\n      // Handle community switching requests locally (not via API proxy)\n      if (message.method === 'switchCommunity') {\n        console.log('[MessageRouter] Handling community switch request:', message.params);\n        \n        if (!this.callbacks.onCommunitySwitchRequest) {\n          throw new Error('Community switching not supported - no callback registered');\n        }\n\n        const { communityId, options } = message.params;\n        if (!communityId) {\n          throw new Error('Missing communityId parameter for community switch');\n        }\n\n        const switchResult = await this.callbacks.onCommunitySwitchRequest(communityId, options);\n        this.sendResponse(source, message, switchResult);\n        return;\n      }\n\n      // Use API proxy client to make request (bypasses CSP restrictions)\n      console.log('[MessageRouter] Making API request via proxy:', message.method);\n      console.log('[MessageRouter] Auth context:', {\n        communityId: authContext.communityId,\n        userId: authContext.userId\n      });\n      console.log(`[MULTI-IFRAME] [MessageRouter] API request \"${message.method}\" using community context: ${authContext.communityId}`);\n      \n      const result = await this.apiProxy.makeApiRequest({\n        method: message.method as any,\n        params: message.params,\n        communityId: authContext.communityId,\n        userId: authContext.userId\n      });\n\n      console.log('[MessageRouter] API proxy response:', result);\n      \n      if (result.success) {\n        // Send successful response\n        this.sendResponse(source, message, result.data);\n      } else {\n        throw new Error(result.error || 'API request failed');\n      }\n      \n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      console.error('[MessageRouter] API error:', errorMessage);\n      this.sendError(source, message, errorMessage);\n    }\n  }\n\n  /**\n   * Send successful response to forum\n   */\n  private sendResponse(source: Window, originalMessage: InternalPluginMessage, data: any): void {\n    const response: InternalPluginMessage = {\n      type: InternalMessageType.API_RESPONSE,\n      iframeUid: originalMessage.iframeUid,\n      requestId: originalMessage.requestId,\n      data: data\n    };\n    \n    source.postMessage(response, '*');\n    console.log('[MessageRouter] Response sent for request:', originalMessage.requestId);\n  }\n\n  /**\n   * Send error response to forum\n   */\n  private sendError(source: Window, originalMessage: InternalPluginMessage, error: string): void {\n    const response: InternalPluginMessage = {\n      type: InternalMessageType.API_RESPONSE,\n      iframeUid: originalMessage.iframeUid,\n      requestId: originalMessage.requestId,\n      error: error\n    };\n    \n    source.postMessage(response, '*');\n    console.log('[MessageRouter] Error response sent for request:', originalMessage.requestId, error);\n  }\n\n  /**\n   * Check if API method is supported\n   */\n  private isMethodSupported(method: string): boolean {\n    const supportedMethods = [\n      'getUserInfo',\n      'getUserFriends', \n      'getContextData',\n      'getCommunityInfo',\n      'giveRole',\n      'switchCommunity'\n    ];\n    \n    return supportedMethods.includes(method);\n  }\n\n  /**\n   * Send a message to an iframe\n   */\n  sendMessageToIframe(iframe: HTMLIFrameElement, message: InternalPluginMessage): void {\n    if (iframe.contentWindow) {\n      iframe.contentWindow.postMessage(message, '*');\n      console.log('[MessageRouter] Message sent to iframe:', message.type, message.requestId);\n    }\n  }\n\n  /**\n   * Update the unique identifier for this embed instance\n   */\n  updateUid(newUid: string): void {\n    this.myUid = newUid;\n    console.log('[MessageRouter] UID updated to:', newUid);\n  }\n\n  /**\n   * Clean up message listeners and resources\n   */\n  destroy(): void {\n    if (this.messageListener) {\n      window.removeEventListener('message', this.messageListener);\n      this.messageListener = undefined;\n      console.log('[MessageRouter] Message listener removed');\n    }\n  }\n} ", "/**\n * IframeManager Service\n * Handles iframe lifecycle, creation, URL building, and DOM management\n * \n * Extracted from InternalPluginHost for better separation of concerns\n * Responsibilities:\n * - Create and configure auth iframes\n * - Create and configure forum iframes\n * - Generate unique iframe UIDs\n * - Handle iframe URL building with parameters\n * - Manage iframe permissions and security attributes\n * - Clean up iframe-related DOM elements\n * - Handle iframe switching between auth and forum phases\n */\n\nimport { ApiProxyClient } from '@curia_/iframe-api-proxy';\nimport { InternalAuthContext } from '../auth/AuthenticationService';\nimport { EmbedConfig } from '../../types/EmbedTypes';\n\nexport interface IframeManagerCallbacks {\n  onIframeSwitch?: (iframe: HTMLIFrameElement, type: 'auth' | 'forum') => void;\n}\n\nexport class IframeManager {\n  private hostServiceUrl: string;\n  private forumUrl: string;\n  private apiProxy: ApiProxyClient;\n  private callbacks: IframeManagerCallbacks;\n  private currentIframe: HTMLIFrameElement | null = null;\n  private myUid: string;\n\n  constructor(\n    hostServiceUrl: string,\n    forumUrl: string,\n    apiProxy: ApiProxyClient,\n    callbacks: IframeManagerCallbacks = {}\n  ) {\n    this.hostServiceUrl = hostServiceUrl;\n    this.forumUrl = forumUrl;\n    this.apiProxy = apiProxy;\n    this.callbacks = callbacks;\n    this.myUid = this.generateIframeUid();\n  }\n\n  /**\n   * Get the current iframe UID\n   */\n  getUid(): string {\n    return this.myUid;\n  }\n\n  /**\n   * Get the currently active iframe\n   */\n  getCurrentIframe(): HTMLIFrameElement | null {\n    return this.currentIframe;\n  }\n\n  /**\n   * Generate unique iframe UID\n   */\n  private generateIframeUid(): string {\n    const timestamp = Date.now().toString(36).toUpperCase();\n    const random = Math.random().toString(36).substring(2, 8).toUpperCase();\n    return `${timestamp}${random}`.substring(0, 10);\n  }\n\n  /**\n   * Create auth iframe with proper configuration\n   */\n  createAuthIframe(config: EmbedConfig): HTMLIFrameElement {\n    console.log('[IframeManager] Creating auth iframe');\n    \n    // Build auth iframe URL\n    const authUrl = new URL(`${this.hostServiceUrl}/embed`);\n    authUrl.searchParams.set('theme', config.theme || 'light');\n    \n    if (config.backgroundColor) {\n      authUrl.searchParams.set('background_color', config.backgroundColor);\n    }\n    if (config.community) {\n      authUrl.searchParams.set('community', config.community);\n    }\n    if (config.mode) {\n      authUrl.searchParams.set('mode', config.mode);\n    }\n    \n    // Add parent URL to auth iframe\n    if (config.parentUrl) {\n      const encodedParentUrl = encodeURIComponent(config.parentUrl);\n      authUrl.searchParams.set('cg_parent_url', encodedParentUrl);\n    }\n    \n    // Add external parameters from parent page\n    if (config.externalParams) {\n      for (const [key, value] of Object.entries(config.externalParams)) {\n        authUrl.searchParams.set(key, value);\n      }\n    }\n    \n    // Create iframe\n    const iframe = document.createElement('iframe');\n    iframe.src = authUrl.toString();\n    iframe.style.width = config.width || '100%';\n    iframe.style.height = config.height || '700px';\n    iframe.style.border = 'none';\n    iframe.style.borderRadius = config.borderRadius || '8px';\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox');\n    iframe.setAttribute('allow', this.getIframePermissions());\n    \n    this.currentIframe = iframe;\n    \n    // Notify callback\n    if (this.callbacks.onIframeSwitch) {\n      this.callbacks.onIframeSwitch(iframe, 'auth');\n    }\n    \n    console.log('[IframeManager] Auth iframe created');\n    return iframe;\n  }\n\n  /**\n   * Create forum iframe with auth context and configuration\n   */\n  createForumIframe(\n    config: EmbedConfig,\n    authContext: InternalAuthContext,\n    targetContainer: HTMLElement\n  ): HTMLIFrameElement {\n    console.log('[IframeManager] Creating forum iframe');\n    \n    // Build forum URL with parameters\n    const forumUrl = new URL(this.forumUrl);\n    forumUrl.searchParams.set('mod', 'standalone');\n    \n    // Theme resolution\n    let resolvedTheme = config.theme || 'light';\n    if (resolvedTheme === 'auto') {\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        resolvedTheme = 'dark';\n      } else {\n        resolvedTheme = 'light';\n      }\n      console.log('[IframeManager] Resolved auto theme to:', resolvedTheme);\n    }\n    \n    forumUrl.searchParams.set('cg_theme', resolvedTheme);\n    if (config.backgroundColor) {\n      forumUrl.searchParams.set('cg_bg_color', config.backgroundColor);\n    }\n    forumUrl.searchParams.set('iframeUid', this.myUid);\n    \n    // Add parent URL parameter ONLY if community is pre-specified\n    if (config.community && config.parentUrl) {\n      const encodedParentUrl = encodeURIComponent(config.parentUrl);\n      forumUrl.searchParams.set('cg_parent_url', encodedParentUrl);\n      console.log('[IframeManager] Adding parent URL (community pre-specified):', config.parentUrl);\n    }\n    \n    // Add external parameters to forum URL\n    if (authContext.externalParams) {\n      console.log('[IframeManager] Adding external parameters to forum iframe:', authContext.externalParams);\n      for (const [key, value] of Object.entries(authContext.externalParams)) {\n        forumUrl.searchParams.set(key, value);\n      }\n    }\n    \n    console.log('[IframeManager] Forum URL:', forumUrl.toString());\n    \n    // Create forum iframe - use 100% to fill the properly-sized container\n    const iframe = document.createElement('iframe');\n    iframe.src = forumUrl.toString();\n    iframe.style.width = '100%';\n    iframe.style.height = '100%';\n    iframe.style.border = 'none';\n    iframe.style.margin = '0';\n    iframe.style.padding = '0';\n    iframe.style.display = 'block';\n    iframe.style.verticalAlign = 'top';\n    // Only apply border radius to right side since sidebar is always present on left\n    const borderRadius = config.borderRadius || '8px';\n    iframe.style.borderRadius = `0 ${borderRadius} ${borderRadius} 0`;\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox');\n    iframe.setAttribute('allow', this.getIframePermissions());\n    \n    console.log('[IframeManager] Forum iframe set to fill container (100% x 100%)');\n    \n    // Add iframe to container\n    targetContainer.appendChild(iframe);\n    this.currentIframe = iframe;\n    \n    // Set forum iframe as active iframe for API proxy\n    this.apiProxy.setActiveIframe(iframe);\n    console.log('[IframeManager] API proxy client configured for forum iframe:', {\n      iframeSrc: iframe.src,\n      hasContentWindow: !!iframe.contentWindow\n    });\n    \n    // Notify callback\n    if (this.callbacks.onIframeSwitch) {\n      this.callbacks.onIframeSwitch(iframe, 'forum');\n    }\n    \n    console.log('[IframeManager] Forum iframe created and added to container');\n    return iframe;\n  }\n\n  /**\n   * Reload the current iframe (useful for session switches)\n   */\n  reloadCurrentIframe(): void {\n    if (this.currentIframe) {\n      console.log('[IframeManager] Reloading current iframe');\n      const currentSrc = this.currentIframe.src;\n      this.currentIframe.src = currentSrc;\n    }\n  }\n\n  /**\n   * Update iframe with new URL parameters\n   */\n  updateIframeUrl(iframe: HTMLIFrameElement, newParams: Record<string, string>): void {\n    const url = new URL(iframe.src);\n    \n    // Add new parameters\n    for (const [key, value] of Object.entries(newParams)) {\n      url.searchParams.set(key, value);\n    }\n    \n    iframe.src = url.toString();\n    console.log('[IframeManager] Updated iframe URL with new parameters');\n  }\n\n  /**\n   * Clean up iframe-related portal elements\n   */\n  cleanupPortalElements(): void {\n    console.log('[IframeManager] Cleaning up iframe portal elements');\n    \n    // Clean up portal elements (community previews, user profile menu)\n    const portals = document.querySelectorAll('.community-preview, .user-profile-menu');\n    portals.forEach(portal => {\n      console.log('[IframeManager] Removing portal element:', portal.className);\n      portal.remove();\n    });\n    \n    console.log('[IframeManager] Portal elements cleanup complete');\n  }\n\n  /**\n   * Remove current iframe and clean up references\n   */\n  removeCurrentIframe(): void {\n    if (this.currentIframe) {\n      console.log('[IframeManager] Removing current iframe');\n      \n      // Remove from DOM\n      if (this.currentIframe.parentNode) {\n        this.currentIframe.parentNode.removeChild(this.currentIframe);\n      }\n      \n      // Clear reference\n      this.currentIframe = null;\n      \n      console.log('[IframeManager] Current iframe removed');\n    }\n  }\n\n  /**\n   * Get iframe permissions string for security attributes\n   */\n  private getIframePermissions(): string {\n    return [\n      'clipboard-write *',\n      'clipboard-read *', \n      'fullscreen *',\n      'web-share *',\n      'autoplay *',\n      'picture-in-picture *',\n      'payment *',\n      'encrypted-media *',\n      'storage-access *',\n      'camera *',\n      'microphone *',\n      'geolocation *'\n    ].join('; ');\n  }\n\n  /**\n   * Regenerate UID (useful for new sessions)\n   */\n  regenerateUid(): string {\n    this.myUid = this.generateIframeUid();\n    console.log('[IframeManager] Generated new UID:', this.myUid);\n    return this.myUid;\n  }\n\n  /**\n   * Clean up resources and references\n   */\n  destroy(): void {\n    console.log('[IframeManager] Destroying iframe manager');\n    \n    // Clean up portal elements\n    this.cleanupPortalElements();\n    \n    // Remove current iframe\n    this.removeCurrentIframe();\n    \n    console.log('[IframeManager] Iframe manager destroyed');\n  }\n} ", "/**\n * Embed Script Entry Point\n * \n * This is the main entry point for the embed.js bundle.\n * It imports the actual TypeScript classes and creates a self-contained script.\n */\n\nimport { EmbedConfig } from './types/EmbedTypes';\nimport { parseEmbedConfig } from './core/EmbedConfig';\nimport { InternalPluginHost } from './plugin-host/InternalPluginHost';\n\n// Use global interface from EmbedTypes (avoids circular import issues)\n// window.curiaEmbed will be InternalPluginHost but typed as any\n\n// Get environment URLs (injected at build time via esbuild define)\ndeclare const CURIA_HOST_URL: string;\ndeclare const CURIA_FORUM_URL: string;\n\n// Capture script element during initial execution when document.currentScript works\nconst EMBED_SCRIPT_ELEMENT = document.currentScript as HTMLScriptElement;\n\n// Validate that we have the script element\nif (!EMBED_SCRIPT_ELEMENT) {\n  console.error('[Embed] Failed to capture script element during initialization');\n}\n\n/**\n * Extract curia_* parameters from parent page URL\n * Converts curia_highlight=comment-123 to ext_highlight=comment-123\n */\nfunction extractCuriaParameters(): Record<string, string> {\n  const params = new URLSearchParams(window.location.search);\n  const curiaParams: Record<string, string> = {};\n  \n  console.log('[Embed] Checking parent page URL for curia_* parameters:', window.location.search);\n  \n  for (const [key, value] of params) {\n    if (key.startsWith('curia_')) {\n      const cleanKey = key.substring(6); // Remove 'curia_' prefix\n      const externalKey = `ext_${cleanKey}`; // Add 'ext_' prefix\n      curiaParams[externalKey] = value;\n      console.log(`[Embed] Found curia parameter: ${key}=${value} \u2192 ${externalKey}=${value}`);\n    }\n  }\n  \n  return curiaParams;\n}\n\n/**\n * Strip curia_* parameters from parent page URL\n * Preserves all other query parameters but removes our internal curia_* params\n */\nfunction stripCuriaParameters(url: string): string {\n  try {\n    const urlObj = new URL(url);\n    \n    // Collect all curia_* parameter keys to delete\n    const keysToDelete: string[] = [];\n    for (const [key] of urlObj.searchParams) {\n      if (key.startsWith('curia_')) {\n        keysToDelete.push(key);\n      }\n    }\n    \n    // Delete all curia_* parameters\n    for (const key of keysToDelete) {\n      urlObj.searchParams.delete(key);\n    }\n    \n    if (keysToDelete.length > 0) {\n      console.log('[Embed] Stripped curia_* parameters:', keysToDelete);\n    }\n    \n    return urlObj.toString();\n  } catch (error) {\n    console.warn('[Embed] Failed to parse parent URL, using original:', url);\n    return url;\n  }\n}\n\n// Main embed initialization function\nfunction initializeEmbed() {\n  console.log('[Embed] Initializing Curia embed script...');\n\n  try {\n    // Capture parent page URL and strip curia_* parameters to prevent recursion\n    const rawParentUrl = window.location.href;\n    const parentUrl = stripCuriaParameters(rawParentUrl);\n    console.log('[Embed] Raw parent page URL:', rawParentUrl);\n    console.log('[Embed] Clean parent page URL (curia_* stripped):', parentUrl);\n    \n    // Extract external parameters from parent page URL\n    const externalParams = extractCuriaParameters();\n    \n    // Parse configuration from script attributes using captured script element\n    // If capture failed, parseEmbedConfig will try document.currentScript as fallback\n    const config = parseEmbedConfig(EMBED_SCRIPT_ELEMENT);\n    \n    // Add parent URL to config\n    config.parentUrl = parentUrl;\n    \n    // Add external parameters to config\n    if (Object.keys(externalParams).length > 0) {\n      config.externalParams = externalParams;\n      console.log('[Embed] External parameters added to config:', externalParams);\n    }\n    \n    console.log('[Embed] Final parsed config:', config);\n\n    // Find or create target container\n    const containerId = config.container || 'curia-forum';\n    let container = document.getElementById(containerId);\n    \n    if (!container) {\n      console.log(`[Embed] Container \"${containerId}\" not found, creating it`);\n      container = document.createElement('div');\n      container.id = containerId;\n      \n      // Try to insert next to script element, otherwise append to body\n      if (EMBED_SCRIPT_ELEMENT?.parentNode) {\n        EMBED_SCRIPT_ELEMENT.parentNode.insertBefore(container, EMBED_SCRIPT_ELEMENT.nextSibling);\n      } else {\n        console.warn('[Embed] No script element available, appending container to body');\n        document.body.appendChild(container);\n      }\n    }\n\n    // Clean up any existing embed instance\n    if (window.curiaEmbed) {\n      console.log('[Embed] Cleaning up existing embed instance');\n      window.curiaEmbed.destroy();\n      delete window.curiaEmbed;\n    }\n\n    // Create new embed instance using the real TypeScript class\n    console.log('[Embed] Creating InternalPluginHost instance');\n    const embedInstance = new InternalPluginHost(\n      container,\n      config,\n      CURIA_HOST_URL,\n      CURIA_FORUM_URL\n    );\n\n    // Store global reference for cleanup\n    window.curiaEmbed = embedInstance;\n    \n    console.log('[Embed] Embed initialized successfully');\n    \n  } catch (error) {\n    console.error('[Embed] Failed to initialize embed:', error);\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initializeEmbed);\n} else {\n  // DOM already loaded, initialize immediately\n  initializeEmbed();\n} "],
  "mappings": "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",
  "names": ["MessageType", "ProxyErrorType", "ApiProxyClient", "community"]
}
